var THREE=THREE||{REVISION:"60"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(e,t){if(Object.keys)for(var r=Object.keys(t),i=0,o=r.length;i<o;i++){var a=r[i];Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}else{var n={}.hasOwnProperty;for(var a in t)n.call(t,a)&&(e[a]=t[a])}return e},function(){for(var e=0,t=["ms","moz","webkit","o"],r=0;r<t.length&&!self.requestAnimationFrame;++r)self.requestAnimationFrame=self[t[r]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[r]+"CancelAnimationFrame"]||self[t[r]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var r=Date.now(),i=Math.max(0,16-(r-e)),o=self.setTimeout(function(){t(r+i)},i);return e=r+i,o}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(0===t)this.r=this.g=this.b=r;else{var i=function(e,t,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e},o=r<=.5?r*(1+t):r+t-r*t,a=2*r-o;this.r=i(a,o,e+1/3),this.g=i(a,o,e),this.b=i(a,o,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)){var t=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)){t=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}if(/^(\w+)$/i.test(e))return this.setHex(THREE.ColorKeywords[e]),this},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var e={h:0,s:0,l:0};return function(){var t,r,i=this.r,o=this.g,a=this.b,n=Math.max(i,o,a),s=Math.min(i,o,a),h=(s+n)/2;if(s===n)t=0,r=0;else{var l=n-s;switch(r=h<=.5?l/(n+s):l/(2-n-s),n){case i:t=(o-a)/l+(o<a?6:0);break;case o:t=(a-i)/l+2;break;case a:t=(i-o)/l+4}t/=6}return e.h=t,e.s=r,e.l=h,e}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){var i=this.getHSL();return i.h+=e,i.s+=t,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(e){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(e){this._x=e,this._updateEuler()},get y(){return this._y},set y(e){this._y=e,this._updateEuler()},get z(){return this._z},set z(e){this._z=e,this._updateEuler()},get w(){return this._w},set w(e){this._w=e,this._updateEuler()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this._updateEuler(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._w=e._w,this._updateEuler(),this},setFromEuler:function(e,t){if(e instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var r=Math.cos(e._x/2),i=Math.cos(e._y/2),o=Math.cos(e._z/2),a=Math.sin(e._x/2),n=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=a*i*o+r*n*s,this._y=r*n*o-a*i*s,this._z=r*i*s+a*n*o,this._w=r*i*o-a*n*s):"YXZ"===e.order?(this._x=a*i*o+r*n*s,this._y=r*n*o-a*i*s,this._z=r*i*s-a*n*o,this._w=r*i*o+a*n*s):"ZXY"===e.order?(this._x=a*i*o-r*n*s,this._y=r*n*o+a*i*s,this._z=r*i*s+a*n*o,this._w=r*i*o-a*n*s):"ZYX"===e.order?(this._x=a*i*o-r*n*s,this._y=r*n*o+a*i*s,this._z=r*i*s-a*n*o,this._w=r*i*o+a*n*s):"YZX"===e.order?(this._x=a*i*o+r*n*s,this._y=r*n*o+a*i*s,this._z=r*i*s-a*n*o,this._w=r*i*o-a*n*s):"XZY"===e.order&&(this._x=a*i*o-r*n*s,this._y=r*n*o-a*i*s,this._z=r*i*s+a*n*o,this._w=r*i*o+a*n*s),!1!==t&&this._updateEuler(),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(r),this._updateEuler(),this},setFromRotationMatrix:function(e){var t,r=e.elements,i=r[0],o=r[4],a=r[8],n=r[1],s=r[5],h=r[9],l=r[2],c=r[6],u=r[10],p=i+s+u;return p>0?(t=.5/Math.sqrt(p+1),this._w=.25/t,this._x=(c-h)*t,this._y=(a-l)*t,this._z=(n-o)*t):i>s&&i>u?(t=2*Math.sqrt(1+i-s-u),this._w=(c-h)/t,this._x=.25*t,this._y=(o+n)/t,this._z=(a+l)/t):s>u?(t=2*Math.sqrt(1+s-i-u),this._w=(a-l)/t,this._x=(o+n)/t,this._y=.25*t,this._z=(h+c)/t):(t=2*Math.sqrt(1+u-i-s),this._w=(n-o)/t,this._x=(a+l)/t,this._y=(h+c)/t,this._z=.25*t),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e._x,i=e._y,o=e._z,a=e._w,n=t._x,s=t._y,h=t._z,l=t._w;return this._x=r*l+a*n+i*h-o*s,this._y=i*l+a*s+o*n-r*h,this._z=o*l+a*h+r*s-i*n,this._w=a*l-r*n-i*s-o*h,this._updateEuler(),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var r=this._x,i=this._y,o=this._z,a=this._w,n=a*e._w+r*e._x+i*e._y+o*e._z;if(n<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,n=-n):this.copy(e),n>=1)return this._w=a,this._x=r,this._y=i,this._z=o,this;var s=Math.acos(n),h=Math.sqrt(1-n*n);if(Math.abs(h)<.001)return this._w=.5*(a+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(o+this._z),this;var l=Math.sin((1-t)*s)/h,c=Math.sin(t*s)/h;return this._w=a*l+this._w*c,this._x=r*l+this._x*c,this._y=i*l+this._y*c,this._z=o*l+this._z*c,this._updateEuler(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],this._w=e[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t}else this.x=0,this.y=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){return this.x=e[0],this.y=e[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[3]*r+o[6]*i,this.y=o[1]*t+o[4]*r+o[7]*i,this.z=o[2]*t+o[5]*r+o[8]*i,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*i+o[12],this.y=o[1]*t+o[5]*r+o[9]*i+o[13],this.z=o[2]*t+o[6]*r+o[10]*i+o[14],this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements,a=1/(o[3]*t+o[7]*r+o[11]*i+o[15]);return this.x=(o[0]*t+o[4]*r+o[8]*i+o[12])*a,this.y=(o[1]*t+o[5]*r+o[9]*i+o[13])*a,this.z=(o[2]*t+o[6]*r+o[10]*i+o[14])*a,this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,o=e.x,a=e.y,n=e.z,s=e.w,h=s*t+a*i-n*r,l=s*r+n*t-o*i,c=s*i+o*r-a*t,u=-o*t-a*r-n*i;return this.x=h*s+u*-o+l*-n-c*-a,this.y=l*s+u*-a+c*-o-h*-n,this.z=c*s+u*-n+h*-a-l*-o,this},transformDirection:function(e){var t=this.x,r=this.y,i=this.z,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*i,this.y=o[1]*t+o[5]*r+o[9]*i,this.z=o[2]*t+o[6]*r+o[10]*i,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,o=this.z;return this.x=i*e.z-o*e.y,this.y=o*e.x-r*e.z,this.z=r*e.y-i*e.x,this},crossVectors:function(e,t){var r=e.x,i=e.y,o=e.z,a=t.x,n=t.y,s=t.z;return this.x=i*s-o*n,this.y=o*a-r*s,this.z=r*n-i*a,this},angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i},setEulerFromRotationMatrix:function(e,t){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(e,t){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),i=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=r,this.z=i,this},getColumnFromMatrix:function(e,t){var r=4*e,i=t.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var e=new THREE.Quaternion;return function(t){return t instanceof THREE.Euler==!1&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e=new THREE.Quaternion;return function(t,r){return this.applyQuaternion(e.setFromAxisAngle(t,r)),this}}(),projectOnVector:function(){var e=new THREE.Vector3;return function(t){e.copy(t).normalize();var r=this.dot(e);return this.copy(e).multiplyScalar(r)}}(),projectOnPlane:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e=new THREE.Vector3;return function(t){return e.copy(this).projectOnVector(t).multiplyScalar(2),this.subVectors(e,this)}}()}),THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,o=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*i+a[12]*o,this.y=a[1]*t+a[5]*r+a[9]*i+a[13]*o,this.z=a[2]*t+a[6]*r+a[10]*i+a[14]*o,this.w=a[3]*t+a[7]*r+a[11]*i+a[15]*o,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t,this.w*=t}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i,o,a=e.elements,n=a[0],s=a[4],h=a[8],l=a[1],c=a[5],u=a[9],p=a[2],f=a[6],E=a[10];if(Math.abs(s-l)<.01&&Math.abs(h-p)<.01&&Math.abs(u-f)<.01){if(Math.abs(s+l)<.1&&Math.abs(h+p)<.1&&Math.abs(u+f)<.1&&Math.abs(n+c+E-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var d=(n+1)/2,m=(c+1)/2,g=(E+1)/2,v=(s+l)/4,T=(h+p)/4,y=(u+f)/4;return d>m&&d>g?d<.01?(r=0,i=.707106781,o=.707106781):(i=v/(r=Math.sqrt(d)),o=T/r):m>g?m<.01?(r=.707106781,i=0,o=.707106781):(r=v/(i=Math.sqrt(m)),o=y/i):g<.01?(r=.707106781,i=.707106781,o=0):(r=T/(o=Math.sqrt(g)),i=y/o),this.set(r,i,o,t),this}var R=Math.sqrt((f-u)*(f-u)+(h-p)*(h-p)+(l-s)*(l-s));return Math.abs(R)<.001&&(R=1),this.x=(f-u)/R,this.y=(h-p)/R,this.z=(l-s)/R,this.w=Math.acos((n+c+E-1)/2),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(e){this._x=e,this._updateQuaternion()},get y(){return this._y},set y(e){this._y=e,this._updateQuaternion()},get z(){return this._z},set z(e){this._z=e,this._updateQuaternion()},get order(){return this._order},set order(e){this._order=e,this._updateQuaternion()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._order=i||this._order,this._updateQuaternion(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._updateQuaternion(),this},setFromRotationMatrix:function(e,t){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.elements,o=i[0],a=i[4],n=i[8],s=i[1],h=i[5],l=i[9],c=i[2],u=i[6],p=i[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(r(n)),Math.abs(n)<.99999?(this._x=Math.atan2(-l,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(l)),Math.abs(l)<.99999?(this._y=Math.atan2(n,p),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,o),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(u)),Math.abs(u)<.99999?(this._y=Math.atan2(-c,p),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(s,o))):"ZYX"===t?(this._y=Math.asin(-r(c)),Math.abs(c)<.99999?(this._x=Math.atan2(u,p),this._z=Math.atan2(s,o)):(this._x=0,this._z=Math.atan2(-a,h))):"YZX"===t?(this._z=Math.asin(r(s)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,o)):(this._x=0,this._y=Math.atan2(n,p))):"XZY"===t?(this._z=Math.asin(-r(a)),Math.abs(a)<.99999?(this._x=Math.atan2(u,h),this._y=Math.atan2(n,o)):(this._x=Math.atan2(-l,p),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t),this._order=t,this._updateQuaternion(),this},setFromQuaternion:function(e,t,r){function i(e){return Math.min(Math.max(e,-1),1)}var o=e.x*e.x,a=e.y*e.y,n=e.z*e.z,s=e.w*e.w;return"XYZ"===(t=t||this._order)?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),s-o-a+n),this._y=Math.asin(i(2*(e.x*e.z+e.y*e.w))),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s+o-a-n)):"YXZ"===t?(this._x=Math.asin(i(2*(e.x*e.w-e.y*e.z))),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s-o-a+n),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s-o+a-n)):"ZXY"===t?(this._x=Math.asin(i(2*(e.x*e.w+e.y*e.z))),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),s-o-a+n),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s-o+a-n)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),s-o-a+n),this._y=Math.asin(i(2*(e.y*e.w-e.x*e.z))),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s+o-a-n)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),s-o+a-n),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),s+o-a-n),this._z=Math.asin(i(2*(e.x*e.y+e.z*e.w)))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),s-o+a-n),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s+o-a-n),this._z=Math.asin(i(2*(e.z*e.w-e.x*e.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t),this._order=t,!1!==r&&this._updateQuaternion(),this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var o=t.dot(t),a=t.dot(e)/o;return i&&(a=THREE.Math.clamp(a,0,1)),a}}(),closestPointToPoint:function(e,t,r){var i=this.closestPointToPointParameter(e,t),o=r||new THREE.Vector3;return this.delta(o).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;r<i;r++)(t=e[r]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},addPoint:function(e){e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;r<i;r++)this.addPoint(e[r])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var i=t.geometry.vertices,o=0,a=i.length;o<a;o++)e.copy(i[o]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){var r=t||new THREE.Sphere;return r.center=this.center(),r.radius=.5*this.size(e).length(),r}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(e,t,r,i,o,a,n,s,h){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,r||0,i||0,void 0!==o?o:1,a||0,n||0,s||0,void 0!==h?h:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,o,a,n,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=r,l[1]=i,l[4]=o,l[7]=a,l[2]=n,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var r=0,i=t.length;r<i;r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyMatrix3(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],o=e[3],a=e[4],n=e[5],s=e[6],h=e[7],l=e[8];return t*a*l-t*n*h-r*o*l+r*n*s+i*o*h-i*a*s},getInverse:function(e,t){var r=e.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4];var o=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===o){var a="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(a);return console.warn(a),this.identity(),this}return this.multiplyScalar(1/o),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix4=function(e,t,r,i,o,a,n,s,h,l,c,u,p,f,E,d){this.elements=new Float32Array(16);var m=this.elements;m[0]=void 0!==e?e:1,m[4]=t||0,m[8]=r||0,m[12]=i||0,m[1]=o||0,m[5]=void 0!==a?a:1,m[9]=n||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=p||0,m[7]=f||0,m[11]=E||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,o,a,n,s,h,l,c,u,p,f,E,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=o,m[5]=a,m[9]=n,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=p,m[7]=f,m[11]=E,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var r=this.elements,i=t.elements,o=1/e.set(i[0],i[1],i[2]).length(),a=1/e.set(i[4],i[5],i[6]).length(),n=1/e.set(i[8],i[9],i[10]).length();return r[0]=i[0]*o,r[1]=i[1]*o,r[2]=i[2]*o,r[4]=i[4]*a,r[5]=i[5]*a,r[6]=i[6]*a,r[8]=i[8]*n,r[9]=i[9]*n,r[10]=i[10]*n,this}}(),makeRotationFromEuler:function(e){e instanceof THREE.Euler==!1&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,r=e.x,i=e.y,o=e.z,a=Math.cos(r),n=Math.sin(r),s=Math.cos(i),h=Math.sin(i),l=Math.cos(o),c=Math.sin(o);if("XYZ"===e.order){var u=a*l,p=a*c,f=n*l,E=n*c;t[0]=s*l,t[4]=-s*c,t[8]=h,t[1]=p+f*h,t[5]=u-E*h,t[9]=-n*s,t[2]=E-u*h,t[6]=f+p*h,t[10]=a*s}else if("YXZ"===e.order){var d=s*l,m=s*c,g=h*l,v=h*c;t[0]=d+v*n,t[4]=g*n-m,t[8]=a*h,t[1]=a*c,t[5]=a*l,t[9]=-n,t[2]=m*n-g,t[6]=v+d*n,t[10]=a*s}else if("ZXY"===e.order){d=s*l,m=s*c,g=h*l,v=h*c;t[0]=d-v*n,t[4]=-a*c,t[8]=g+m*n,t[1]=m+g*n,t[5]=a*l,t[9]=v-d*n,t[2]=-a*h,t[6]=n,t[10]=a*s}else if("ZYX"===e.order){u=a*l,p=a*c,f=n*l,E=n*c;t[0]=s*l,t[4]=f*h-p,t[8]=u*h+E,t[1]=s*c,t[5]=E*h+u,t[9]=p*h-f,t[2]=-h,t[6]=n*s,t[10]=a*s}else if("YZX"===e.order){var T=a*s,y=a*h,R=n*s,x=n*h;t[0]=s*l,t[4]=x-T*c,t[8]=R*c+y,t[1]=c,t[5]=a*l,t[9]=-n*l,t[2]=-h*l,t[6]=y*c+R,t[10]=T-x*c}else if("XZY"===e.order){T=a*s,y=a*h,R=n*s,x=n*h;t[0]=s*l,t[4]=-c,t[8]=h*l,t[1]=T*c+x,t[5]=a*l,t[9]=y*c-R,t[2]=R*c-y,t[6]=n*l,t[10]=x*c+T}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z,a=e.w,n=r+r,s=i+i,h=o+o,l=r*n,c=r*s,u=r*h,p=i*s,f=i*h,E=o*h,d=a*n,m=a*s,g=a*h;return t[0]=1-(p+E),t[4]=c-g,t[8]=u+m,t[1]=c+g,t[5]=1-(l+E),t[9]=f-d,t[2]=u-m,t[6]=f+d,t[10]=1-(l+p),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,o,a){var n=this.elements;return r.subVectors(i,o).normalize(),0===r.length()&&(r.z=1),e.crossVectors(a,r).normalize(),0===e.length()&&(r.x+=1e-4,e.crossVectors(a,r).normalize()),t.crossVectors(r,e),n[0]=e.x,n[4]=t.x,n[8]=r.x,n[1]=e.y,n[5]=t.y,n[9]=r.y,n[2]=e.z,n[6]=t.z,n[10]=r.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,o=this.elements,a=r[0],n=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],p=r[13],f=r[2],E=r[6],d=r[10],m=r[14],g=r[3],v=r[7],T=r[11],y=r[15],R=i[0],x=i[4],H=i[8],_=i[12],w=i[1],b=i[5],M=i[9],S=i[13],A=i[2],C=i[6],L=i[10],P=i[14],D=i[3],F=i[7],V=i[11],U=i[15];return o[0]=a*R+n*w+s*A+h*D,o[4]=a*x+n*b+s*C+h*F,o[8]=a*H+n*M+s*L+h*V,o[12]=a*_+n*S+s*P+h*U,o[1]=l*R+c*w+u*A+p*D,o[5]=l*x+c*b+u*C+p*F,o[9]=l*H+c*M+u*L+p*V,o[13]=l*_+c*S+u*P+p*U,o[2]=f*R+E*w+d*A+m*D,o[6]=f*x+E*b+d*C+m*F,o[10]=f*H+E*M+d*L+m*V,o[14]=f*_+E*S+d*P+m*U,o[3]=g*R+v*w+T*A+y*D,o[7]=g*x+v*b+T*C+y*F,o[11]=g*H+v*M+T*L+y*V,o[15]=g*_+v*S+T*P+y*U,this},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiplyMatrices(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var r=0,i=t.length;r<i;r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyProjection(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],o=e[12],a=e[1],n=e[5],s=e[9],h=e[13],l=e[2],c=e[6],u=e[10],p=e[14];return e[3]*(+o*s*c-i*h*c-o*n*u+r*h*u+i*n*p-r*s*p)+e[7]*(+t*s*p-t*h*u+o*a*u-i*a*p+i*h*l-o*s*l)+e[11]*(+t*h*c-t*n*p-o*a*c+r*a*p+o*n*l-r*h*l)+e[15]*(-i*n*l-t*s*c+t*n*u+i*a*c-r*a*u+r*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,i=e.elements,o=i[0],a=i[4],n=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],p=i[2],f=i[6],E=i[10],d=i[14],m=i[3],g=i[7],v=i[11],T=i[15];r[0]=c*d*g-u*E*g+u*f*v-l*d*v-c*f*T+l*E*T,r[4]=s*E*g-n*d*g-s*f*v+a*d*v+n*f*T-a*E*T,r[8]=n*u*g-s*c*g+s*l*v-a*u*v-n*l*T+a*c*T,r[12]=s*c*f-n*u*f-s*l*E+a*u*E+n*l*d-a*c*d,r[1]=u*E*m-c*d*m-u*p*v+h*d*v+c*p*T-h*E*T,r[5]=n*d*m-s*E*m+s*p*v-o*d*v-n*p*T+o*E*T,r[9]=s*c*m-n*u*m-s*h*v+o*u*v+n*h*T-o*c*T,r[13]=n*u*p-s*c*p+s*h*E-o*u*E-n*h*d+o*c*d,r[2]=l*d*m-u*f*m+u*p*g-h*d*g-l*p*T+h*f*T,r[6]=s*f*m-a*d*m-s*p*g+o*d*g+a*p*T-o*f*T,r[10]=a*u*m-s*l*m+s*h*g-o*u*g-a*h*T+o*l*T,r[14]=s*l*p-a*u*p-s*h*f+o*u*f+a*h*d-o*l*d,r[3]=c*f*m-l*E*m-c*p*g+h*E*g+l*p*v-h*f*v,r[7]=a*E*m-n*f*m+n*p*g-o*E*g-a*p*v+o*f*v,r[11]=n*l*m-a*c*m-n*h*g+o*c*g+a*h*v-o*l*v,r[15]=a*c*p-n*l*p+n*h*f-o*c*f-a*h*E+o*l*E;var y=o*r[0]+h*r[4]+p*r[8]+m*r[12];if(0==y){var R="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(R);return console.warn(R),this.identity(),this}return this.multiplyScalar(1/y),this},translate:function(e){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(e){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(e){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(e){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z;return t[0]*=r,t[4]*=i,t[8]*=o,t[1]*=r,t[5]*=i,t[9]*=o,t[2]*=r,t[6]*=i,t[10]*=o,t[3]*=r,t[7]*=i,t[11]*=o,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(r,i)))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),o=1-r,a=e.x,n=e.y,s=e.z,h=o*a,l=o*n;return this.set(h*a+r,h*n-i*s,h*s+i*n,0,h*n+i*s,l*n+r,l*s-i*a,0,h*s-i*n,l*s+i*a,o*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(r,i,o){var a=this.elements,n=e.set(a[0],a[1],a[2]).length(),s=e.set(a[4],a[5],a[6]).length(),h=e.set(a[8],a[9],a[10]).length();r.x=a[12],r.y=a[13],r.z=a[14],t.elements.set(this.elements);var l=1/n,c=1/s,u=1/h;return t.elements[0]*=l,t.elements[1]*=l,t.elements[2]*=l,t.elements[4]*=c,t.elements[5]*=c,t.elements[6]*=c,t.elements[8]*=u,t.elements[9]*=u,t.elements[10]*=u,i.setFromRotationMatrix(t),o.x=n,o.y=s,o.z=h,this}}(),makeFrustum:function(e,t,r,i,o,a){var n=this.elements,s=2*o/(t-e),h=2*o/(i-r),l=(t+e)/(t-e),c=(i+r)/(i-r),u=-(a+o)/(a-o),p=-2*a*o/(a-o);return n[0]=s,n[4]=0,n[8]=l,n[12]=0,n[1]=0,n[5]=h,n[9]=c,n[13]=0,n[2]=0,n[6]=0,n[10]=u,n[14]=p,n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this},makePerspective:function(e,t,r,i){var o=r*Math.tan(THREE.Math.degToRad(.5*e)),a=-o,n=a*t,s=o*t;return this.makeFrustum(n,s,a,o,r,i)},makeOrthographic:function(e,t,r,i,o,a){var n=this.elements,s=t-e,h=r-i,l=a-o,c=(t+e)/s,u=(r+i)/h,p=(a+o)/l;return n[0]=2/s,n[4]=0,n[8]=0,n[12]=-c,n[1]=0,n[5]=2/h,n[9]=0,n[13]=-u,n[2]=0,n[6]=0,n[10]=-2/l,n[14]=-p,n[3]=0,n[7]=0,n[11]=0,n[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return i<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return r<0?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(e,t,r,i){var o,a,n,s,h=e.clone().add(t).multiplyScalar(.5),l=t.clone().sub(e).normalize(),c=.5*e.distanceTo(t),u=this.origin.clone().sub(h),p=-this.direction.dot(l),f=u.dot(this.direction),E=-u.dot(l),d=u.lengthSq(),m=Math.abs(1-p*p);if(m>=0)if(a=p*f-E,s=c*m,(o=p*E-f)>=0)if(a>=-s)if(a<=s){var g=1/m;n=(o*=g)*(o+p*(a*=g)+2*f)+a*(p*o+a+2*E)+d}else a=c,n=-(o=Math.max(0,-(p*a+f)))*o+a*(a+2*E)+d;else a=-c,n=-(o=Math.max(0,-(p*a+f)))*o+a*(a+2*E)+d;else a<=-s?n=-(o=Math.max(0,-(-p*c+f)))*o+(a=o>0?-c:Math.min(Math.max(-c,-E),c))*(a+2*E)+d:a<=s?(o=0,n=(a=Math.min(Math.max(-c,-E),c))*(a+2*E)+d):n=-(o=Math.max(0,-(p*c+f)))*o+(a=o>0?c:Math.min(Math.max(-c,-E),c))*(a+2*E)+d;else a=p>0?-c:c,n=-(o=Math.max(0,-(p*a+f)))*o+a*(a+2*E)+d;return r&&r.copy(this.direction.clone().multiplyScalar(o).add(this.origin)),i&&i.copy(l.clone().multiplyScalar(a).add(h)),n},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var r,i,o,a,n,s,h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return h>=0?(r=(e.min.x-u.x)*h,i=(e.max.x-u.x)*h):(r=(e.max.x-u.x)*h,i=(e.min.x-u.x)*h),l>=0?(o=(e.min.y-u.y)*l,a=(e.max.y-u.y)*l):(o=(e.max.y-u.y)*l,a=(e.min.y-u.y)*l),r>a||o>i?null:((o>r||r!=r)&&(r=o),(a<i||i!=i)&&(i=a),c>=0?(n=(e.min.z-u.z)*c,s=(e.max.z-u.z)*c):(n=(e.max.z-u.z)*c,s=(e.min.z-u.z)*c),r>s||n>i?null:((n>r||r!=r)&&(r=n),(s<i||i!=i)&&(i=s),i<0?null:this.at(r>=0?r:i,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(o,a,n,s,h){t.subVectors(a,o),r.subVectors(n,o),i.crossVectors(t,r);var l,c=this.direction.dot(i);if(c>0){if(s)return null;l=1}else{if(!(c<0))return null;l=-1,c=-c}e.subVectors(this.origin,o);var u=l*this.direction.dot(r.crossVectors(e,r));if(u<0)return null;var p=l*this.direction.dot(t.cross(e));if(p<0)return null;if(u+p>c)return null;var f=-l*e.dot(i);return f<0?null:this.at(f/c,h)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var i=this.center;void 0!==r?i.copy(r):e.setFromPoints(t).center(i);for(var o=0,a=0,n=t.length;a<n;a++)o=Math.max(o,i.distanceToSquared(t[a]));return this.radius=Math.sqrt(o),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,r,i,o,a){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==o?o:new THREE.Plane,void 0!==a?a:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,i,o,a){var n=this.planes;return n[0].copy(e),n[1].copy(t),n[2].copy(r),n[3].copy(i),n[4].copy(o),n[5].copy(a),this},copy:function(e){for(var t=this.planes,r=0;r<6;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,i=r[0],o=r[1],a=r[2],n=r[3],s=r[4],h=r[5],l=r[6],c=r[7],u=r[8],p=r[9],f=r[10],E=r[11],d=r[12],m=r[13],g=r[14],v=r[15];return t[0].setComponents(n-i,c-s,E-u,v-d).normalize(),t[1].setComponents(n+i,c+s,E+u,v+d).normalize(),t[2].setComponents(n+o,c+h,E+p,v+m).normalize(),t[3].setComponents(n-o,c-h,E-p,v-m).normalize(),t[4].setComponents(n-a,c-l,E-f,v-g).normalize(),t[5].setComponents(n+a,c+l,E+f,v+g).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,r=e.center,i=-e.radius,o=0;o<6;o++){if(t[o].distanceToPoint(r)<i)return!1}return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){for(var i=this.planes,o=0;o<6;o++){var a=i[o];e.x=a.normal.x>0?r.min.x:r.max.x,t.x=a.normal.x>0?r.max.x:r.min.x,e.y=a.normal.y>0?r.min.y:r.max.y,t.y=a.normal.y>0?r.max.y:r.min.y,e.z=a.normal.z>0?r.min.z:r.max.z,t.z=a.normal.z>0?r.max.z:r.min.z;var n=a.distanceToPoint(e),s=a.distanceToPoint(t);if(n<0&&s<0)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,o){var a=e.subVectors(o,i).cross(t.subVectors(r,i)).normalize();return this.setFromNormalAndCoplanarPoint(a,r),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var i=r||new THREE.Vector3,o=t.delta(e),a=this.normal.dot(o);if(0==a)return 0==this.distanceToPoint(t.start)?i.copy(t.start):void 0;var n=-(t.start.dot(this.normal)+this.constant)/a;return n<0||n>1?void 0:i.copy(o).multiplyScalar(n).add(t.start)}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){i=i||(new THREE.Matrix3).getNormalMatrix(r);var o=e.copy(this.normal).applyMatrix3(i),a=this.coplanarPoint(t);return a.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(o,a),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=new Array(36),i=0;return function(){for(var o=0;o<36;o++)8==o||13==o||18==o||23==o?r[o]="-":14==o?r[o]="4":(i<=2&&(i=33554432+16777216*Math.random()|0),e=15&i,i>>=4,r[o]=t[19==o?3&e|8:e]);return r.join("")}}(),clamp:function(e,t,r){return e<t?t:e>r?r:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,r,i,o){return i+(e-t)*(o-i)/(r-t)},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return e<0?-1:e>0?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}()},THREE.Spline=function(e){this.points=e;var t,r,i,o,a,n,s,h,l,c=[],u={x:0,y:0,z:0};function p(e,t,r,i,o,a,n){var s=.5*(r-e),h=.5*(i-t);return(2*(t-r)+s+h)*n+(-3*(t-r)-2*s-h)*a+s*o+t}this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return t=(this.points.length-1)*e,r=Math.floor(t),i=t-r,c[0]=0===r?r:r-1,c[1]=r,c[2]=r>this.points.length-2?this.points.length-1:r+1,c[3]=r>this.points.length-3?this.points.length-1:r+2,n=this.points[c[0]],s=this.points[c[1]],h=this.points[c[2]],l=this.points[c[3]],a=i*(o=i*i),u.x=p(n.x,s.x,h.x,l.x,i,o,a),u.y=p(n.y,s.y,h.y,l.y,i,o,a),u.z=p(n.z,s.z,h.z,l.z,i,o,a),u},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;e<r;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,o,a=0,n=0,s=0,h=new THREE.Vector3,l=new THREE.Vector3,c=[],u=0;for(c[0]=0,e||(e=100),i=this.points.length*e,h.copy(this.points[0]),t=1;t<i;t++)r=t/i,o=this.getPoint(r),l.copy(o),u+=l.distanceTo(h),h.copy(o),a=(this.points.length-1)*r,(n=Math.floor(a))!=s&&(c[n]=u,s=n);return c[c.length]=u,{chunks:c,total:u}},this.reparametrizeByArcLength=function(e){var t,r,i,o,a,n,s,h,l=[],c=new THREE.Vector3,u=this.getLength();for(l.push(c.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(n=u.chunks[t]-u.chunks[t-1],s=Math.ceil(e*n/u.total),o=(t-1)/(this.points.length-1),a=t/(this.points.length-1),r=1;r<s-1;r++)i=o+r*(1/s)*(a-o),h=this.getPoint(i),l.push(c.copy(h).clone());l.push(c.copy(this.points[t]).clone())}this.points=l}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,i,o){var a=o||new THREE.Vector3;a.subVectors(i,r),e.subVectors(t,r),a.cross(e);var n=a.lengthSq();return n>0?a.multiplyScalar(1/Math.sqrt(n)):a.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,o,a,n,s){e.subVectors(n,o),t.subVectors(a,o),r.subVectors(i,o);var h=e.dot(e),l=e.dot(t),c=e.dot(r),u=t.dot(t),p=t.dot(r),f=h*u-l*l,E=s||new THREE.Vector3;if(0==f)return E.set(-2,-1,-1);var d=1/f,m=(u*c-l*p)*d,g=(h*p-l*c)*d;return E.set(1-m-g,g,m)}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,i,o){var a=THREE.Triangle.barycoordFromPoint(t,r,i,o,e);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners,i=r[e].indexOf(t);-1!==i&&r[e].splice(i,1)}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var r=0,i=t.length;r<i;r++)t[r].call(this,e)}}}},function(e){e.Raycaster=function(t,r,i,o){this.ray=new e.Ray(t,r),this.near=i||0,this.far=o||1/0};var t=new e.Sphere,r=new e.Ray,i=(new e.Plane,new e.Vector3,new e.Vector3),o=new e.Matrix4,a=function(e,t){return e.distance-t.distance},n=new e.Vector3,s=new e.Vector3,h=new e.Vector3,l=function(a,c,u){if(a instanceof e.Particle){if(i.getPositionFromMatrix(a.matrixWorld),(p=c.ray.distanceToPoint(i))>a.scale.x)return u;u.push({distance:p,point:a.position,face:null,object:a})}else if(a instanceof e.LOD){i.getPositionFromMatrix(a.matrixWorld);var p=c.ray.origin.distanceTo(i);l(a.getObjectForDistance(p),c,u)}else if(a instanceof e.Mesh){if(null===(V=a.geometry).boundingSphere&&V.computeBoundingSphere(),t.copy(V.boundingSphere),t.applyMatrix4(a.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;if(o.getInverse(a.matrixWorld),r.copy(c.ray).applyMatrix4(o),null!==V.boundingBox&&!1===r.isIntersectionBox(V.boundingBox))return u;var f=V.vertices;if(V instanceof e.BufferGeometry){if(void 0===(P=a.material))return u;if(!1===V.dynamic)return u;var E=c.precision;if(void 0!==V.attributes.index)for(var d=V.offsets,m=V.attributes.index.array,g=V.attributes.position.array,v=V.offsets.length,T=V.attributes.index.array.length/3,y=0;y<v;++y)for(var R=d[y].start,x=d[y].count,H=d[y].index,_=R,w=R+x;_<w;_+=3){if(b=H+m[_],M=H+m[_+1],S=H+m[_+2],n.set(g[3*b],g[3*b+1],g[3*b+2]),s.set(g[3*M],g[3*M+1],g[3*M+2]),h.set(g[3*S],g[3*S+1],g[3*S+2]),null!==(D=r.intersectTriangle(n,s,h,P.side!==e.DoubleSide)))D.applyMatrix4(a.matrixWorld),(p=c.ray.origin.distanceTo(D))<E||p<c.near||p>c.far||u.push({distance:p,point:D,face:null,faceIndex:null,object:a})}else for(d=V.offsets,g=V.attributes.position.array,v=V.offsets.length,T=V.attributes.position.array.length,_=0;_<T;_+=3){if(b=_,M=_+1,S=_+2,n.set(g[3*b],g[3*b+1],g[3*b+2]),s.set(g[3*M],g[3*M+1],g[3*M+2]),h.set(g[3*S],g[3*S+1],g[3*S+2]),null!==(D=r.intersectTriangle(n,s,h,P.side!==e.DoubleSide)))D.applyMatrix4(a.matrixWorld),(p=c.ray.origin.distanceTo(D))<E||p<c.near||p>c.far||u.push({distance:p,point:D,face:null,faceIndex:null,object:a})}}else if(V instanceof e.Geometry){var b,M,S,A=a.material instanceof e.MeshFaceMaterial,C=!0===A?a.material.materials:null,L=(E=c.precision,0);for(T=V.faces.length;L<T;L++){var P,D,F=V.faces[L];if(void 0!==(P=!0===A?C[F.materialIndex]:a.material))if(b=f[F.a],M=f[F.b],S=f[F.c],null!==(D=r.intersectTriangle(b,M,S,P.side!==e.DoubleSide)))D.applyMatrix4(a.matrixWorld),(p=c.ray.origin.distanceTo(D))<E||p<c.near||p>c.far||u.push({distance:p,point:D,face:F,faceIndex:L,object:a})}}}else if(a instanceof e.Line){var V,U=(E=c.linePrecision)*E;if(null===(V=a.geometry).boundingSphere&&V.computeBoundingSphere(),t.copy(V.boundingSphere),t.applyMatrix4(a.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;o.getInverse(a.matrixWorld),r.copy(c.ray).applyMatrix4(o);var z=(f=V.vertices).length,B=new e.Vector3,N=new e.Vector3,O=a.type===e.LineStrip?1:2;for(_=0;_<z-1;_+=O){if(!(r.distanceSqToSegment(f[_],f[_+1],N,B)>U))(p=r.origin.distanceTo(N))<c.near||p>c.far||u.push({distance:p,point:B.clone().applyMatrix4(a.matrixWorld),face:null,faceIndex:null,object:a})}}},c=function(e,t,r){for(var i=e.getDescendants(),o=0,a=i.length;o<a;o++)l(i[o],t,r)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.linePrecision=1,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t)},e.Raycaster.prototype.intersectObject=function(e,t){var r=[];return!0===t&&c(e,this,r),l(e,this,r),r.sort(a),r},e.Raycaster.prototype.intersectObjects=function(e,t){for(var r=[],i=0,o=e.length;i<o;i++)l(e[i],this,r),!0===t&&c(e[i],this,r);return r.sort(a),r}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Euler,this.quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this.rotation._quaternion=this.quaternion,this.quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var e=new THREE.Matrix4;return function(t){this.matrix.multiplyMatrices(t,this.matrix),this.position.getPositionFromMatrix(this.matrix),this.scale.getScaleFromMatrix(this.matrix),e.extractRotation(this.matrix),this.quaternion.setFromRotationMatrix(e)}}(),setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){return e.copy(t),e.applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translate:function(e,t){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(e!==this){if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}}else console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(t,1);for(var r=this;void 0!==r.parent;)r=r.parent;void 0!==r&&r instanceof THREE.Scene&&r.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,r=this.children.length;t<r;t++)this.children[t].traverse(e)},getObjectById:function(e,t){for(var r=0,i=this.children.length;r<i;r++){var o=this.children[r];if(o.id===e)return o;if(!0===t&&void 0!==(o=o.getObjectById(e,t)))return o}},getObjectByName:function(e,t){for(var r=0,i=this.children.length;r<i;r++){var o=this.children[r];if(o.name===e)return o;if(!0===t&&void 0!==(o=o.getObjectByName(e,t)))return o}},getChildByName:function(e,t){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e,t)},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,r=this.children.length;t<r;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),!0===t)for(var r=0;r<this.children.length;r++){var i=this.children[r];e.add(i.clone())}return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){var e,t,r,i,o,a,n,s,h,l,c,u=[],p=0,f=[],E=0,d=[],m=0,g=[],v=0,T=[],y=0,R={objects:[],sprites:[],lights:[],elements:[]},x=new THREE.Vector3,H=new THREE.Vector4,_=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),w=new THREE.Box3,b=new Array(3),M=(new Array(4),new THREE.Matrix4),S=new THREE.Matrix4,A=new THREE.Matrix4,C=new THREE.Matrix3,L=new THREE.Matrix3,P=new THREE.Vector3,D=new THREE.Frustum,F=new THREE.Vector4,V=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),S.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(S)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),S.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(S)},this.pickingRay=function(e,t){e.z=-1;var r=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(r,t),r.sub(e).normalize(),new THREE.Raycaster(e,r)};var U=function(r){return(e=function(){if(t===p){var e=new THREE.RenderableObject;return u.push(e),p++,t++,e}return u[t++]}()).id=r.id,e.object=r,null!==r.renderDepth?e.z=r.renderDepth:(x.getPositionFromMatrix(r.matrixWorld),x.applyProjection(S),e.z=x.z),e},z=function(e){if(!1!==e.visible){e instanceof THREE.Light?R.lights.push(e):e instanceof THREE.Mesh||e instanceof THREE.Line?!1!==e.frustumCulled&&!0!==D.intersectsObject(e)||R.objects.push(U(e)):(e instanceof THREE.Sprite||e instanceof THREE.Particle)&&R.sprites.push(U(e));for(var t=0,r=e.children.length;t<r;t++)z(e.children[t])}};function B(){if(i===E){var e=new THREE.RenderableVertex;return f.push(e),E++,i++,e}return f[i++]}function N(){if(a===m){var e=new THREE.RenderableFace3;return d.push(e),m++,a++,e}return d[a++]}function O(){if(s===v){var e=new THREE.RenderableLine;return g.push(e),v++,s++,e}return g[s++]}function I(){if(l===y){var e=new THREE.RenderableParticle;return T.push(e),y++,l++,e}return T[l++]}function k(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function G(e,t){var r=0,i=1,o=e.z+e.w,a=t.z+t.w,n=-e.z+e.w,s=-t.z+t.w;return o>=0&&a>=0&&n>=0&&s>=0||!(o<0&&a<0||n<0&&s<0)&&(o<0?r=Math.max(r,o/(o-a)):a<0&&(i=Math.min(i,o/(o-a))),n<0?r=Math.max(r,n/(n-s)):s<0&&(i=Math.min(i,n/(n-s))),!(i<r)&&(e.lerp(t,r),t.lerp(e,1-i),!0))}this.projectScene=function(e,u,p,E){var d,m,g,v,T,y,x,U,W,j,X,Y,q,K,Q,Z,J,$,ee,te,re,ie,oe,ae,ne,se,he,le=!1;for(a=0,s=0,l=0,R.elements.length=0,!0===e.autoUpdate&&e.updateMatrixWorld(),void 0===u.parent&&u.updateMatrixWorld(),M.copy(u.matrixWorldInverse.getInverse(u.matrixWorld)),S.multiplyMatrices(u.projectionMatrix,M),L.getNormalMatrix(M),D.setFromMatrix(S),se=e,he=p,t=0,R.objects.length=0,R.sprites.length=0,R.lights.length=0,z(se),!0===he&&R.objects.sort(k),d=0,m=R.objects.length;d<m;d++)if(q=R.objects[d].object,c=q.matrixWorld,i=0,q instanceof THREE.Mesh){for(Q=(K=q.geometry).vertices,Z=K.faces,ee=K.faceVertexUvs,C.getNormalMatrix(c),ne=!0===(ae=q.material instanceof THREE.MeshFaceMaterial)?q.material:null,g=0,v=Q.length;g<v;g++){(r=B()).positionWorld.copy(Q[g]).applyMatrix4(c),r.positionScreen.copy(r.positionWorld).applyMatrix4(S);var ce=1/r.positionScreen.w;r.positionScreen.x*=ce,r.positionScreen.y*=ce,r.positionScreen.z*=ce,r.visible=!(r.positionScreen.x<-1||r.positionScreen.x>1||r.positionScreen.y<-1||r.positionScreen.y>1||r.positionScreen.z<-1||r.positionScreen.z>1)}for(T=0,y=Z.length;T<y;T++){J=Z[T];var ue=!0===ae?ne.materials[J.materialIndex]:q.material;if(void 0!==ue){var pe=ue.side;if(re=f[J.a],ie=f[J.b],oe=f[J.c],b[0]=re.positionScreen,b[1]=ie.positionScreen,b[2]=oe.positionScreen,(!0===re.visible||!0===ie.visible||!0===oe.visible||_.isIntersectionBox(w.setFromPoints(b)))&&(le=(oe.positionScreen.x-re.positionScreen.x)*(ie.positionScreen.y-re.positionScreen.y)-(oe.positionScreen.y-re.positionScreen.y)*(ie.positionScreen.x-re.positionScreen.x)<0,pe===THREE.DoubleSide||le===(pe===THREE.FrontSide))){for((o=N()).id=q.id,o.v1.copy(re),o.v2.copy(ie),o.v3.copy(oe),o.normalModel.copy(J.normal),!1!==le||pe!==THREE.BackSide&&pe!==THREE.DoubleSide||o.normalModel.negate(),o.normalModel.applyMatrix3(C).normalize(),o.normalModelView.copy(o.normalModel).applyMatrix3(L),o.centroidModel.copy(J.centroid).applyMatrix4(c),$=J.vertexNormals,x=0,U=Math.min($.length,3);x<U;x++){var fe=o.vertexNormalsModel[x];fe.copy($[x]),!1!==le||pe!==THREE.BackSide&&pe!==THREE.DoubleSide||fe.negate(),fe.applyMatrix3(C).normalize(),o.vertexNormalsModelView[x].copy(fe).applyMatrix3(L)}for(o.vertexNormalsLength=$.length,W=0,j=Math.min(ee.length,3);W<j;W++)if(void 0!==(te=ee[W][T]))for(X=0,Y=te.length;X<Y;X++)o.uvs[W][X]=te[X];o.color=J.color,o.material=ue,P.copy(o.centroidModel).applyProjection(S),o.z=P.z,R.elements.push(o)}}}}else if(q instanceof THREE.Line){A.multiplyMatrices(S,c),Q=q.geometry.vertices,(re=B()).positionScreen.copy(Q[0]).applyMatrix4(A);var Ee=q.type===THREE.LinePieces?2:1;for(g=1,v=Q.length;g<v;g++)(re=B()).positionScreen.copy(Q[g]).applyMatrix4(A),(g+1)%Ee>0||(ie=f[i-2],F.copy(re.positionScreen),V.copy(ie.positionScreen),!0===G(F,V)&&(F.multiplyScalar(1/F.w),V.multiplyScalar(1/V.w),(n=O()).id=q.id,n.v1.positionScreen.copy(F),n.v2.positionScreen.copy(V),n.z=Math.max(F.z,V.z),n.material=q.material,q.material.vertexColors===THREE.VertexColors&&(n.vertexColors[0].copy(q.geometry.colors[g]),n.vertexColors[1].copy(q.geometry.colors[g-1])),R.elements.push(n)))}for(d=0,m=R.sprites.length;d<m;d++)if(q=R.sprites[d].object,c=q.matrixWorld,q instanceof THREE.Particle){H.set(c.elements[12],c.elements[13],c.elements[14],1),H.applyMatrix4(S);ce=1/H.w;H.z*=ce,H.z>0&&H.z<1&&((h=I()).id=q.id,h.x=H.x*ce,h.y=H.y*ce,h.z=H.z,h.object=q,h.rotation=q.rotation.z,h.scale.x=q.scale.x*Math.abs(h.x-(H.x+u.projectionMatrix.elements[0])/(H.w+u.projectionMatrix.elements[12])),h.scale.y=q.scale.y*Math.abs(h.y-(H.y+u.projectionMatrix.elements[5])/(H.w+u.projectionMatrix.elements[13])),h.material=q.material,R.elements.push(h))}return!0===E&&R.elements.sort(k),R}},THREE.Face3=function(e,t,r,i,o,a){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e,t,r=new THREE.Face3(this.a,this.b,this.c);for(r.normal.copy(this.normal),r.color.copy(this.color),r.centroid.copy(this.centroid),r.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)r.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)r.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)r.vertexTangents[e]=this.vertexTangents[e].clone();return r}},THREE.Face4=function(e,t,r,i,o,a,n){return new THREE.Face3(e,t,r,o,a,n)},THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),r=0,i=this.vertices.length;r<i;r++){this.vertices[r].applyMatrix4(e)}for(r=0,i=this.faces.length;r<i;r++){var o=this.faces[r];o.normal.applyMatrix3(t).normalize();for(var a=0,n=o.vertexNormals.length;a<n;a++)o.vertexNormals[a].applyMatrix3(t).normalize();o.centroid.applyMatrix4(e)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var e,t,r;for(e=0,t=this.faces.length;e<t;e++)(r=this.faces[e]).centroid.set(0,0,0),r.centroid.add(this.vertices[r.a]),r.centroid.add(this.vertices[r.b]),r.centroid.add(this.vertices[r.c]),r.centroid.divideScalar(3)},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var o=this.faces[r],a=this.vertices[o.a],n=this.vertices[o.b],s=this.vertices[o.c];e.subVectors(s,n),t.subVectors(a,n),e.cross(t),e.normalize(),o.normal.copy(e)}},computeVertexNormals:function(e){var t,r,i,o,a,n;if(void 0===this.__tmpVertices){for(this.__tmpVertices=new Array(this.vertices.length),n=this.__tmpVertices,t=0,r=this.vertices.length;t<r;t++)n[t]=new THREE.Vector3;for(i=0,o=this.faces.length;i<o;i++)(a=this.faces[i]).vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else for(n=this.__tmpVertices,t=0,r=this.vertices.length;t<r;t++)n[t].set(0,0,0);if(e){var s,h,l,c=new THREE.Vector3,u=new THREE.Vector3;new THREE.Vector3,new THREE.Vector3,new THREE.Vector3;for(i=0,o=this.faces.length;i<o;i++)a=this.faces[i],s=this.vertices[a.a],h=this.vertices[a.b],l=this.vertices[a.c],c.subVectors(l,h),u.subVectors(s,h),c.cross(u),n[a.a].add(c),n[a.b].add(c),n[a.c].add(c)}else for(i=0,o=this.faces.length;i<o;i++)n[(a=this.faces[i]).a].add(a.normal),n[a.b].add(a.normal),n[a.c].add(a.normal);for(t=0,r=this.vertices.length;t<r;t++)n[t].normalize();for(i=0,o=this.faces.length;i<o;i++)(a=this.faces[i]).vertexNormals[0].copy(n[a.a]),a.vertexNormals[1].copy(n[a.b]),a.vertexNormals[2].copy(n[a.c])},computeMorphNormals:function(){var e,t,r,i,o;for(r=0,i=this.faces.length;r<i;r++)for((o=this.faces[r]).__originalFaceNormal?o.__originalFaceNormal.copy(o.normal):o.__originalFaceNormal=o.normal.clone(),o.__originalVertexNormals||(o.__originalVertexNormals=[]),e=0,t=o.vertexNormals.length;e<t;e++)o.__originalVertexNormals[e]?o.__originalVertexNormals[e].copy(o.vertexNormals[e]):o.__originalVertexNormals[e]=o.vertexNormals[e].clone();var a=new THREE.Geometry;for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var n=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals;for(r=0,i=this.faces.length;r<i;r++)o=this.faces[r],h=new THREE.Vector3,l={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(h),s.push(l)}var h,l,c=this.morphNormals[e];for(a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals(),r=0,i=this.faces.length;r<i;r++)o=this.faces[r],h=c.faceNormals[r],l=c.vertexNormals[r],h.copy(o.normal),l.a.copy(o.vertexNormals[0]),l.b.copy(o.vertexNormals[1]),l.c.copy(o.vertexNormals[2])}for(r=0,i=this.faces.length;r<i;r++)(o=this.faces[r]).normal=o.__originalFaceNormal,o.vertexNormals=o.__originalVertexNormals},computeTangents:function(){var e,t,r,i,o,a,n,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L,P,D,F=[],V=[],U=new THREE.Vector3,z=new THREE.Vector3,B=new THREE.Vector3,N=new THREE.Vector3,O=new THREE.Vector3;for(r=0,i=this.vertices.length;r<i;r++)F[r]=new THREE.Vector3,V[r]=new THREE.Vector3;for(e=0,t=this.faces.length;e<t;e++)n=this.faces[e],s=this.faceVertexUvs[0][e],M=this,S=n.a,A=n.b,C=n.c,L=0,P=1,D=2,h=M.vertices[S],l=M.vertices[A],c=M.vertices[C],u=s[L],p=s[P],f=s[D],E=l.x-h.x,d=c.x-h.x,m=l.y-h.y,g=c.y-h.y,v=l.z-h.z,T=c.z-h.z,y=p.x-u.x,R=f.x-u.x,x=p.y-u.y,H=f.y-u.y,_=1/(y*H-R*x),U.set((H*E-x*d)*_,(H*m-x*g)*_,(H*v-x*T)*_),z.set((y*d-R*E)*_,(y*g-R*m)*_,(y*T-R*v)*_),F[S].add(U),F[A].add(U),F[C].add(U),V[S].add(z),V[A].add(z),V[C].add(z);var I=["a","b","c","d"];for(e=0,t=this.faces.length;e<t;e++)for(n=this.faces[e],o=0;o<Math.min(n.vertexNormals.length,3);o++)O.copy(n.vertexNormals[o]),a=n[I[o]],w=F[a],B.copy(w),B.sub(O.multiplyScalar(O.dot(w))).normalize(),N.crossVectors(n.vertexNormals[o],w),b=N.dot(V[a])<0?-1:1,n.vertexTangents[o]=new THREE.Vector4(B.x,B.y,B.z,b);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;r<i;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var e,t,r,i,o,a,n,s,h={},l=[],c=[],u=Math.pow(10,4);for(this.__tmpVertices=void 0,r=0,i=this.vertices.length;r<i;r++)e=this.vertices[r],void 0===h[t=Math.round(e.x*u)+"_"+Math.round(e.y*u)+"_"+Math.round(e.z*u)]?(h[t]=r,l.push(this.vertices[r]),c[r]=l.length-1):c[r]=c[h[t]];var p=[];for(r=0,i=this.faces.length;r<i;r++){(o=this.faces[r]).a=c[o.a],o.b=c[o.b],o.c=c[o.c],a=[o.a,o.b,o.c];for(var f=0;f<3;f++)if(a[f]==a[(f+1)%3]){f,p.push(r);break}}for(r=p.length-1;r>=0;r--)for(this.faces.splice(r,1),n=0,s=this.faceVertexUvs.length;n<s;n++)this.faceVertexUvs[n].splice(r,1);var E=this.vertices.length-l.length;return this.vertices=l,E},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;r<i;r++)e.vertices.push(t[r].clone());var o=this.faces;for(r=0,i=o.length;r<i;r++)e.faces.push(o[r].clone());var a=this.faceVertexUvs[0];for(r=0,i=a.length;r<i;r++){for(var n=a[r],s=[],h=0,l=n.length;h<l;h++)s.push(new THREE.Vector2(n[h].x,n[h].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.dynamic=!0,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,r;(this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(r=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==r)&&((new THREE.Matrix3).getNormalMatrix(e).multiplyVector3Array(r),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t,r,i,o=this.boundingBox;e.length>=3&&(o.min.x=o.max.x=e[0],o.min.y=o.max.y=e[1],o.min.z=o.max.z=e[2]);for(var a=3,n=e.length;a<n;a+=3)t=e[a],r=e[a+1],i=e[a+2],t<o.min.x?o.min.x=t:t>o.max.x&&(o.max.x=t),r<o.min.y?o.min.y=r:r>o.max.y&&(o.max.y=r),i<o.min.z?o.min.z=i:i>o.max.z&&(o.max.z=i)}void 0!==e&&0!==e.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){for(var i=this.boundingSphere.center,o=0,a=r.length;o<a;o+=3)t.set(r[o],r[o+1],r[o+2]),e.addPoint(t);e.center(i);var n=0;for(o=0,a=r.length;o<a;o+=3)t.set(r[o],r[o+1],r[o+2]),n=Math.max(n,i.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(n)}}}(),computeVertexNormals:function(){if(this.attributes.position){var e,t,r,i,o=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(o)};else for(e=0,t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0;var a,n,s,h,l,c,u=this.attributes.position.array,p=this.attributes.normal.array,f=new THREE.Vector3,E=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes.index){var v=this.attributes.index.array,T=this.offsets;for(r=0,i=T.length;r<i;++r){var y=T[r].start,R=T[r].count,x=T[r].index;for(e=y,t=y+R;e<t;e+=3)a=x+v[e],n=x+v[e+1],s=x+v[e+2],h=u[3*a],l=u[3*a+1],c=u[3*a+2],f.set(h,l,c),h=u[3*n],l=u[3*n+1],c=u[3*n+2],E.set(h,l,c),h=u[3*s],l=u[3*s+1],c=u[3*s+2],d.set(h,l,c),m.subVectors(d,E),g.subVectors(f,E),m.cross(g),p[3*a]+=m.x,p[3*a+1]+=m.y,p[3*a+2]+=m.z,p[3*n]+=m.x,p[3*n+1]+=m.y,p[3*n+2]+=m.z,p[3*s]+=m.x,p[3*s+1]+=m.y,p[3*s+2]+=m.z}}else for(e=0,t=u.length;e<t;e+=9)h=u[e],l=u[e+1],c=u[e+2],f.set(h,l,c),h=u[e+3],l=u[e+4],c=u[e+5],E.set(h,l,c),h=u[e+6],l=u[e+7],c=u[e+8],d.set(h,l,c),m.subVectors(d,E),g.subVectors(f,E),m.cross(g),p[e]=m.x,p[e+1]=m.y,p[e+2]=m.z,p[e+3]=m.x,p[e+4]=m.y,p[e+5]=m.z,p[e+6]=m.x,p[e+7]=m.y,p[e+8]=m.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,r,i,o=this.attributes.normal.array,a=0,n=o.length;a<n;a+=3)e=o[a],t=o[a+1],r=o[a+2],i=1/Math.sqrt(e*e+t*t+r*r),o[a]*=i,o[a+1]*=i,o[a+2]*=i},computeTangents:function(){if(void 0!==this.attributes.index&&void 0!==this.attributes.position&&void 0!==this.attributes.normal&&void 0!==this.attributes.uv){var e=this.attributes.index.array,t=this.attributes.position.array,r=this.attributes.normal.array,i=this.attributes.uv.array,o=t.length/3;if(void 0===this.attributes.tangent){var a=4*o;this.attributes.tangent={itemSize:4,array:new Float32Array(a)}}for(var n,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L,P=this.attributes.tangent.array,D=[],F=[],V=0;V<o;V++)D[V]=new THREE.Vector3,F[V]=new THREE.Vector3;var U,z,B,N,O,I,k,G,W,j,X=new THREE.Vector3,Y=new THREE.Vector3,q=this.offsets;for(B=0,N=q.length;B<N;++B){var K=q[B].start,Q=q[B].count,Z=q[B].index;for(U=K,z=K+Q;U<z;U+=3)O=Z+e[U],I=Z+e[U+1],k=Z+e[U+2],W=I,j=k,n=t[3*(G=O)],s=t[3*G+1],h=t[3*G+2],l=t[3*W],c=t[3*W+1],u=t[3*W+2],p=t[3*j],f=t[3*j+1],E=t[3*j+2],d=i[2*G],m=i[2*G+1],g=i[2*W],v=i[2*W+1],T=i[2*j],y=i[2*j+1],R=l-n,x=p-n,H=c-s,_=f-s,w=u-h,b=E-h,L=1/((M=g-d)*(C=y-m)-(S=T-d)*(A=v-m)),X.set((C*R-A*x)*L,(C*H-A*_)*L,(C*w-A*b)*L),Y.set((M*x-S*R)*L,(M*_-S*H)*L,(M*b-S*w)*L),D[G].add(X),D[W].add(X),D[j].add(X),F[G].add(Y),F[W].add(Y),F[j].add(Y)}var J,$,ee,te=new THREE.Vector3,re=new THREE.Vector3,ie=new THREE.Vector3,oe=new THREE.Vector3;for(B=0,N=q.length;B<N;++B){K=q[B].start,Q=q[B].count,Z=q[B].index;for(U=K,z=K+Q;U<z;U+=3)O=Z+e[U],I=Z+e[U+1],k=Z+e[U+2],ae(O),ae(I),ae(k)}this.hasTangents=!0,this.tangentsNeedUpdate=!0}else console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");function ae(e){ie.x=r[3*e],ie.y=r[3*e+1],ie.z=r[3*e+2],oe.copy(ie),$=D[e],te.copy($),te.sub(ie.multiplyScalar(ie.dot($))).normalize(),re.crossVectors(oe,$),ee=re.dot(F[e]),J=ee<0?-1:1,P[4*e]=te.x,P[4*e+1]=te.y,P[4*e+2]=te.z,P[4*e+3]=J}},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e.projectionMatrixInverse.copy(this.projectionMatrixInverse),e},THREE.OrthographicCamera=function(e,t,r,i,o,a){THREE.Camera.call(this),this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==o?o:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,e),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,o,a){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=o,this.height=a,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-t,i=e*r,o=e*t,a=Math.abs(o-i),n=Math.abs(t-r);this.projectionMatrix.makeFrustum(i+this.x*a/this.fullWidth,i+(this.x+this.width)*a/this.fullWidth,t-(this.y+this.height)*n/this.fullHeight,t-this.y*n/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,e),e},THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.position.set(0,100,0),this.groundColor=new THREE.Color(t),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,e),e.groundColor.copy(this.groundColor),e.intensity=this.intensity,e},THREE.PointLight=function(e,t,r){THREE.Light.call(this,e),this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,e),e.intensity=this.intensity,e.distance=this.distance,e},THREE.SpotLight=function(e,t,r,i,o){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==o?o:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.distance=this.distance,e.angle=this.angle,e.exponent=this.exponent,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.Loader=function(e){this.showStatus=e,this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";e.total?t+=(100*e.loaded/e.total).toFixed(0)+"%":t+=(e.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return t.pop(),(t.length<1?".":t.join("/"))+"/"},initMaterials:function(e,t){for(var r=[],i=0;i<e.length;++i)r[i]=THREE.Loader.prototype.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;t<r;t++){if(e[t]instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(e,t){var r=this;function i(e){var t=Math.log(e)/Math.LN2;return Math.floor(t)==t}function o(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function a(e,a,n,s,h,l,c){var u,p,f,E=/\.dds$/i.test(n),d=t+"/"+n;if(E){var m=THREE.ImageUtils.loadCompressedTexture(d);e[a]=m}else{m=document.createElement("canvas");e[a]=new THREE.Texture(m)}if(e[a].sourceFile=n,s&&(e[a].repeat.set(s[0],s[1]),1!==s[0]&&(e[a].wrapS=THREE.RepeatWrapping),1!==s[1]&&(e[a].wrapT=THREE.RepeatWrapping)),h&&e[a].offset.set(h[0],h[1]),l){var g={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==g[l[0]]&&(e[a].wrapS=g[l[0]]),void 0!==g[l[1]]&&(e[a].wrapT=g[l[1]])}c&&(e[a].anisotropy=c),E||(u=e[a],p=d,(f=new Image).onload=function(){if(i(this.width)&&i(this.height))u.image=this;else{var e=o(this.width),t=o(this.height);u.image.width=e,u.image.height=t,u.image.getContext("2d").drawImage(this,0,0,e,t)}u.needsUpdate=!0},f.crossOrigin=r.crossOrigin,f.src=p)}function n(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var s="MeshLambertMaterial",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var l=e.shading.toLowerCase();"phong"===l?s="MeshPhongMaterial":"basic"===l&&(s="MeshBasicMaterial")}if(void 0!==e.blending&&void 0!==THREE[e.blending]&&(h.blending=THREE[e.blending]),(void 0!==e.transparent||e.opacity<1)&&(h.transparent=e.transparent),void 0!==e.depthTest&&(h.depthTest=e.depthTest),void 0!==e.depthWrite&&(h.depthWrite=e.depthWrite),void 0!==e.visible&&(h.visible=e.visible),void 0!==e.flipSided&&(h.side=THREE.BackSide),void 0!==e.doubleSided&&(h.side=THREE.DoubleSide),void 0!==e.wireframe&&(h.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?h.vertexColors=THREE.FaceColors:e.vertexColors&&(h.vertexColors=THREE.VertexColors)),e.colorDiffuse?h.color=n(e.colorDiffuse):e.DbgColor&&(h.color=e.DbgColor),e.colorSpecular&&(h.specular=n(e.colorSpecular)),e.colorAmbient&&(h.ambient=n(e.colorAmbient)),e.transparency&&(h.opacity=e.transparency),e.specularCoef&&(h.shininess=e.specularCoef),e.mapDiffuse&&t&&a(h,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&a(h,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&a(h,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&a(h,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&a(h,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(h.bumpScale=e.mapBumpScale),e.mapNormal){var c=THREE.ShaderLib.normalmap,u=THREE.UniformsUtils.clone(c.uniforms);u.tNormal.value=h.normalMap,e.mapNormalFactor&&u.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),h.map&&(u.tDiffuse.value=h.map,u.enableDiffuse.value=!0),h.specularMap&&(u.tSpecular.value=h.specularMap,u.enableSpecular.value=!0),h.lightMap&&(u.tAO.value=h.lightMap,u.enableAO.value=!0),u.uDiffuseColor.value.setHex(h.color),u.uSpecularColor.value.setHex(h.specular),u.uAmbientColor.value.setHex(h.ambient),u.uShininess.value=h.shininess,void 0!==h.opacity&&(u.uOpacity.value=h.opacity);var p={fragmentShader:c.fragmentShader,vertexShader:c.vertexShader,uniforms:u,lights:!0,fog:!0},f=new THREE.ShaderMaterial(p);h.transparent&&(f.transparent=!0)}else f=new THREE[s](h);return void 0!==e.DbgName&&(f.name=e.DbgName),f}},THREE.XHRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,r,i){var o=this,a=new XMLHttpRequest;void 0!==t&&a.addEventListener("load",function(r){t(r.target.responseText),o.manager.itemEnd(e)},!1),void 0!==r&&a.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&a.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),a.open("GET",e,!0),a.send(null),o.manager.itemStart(e)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,r,i){var o=this,a=document.createElement("img");void 0!==t&&a.addEventListener("load",function(r){o.manager.itemEnd(e),t(this)},!1),void 0!==r&&a.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&a.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),a.src=e,o.manager.itemStart(e)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,r){r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,o){var a=new XMLHttpRequest,n=0;a.onreadystatechange=function(){if(a.readyState===a.DONE)if(200===a.status||0===a.status){if(a.responseText){var s=JSON.parse(a.responseText),h=e.parse(s,i);r(h.geometry,h.materials)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+a.status+"]");else a.readyState===a.LOADING?o&&(0===n&&(n=a.getResponseHeader("Content-Length")),o({total:n,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&void 0!==o&&(n=a.getResponseHeader("Content-Length"))},a.open("GET",t,!0),a.withCredentials=this.withCredentials,a.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){var r=new THREE.Geometry,i=void 0!==e.scale?1/e.scale:1;if(function(t){function i(e,t){return e&1<<t}var o,a,n,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L=e.faces,P=e.vertices,D=e.normals,F=e.colors,V=0;if(void 0!==e.uvs){for(o=0;o<e.uvs.length;o++)e.uvs[o].length&&V++;for(o=0;o<V;o++)r.faceVertexUvs[o]=[]}s=0,h=P.length;for(;s<h;)(R=new THREE.Vector3).x=P[s++]*t,R.y=P[s++]*t,R.z=P[s++]*t,r.vertices.push(R);s=0,h=L.length;for(;s<h;)if(f=L[s++],E=i(f,0),d=i(f,1),m=i(f,3),g=i(f,4),v=i(f,5),T=i(f,6),y=i(f,7),E){if((H=new THREE.Face3).a=L[s],H.b=L[s+1],H.c=L[s+3],(_=new THREE.Face3).a=L[s+1],_.b=L[s+2],_.c=L[s+3],s+=4,d&&(p=L[s++],H.materialIndex=p,_.materialIndex=p),n=r.faces.length,m)for(o=0;o<V;o++)for(M=e.uvs[o],r.faceVertexUvs[o][n]=[],r.faceVertexUvs[o][n+1]=[],a=0;a<4;a++)u=L[s++],A=M[2*u],C=M[2*u+1],S=new THREE.Vector2(A,C),2!==a&&r.faceVertexUvs[o][n].push(S),0!==a&&r.faceVertexUvs[o][n+1].push(S);if(g&&(c=3*L[s++],H.normal.set(D[c++],D[c++],D[c]),_.normal.copy(H.normal)),v)for(o=0;o<4;o++)c=3*L[s++],b=new THREE.Vector3(D[c++],D[c++],D[c]),2!==o&&H.vertexNormals.push(b),0!==o&&_.vertexNormals.push(b);if(T&&(l=L[s++],w=F[l],H.color.setHex(w),_.color.setHex(w)),y)for(o=0;o<4;o++)l=L[s++],w=F[l],2!==o&&H.vertexColors.push(new THREE.Color(w)),0!==o&&_.vertexColors.push(new THREE.Color(w));r.faces.push(H),r.faces.push(_)}else{if((x=new THREE.Face3).a=L[s++],x.b=L[s++],x.c=L[s++],d&&(p=L[s++],x.materialIndex=p),n=r.faces.length,m)for(o=0;o<V;o++)for(M=e.uvs[o],r.faceVertexUvs[o][n]=[],a=0;a<3;a++)u=L[s++],A=M[2*u],C=M[2*u+1],S=new THREE.Vector2(A,C),r.faceVertexUvs[o][n].push(S);if(g&&(c=3*L[s++],x.normal.set(D[c++],D[c++],D[c])),v)for(o=0;o<3;o++)c=3*L[s++],b=new THREE.Vector3(D[c++],D[c++],D[c]),x.vertexNormals.push(b);if(T&&(l=L[s++],x.color.setHex(F[l])),y)for(o=0;o<3;o++)l=L[s++],x.vertexColors.push(new THREE.Color(F[l]));r.faces.push(x)}}(i),function(){var t,i,o,a,n,s,h,l,c,u;if(e.skinWeights)for(t=0,i=e.skinWeights.length;t<i;t+=2)o=e.skinWeights[t],a=e.skinWeights[t+1],n=0,s=0,r.skinWeights.push(new THREE.Vector4(o,a,n,s));if(e.skinIndices)for(t=0,i=e.skinIndices.length;t<i;t+=2)h=e.skinIndices[t],l=e.skinIndices[t+1],c=0,u=0,r.skinIndices.push(new THREE.Vector4(h,l,c,u));r.bones=e.bones,r.animation=e.animation}(),function(t){var i,o,a,n,s,h,l,c,u,p,f;if(void 0!==e.morphTargets)for(s=0,h=e.morphTargets.length;s<h;s++)for(r.morphTargets[s]={},r.morphTargets[s].name=e.morphTargets[s].name,r.morphTargets[s].vertices=[],a=r.morphTargets[s].vertices,n=e.morphTargets[s].vertices,i=0,o=n.length;i<o;i+=3){var E=new THREE.Vector3;E.x=n[i]*t,E.y=n[i+1]*t,E.z=n[i+2]*t,a.push(E)}if(void 0!==e.morphColors)for(s=0,h=e.morphColors.length;s<h;s++)for(r.morphColors[s]={},r.morphColors[s].name=e.morphColors[s].name,r.morphColors[s].colors=[],u=r.morphColors[s].colors,p=e.morphColors[s].colors,l=0,c=p.length;l<c;l+=3)(f=new THREE.Color(16755200)).setRGB(p[l],p[l+1],p[l+2]),u.push(f)}(i),r.computeCentroids(),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===e.materials)return{geometry:r};var o=this.initMaterials(e.materials,t);return this.needsTangents(o)&&r.computeTangents(),{geometry:r,materials:o}},THREE.LoadingManager=function(e,t,r){var i=this,o=0,a=0;this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){a++},this.itemEnd=function(e){o++,void 0!==i.onProgress&&i.onProgress(e,o,a),o===a&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(o.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,r=e.attributes,i=e.offsets,o=e.boundingSphere;for(var a in r){var n=r[a];t.attributes[a]={itemSize:n.itemSize,array:new self[n.type](n.array)}}return void 0!==i&&(t.offsets=JSON.parse(JSON.stringify(i))),void 0!==o&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==o.center?o.center:[0,0,0]),o.radius)),t}},THREE.GeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(o.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(o.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(void 0!==e.color&&t.color.setHex(e.color),void 0!==e.ambient&&t.ambient.setHex(e.ambient),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.materials)for(var r=0,i=e.materials.length;r<i;r++)t.materials.push(this.parse(e.materials[r]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader(o.manager);a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(o.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries),r=this.parseMaterials(e.materials);return this.parseObject(e.object,t,r)},parseGeometries:function(e){var t={};if(void 0!==e)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,o=0,a=e.length;o<a;o++){var n,s=e[o];switch(s.type){case"PlaneGeometry":n=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);break;case"CubeGeometry":n=new THREE.CubeGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CylinderGeometry":n=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radiusSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":n=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":n=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":n=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":n=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":n=i.parse(s.data);break;case"Geometry":n=r.parse(s.data).geometry}n.uuid=s.uuid,void 0!==s.name&&(n.name=s.name),t[s.uuid]=n}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var r=new THREE.MaterialLoader,i=0,o=e.length;i<o;i++){var a=e[i],n=r.parse(a);n.uuid=a.uuid,void 0!==a.name&&(n.name=a.name),t[a.uuid]=n}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,r,i){var o;switch(t.type){case"Scene":o=new THREE.Scene;break;case"PerspectiveCamera":o=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":o=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":o=new THREE.AmbientLight(t.color);break;case"DirectionalLight":o=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":o=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":o=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":o=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":var a=r[t.geometry],n=i[t.material];void 0===a&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry),void 0===n&&console.error("THREE.ObjectLoader: Undefined material "+t.material),o=new THREE.Mesh(a,n);break;default:o=new THREE.Object3D}if(o.uuid=t.uuid,void 0!==t.name&&(o.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(o.position,o.quaternion,o.scale)):(void 0!==t.position&&o.position.fromArray(t.position),void 0!==t.rotation&&o.rotation.fromArray(t.rotation),void 0!==t.scale&&o.scale.fromArray(t.scale)),void 0!==t.visible&&(o.visible=t.visible),void 0!==t.userData&&(o.userData=t.userData),void 0!==t.children)for(var s in t.children)o.add(this.parseObject(t.children[s],r,i));return o}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(e,t,r,i){var o=this,a=new THREE.XHRLoader(o.manager);a.setCrossOrigin(this.crossOrigin),a.load(e,function(r){o.parse(JSON.parse(r),t,e)})},setCrossOrigin:function(e){this.crossOrigin=e},addGeometryHandler:function(e,t){this.geometryHandlers[e]={loaderClass:t}},addHierarchyHandler:function(e,t){this.hierarchyHandlers[e]={loaderClass:t}},parse:function(e,t,r){var i,o,a,n,s,h,l,c,u,p,f,E,d,m,g=this,v=THREE.Loader.prototype.extractUrlBase(r),T=[],y=e;for(var R in this.geometryHandlers){var x=this.geometryHandlers[R].loaderClass;this.geometryHandlers[R].loaderObject=new x}for(var R in this.hierarchyHandlers){x=this.hierarchyHandlers[R].loaderClass;this.hierarchyHandlers[R].loaderObject=new x}if(p=0,f=0,m={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},y.transform){var H=y.transform.position,_=y.transform.rotation,w=y.transform.scale;H&&m.scene.position.fromArray(H),_&&m.scene.rotation.fromArray(_),w&&m.scene.scale.fromArray(w),(H||_||w)&&(m.scene.updateMatrix(),m.scene.updateMatrixWorld())}function b(e,t){return"relativeToHTML"==t?e:v+"/"+e}function M(){!function e(t,r){var n,s,h,p,f,E;for(var d in r){var v=m.objects[d],R=r[d];if(void 0===v){if(R.type&&R.type in g.hierarchyHandlers){if(void 0===R.loading){var x={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1},H={};for(var _ in R)_ in x||(H[_]=R[_]);o=m.materials[R.material],R.loading=!0;var w=g.hierarchyHandlers[R.type].loaderObject;w.options?w.load(b(R.url,y.urlBaseType),A(d,t,o,R)):w.load(b(R.url,y.urlBaseType),A(d,t,o,R),H)}}else if(void 0!==R.geometry){if(i=m.geometries[R.geometry]){var M=!1;if(o=m.materials[R.material],M=o instanceof THREE.ShaderMaterial,h=R.position,p=R.rotation,f=R.scale,n=R.matrix,E=R.quaternion,R.material||(o=new THREE.MeshFaceMaterial(m.face_materials[R.geometry])),o instanceof THREE.MeshFaceMaterial&&0===o.materials.length&&(o=new THREE.MeshFaceMaterial(m.face_materials[R.geometry])),o instanceof THREE.MeshFaceMaterial)for(var S=0;S<o.materials.length;S++)M=M||o.materials[S]instanceof THREE.ShaderMaterial;M&&i.computeTangents(),R.skin?v=new THREE.SkinnedMesh(i,o):R.morph?(v=new THREE.MorphAnimMesh(i,o),void 0!==R.duration&&(v.duration=R.duration),void 0!==R.time&&(v.time=R.time),void 0!==R.mirroredLoop&&(v.mirroredLoop=R.mirroredLoop),o.morphNormals&&i.computeMorphNormals()):v=new THREE.Mesh(i,o),v.name=d,n?(v.matrixAutoUpdate=!1,v.matrix.set(n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15])):(v.position.fromArray(h),E?v.quaternion.fromArray(E):v.rotation.fromArray(p),v.scale.fromArray(f)),v.visible=R.visible,v.castShadow=R.castShadow,v.receiveShadow=R.receiveShadow,t.add(v),m.objects[d]=v}}else"DirectionalLight"===R.type||"PointLight"===R.type||"AmbientLight"===R.type?(c=void 0!==R.color?R.color:16777215,u=void 0!==R.intensity?R.intensity:1,"DirectionalLight"===R.type?(h=R.direction,(l=new THREE.DirectionalLight(c,u)).position.fromArray(h),R.target&&(T.push({object:l,targetName:R.target}),l.target=null)):"PointLight"===R.type?(h=R.position,s=R.distance,(l=new THREE.PointLight(c,u,s)).position.fromArray(h)):"AmbientLight"===R.type&&(l=new THREE.AmbientLight(c)),t.add(l),l.name=d,m.lights[d]=l,m.objects[d]=l):"PerspectiveCamera"===R.type||"OrthographicCamera"===R.type?(h=R.position,p=R.rotation,E=R.quaternion,"PerspectiveCamera"===R.type?a=new THREE.PerspectiveCamera(R.fov,R.aspect,R.near,R.far):"OrthographicCamera"===R.type&&(a=new THREE.OrthographicCamera(R.left,R.right,R.top,R.bottom,R.near,R.far)),a.name=d,a.position.fromArray(h),void 0!==E?a.quaternion.fromArray(E):void 0!==p&&a.rotation.fromArray(p),t.add(a),m.cameras[d]=a,m.objects[d]=a):(h=R.position,p=R.rotation,f=R.scale,E=R.quaternion,(v=new THREE.Object3D).name=d,v.position.fromArray(h),E?v.quaternion.fromArray(E):v.rotation.fromArray(p),v.scale.fromArray(f),v.visible=void 0!==R.visible&&R.visible,t.add(v),m.objects[d]=v,m.empties[d]=v);if(v){if(void 0!==R.userData)for(var C in R.userData){var L=R.userData[C];v.userData[C]=L}if(void 0!==R.groups)for(var S=0;S<R.groups.length;S++){var P=R.groups[S];void 0===m.groups[P]&&(m.groups[P]=[]),m.groups[P].push(d)}}}void 0!==v&&void 0!==R.children&&e(v,R.children)}}(m.scene,y.objects)}function S(e){return function(t,r){var i,o,a;t.name=e,i=t,o=r,a=e,m.geometries[a]=i,m.face_materials[a]=o,M(),p-=1,g.onLoadComplete(),L()}}function A(e,t,r,i){return function(o){(function(e,t,r,i,o){var a=o.position,n=o.rotation,s=o.quaternion,h=o.scale;e.position.fromArray(a),s?e.quaternion.fromArray(s):e.rotation.fromArray(n),e.scale.fromArray(h),i&&e.traverse(function(e){e.material=i});var l=void 0===o.visible||o.visible;e.traverse(function(e){e.visible=l}),r.add(e),e.name=t,m.objects[t]=e,M()})(o.content?o.content:o.dae?o.scene:o,e,t,r,i),p-=1,g.onLoadComplete(),L()}}function C(e){return function(t,r){t.name=e,m.geometries[e]=t,m.face_materials[e]=r}}function L(){var e={totalModels:E,totalTextures:d,loadedModels:E-p,loadedTextures:d-f};g.callbackProgress(e,m),g.onLoadProgress(),0===p&&0===f&&(!function(){for(var e=0;e<T.length;e++){var t=T[e],r=m.objects[t.targetName];r?t.object.target=r:(t.object.target=new THREE.Object3D,m.scene.add(t.object.target)),t.object.target.userData.targetInverse=t.object}}(),t(m))}var P,D,F,V,U,z,B,N,O,I=function(e){return function(){f-=e,L(),g.onLoadComplete()}};function k(e,t){if(t(e),void 0!==e.children)for(var r in e.children)k(e.children[r],t)}for(P in y.fogs)"linear"===(D=y.fogs[P]).type?n=new THREE.Fog(0,D.near,D.far):"exp2"===D.type&&(n=new THREE.FogExp2(0,D.density)),h=D.color,n.color.setRGB(h[0],h[1],h[2]),m.fogs[P]=n;for(F in y.geometries)(V=y.geometries[F]).type in this.geometryHandlers&&(p+=1,g.onLoadStart());for(var G in y.objects)k(y.objects[G],function(e){e.type&&e.type in g.hierarchyHandlers&&(p+=1,g.onLoadStart())});for(F in E=p,y.geometries)if("cube"===(V=y.geometries[F]).type)(i=new THREE.CubeGeometry(V.width,V.height,V.depth,V.widthSegments,V.heightSegments,V.depthSegments)).name=F,m.geometries[F]=i;else if("plane"===V.type)(i=new THREE.PlaneGeometry(V.width,V.height,V.widthSegments,V.heightSegments)).name=F,m.geometries[F]=i;else if("sphere"===V.type)(i=new THREE.SphereGeometry(V.radius,V.widthSegments,V.heightSegments)).name=F,m.geometries[F]=i;else if("cylinder"===V.type)(i=new THREE.CylinderGeometry(V.topRad,V.botRad,V.height,V.radSegs,V.heightSegs)).name=F,m.geometries[F]=i;else if("torus"===V.type)(i=new THREE.TorusGeometry(V.radius,V.tube,V.segmentsR,V.segmentsT)).name=F,m.geometries[F]=i;else if("icosahedron"===V.type)(i=new THREE.IcosahedronGeometry(V.radius,V.subdivisions)).name=F,m.geometries[F]=i;else if(V.type in this.geometryHandlers){var W={};for(var j in V)"type"!==j&&"url"!==j&&(W[j]=V[j]);this.geometryHandlers[V.type].loaderObject.load(b(V.url,y.urlBaseType),S(F),W)}else if("embedded"===V.type){var X=y.embeds[V.id];if(X.metadata=y.metadata,X){var Y=this.geometryHandlers.ascii.loaderObject.parse(X,"");C(F)(Y.geometry,Y.materials)}}for(U in y.textures)if((z=y.textures[U]).url instanceof Array){f+=z.url.length;for(var q=0;q<z.url.length;q++)g.onLoadStart()}else f+=1,g.onLoadStart();for(U in d=f,y.textures){if(void 0!==(z=y.textures[U]).mapping&&void 0!==THREE[z.mapping]&&(z.mapping=new THREE[z.mapping]),z.url instanceof Array){for(var K=z.url.length,Q=[],Z=0;Z<K;Z++)Q[Z]=b(z.url[Z],y.urlBaseType);s=(J=/\.dds$/i.test(Q[0]))?THREE.ImageUtils.loadCompressedTextureCube(Q,z.mapping,I(K)):THREE.ImageUtils.loadTextureCube(Q,z.mapping,I(K))}else{var J=/\.dds$/i.test(z.url),$=b(z.url,y.urlBaseType),ee=I(1);if(s=J?THREE.ImageUtils.loadCompressedTexture($,z.mapping,ee):THREE.ImageUtils.loadTexture($,z.mapping,ee),void 0!==THREE[z.minFilter]&&(s.minFilter=THREE[z.minFilter]),void 0!==THREE[z.magFilter]&&(s.magFilter=THREE[z.magFilter]),z.anisotropy&&(s.anisotropy=z.anisotropy),z.repeat&&(s.repeat.set(z.repeat[0],z.repeat[1]),1!==z.repeat[0]&&(s.wrapS=THREE.RepeatWrapping),1!==z.repeat[1]&&(s.wrapT=THREE.RepeatWrapping)),z.offset&&s.offset.set(z.offset[0],z.offset[1]),z.wrap){var te={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==te[z.wrap[0]]&&(s.wrapS=te[z.wrap[0]]),void 0!==te[z.wrap[1]]&&(s.wrapT=te[z.wrap[1]])}}m.textures[U]=s}for(B in y.materials){for(O in(N=y.materials[B]).parameters)if("envMap"===O||"map"===O||"lightMap"===O||"bumpMap"===O)N.parameters[O]=m.textures[N.parameters[O]];else if("shading"===O)N.parameters[O]="flat"===N.parameters[O]?THREE.FlatShading:THREE.SmoothShading;else if("side"===O)"double"==N.parameters[O]?N.parameters[O]=THREE.DoubleSide:"back"==N.parameters[O]?N.parameters[O]=THREE.BackSide:N.parameters[O]=THREE.FrontSide;else if("blending"===O)N.parameters[O]=N.parameters[O]in THREE?THREE[N.parameters[O]]:THREE.NormalBlending;else if("combine"===O)N.parameters[O]=N.parameters[O]in THREE?THREE[N.parameters[O]]:THREE.MultiplyOperation;else if("vertexColors"===O)"face"==N.parameters[O]?N.parameters[O]=THREE.FaceColors:N.parameters[O]&&(N.parameters[O]=THREE.VertexColors);else if("wrapRGB"===O){var re=N.parameters[O];N.parameters[O]=new THREE.Vector3(re[0],re[1],re[2])}if(void 0!==N.parameters.opacity&&N.parameters.opacity<1&&(N.parameters.transparent=!0),N.parameters.normalMap){var ie=THREE.ShaderLib.normalmap,oe=THREE.UniformsUtils.clone(ie.uniforms),ae=N.parameters.color,ne=N.parameters.specular,se=N.parameters.ambient,he=N.parameters.shininess;oe.tNormal.value=m.textures[N.parameters.normalMap],N.parameters.normalScale&&oe.uNormalScale.value.set(N.parameters.normalScale[0],N.parameters.normalScale[1]),N.parameters.map&&(oe.tDiffuse.value=N.parameters.map,oe.enableDiffuse.value=!0),N.parameters.envMap&&(oe.tCube.value=N.parameters.envMap,oe.enableReflection.value=!0,oe.uReflectivity.value=N.parameters.reflectivity),N.parameters.lightMap&&(oe.tAO.value=N.parameters.lightMap,oe.enableAO.value=!0),N.parameters.specularMap&&(oe.tSpecular.value=m.textures[N.parameters.specularMap],oe.enableSpecular.value=!0),N.parameters.displacementMap&&(oe.tDisplacement.value=m.textures[N.parameters.displacementMap],oe.enableDisplacement.value=!0,oe.uDisplacementBias.value=N.parameters.displacementBias,oe.uDisplacementScale.value=N.parameters.displacementScale),oe.uDiffuseColor.value.setHex(ae),oe.uSpecularColor.value.setHex(ne),oe.uAmbientColor.value.setHex(se),oe.uShininess.value=he,N.parameters.opacity&&(oe.uOpacity.value=N.parameters.opacity);var le={fragmentShader:ie.fragmentShader,vertexShader:ie.vertexShader,uniforms:oe,lights:!0,fog:!0};o=new THREE.ShaderMaterial(le)}else o=new THREE[N.type](N.parameters);o.name=B,m.materials[B]=o}for(B in y.materials)if((N=y.materials[B]).parameters.materials){var ce=[];for(Z=0;Z<N.parameters.materials.length;Z++){var ue=N.parameters.materials[Z];ce.push(m.materials[ue])}m.materials[B].materials=ce}M(),m.cameras&&y.defaults.camera&&(m.currentCamera=m.cameras[y.defaults.camera]),m.fogs&&y.defaults.fog&&(m.scene.fog=m.fogs[y.defaults.fog]),g.callbackSync(m),L()}},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,r,i){var o=new THREE.ImageLoader(this.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){var r=new THREE.Texture(e);r.needsUpdate=!0,void 0!==t&&t(r)})},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r){if(t in this){var i=this[t];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]="overdraw"==t?Number(r):r}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),void 0===(e=e||{}).depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(e,t,r,i,o,a,n,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==o?o:THREE.LinearFilter,this.minFilter=void 0!==a?a:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==n?n:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,r,i,o,a,n,s,h,l,c){THREE.Texture.call(this,null,a,n,s,h,l,i,o,c),this.image={width:t,height:r},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,o,a,n,s,h,l,c){THREE.Texture.call(this,null,a,n,s,h,l,i,o,c),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var r,i=this.children.length;for(r=0;r<i;r++)this.children[r].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,r){var i,o,a,n,s,h;if(THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[],this.geometry&&void 0!==this.geometry.bones){for(i=0;i<this.geometry.bones.length;i++)n=(a=this.geometry.bones[i]).pos,s=a.rotq,h=a.scl,(o=this.addBone()).name=a.name,o.position.set(n[0],n[1],n[2]),o.quaternion.set(s[0],s[1],s[2],s[3]),void 0!==h?o.scale.set(h[0],h[1],h[2]):o.scale.set(1,1,1);for(i=0;i<this.bones.length;i++)a=this.geometry.bones[i],o=this.bones[i],-1===a.parent?this.add(o):this.bones[a.parent].add(o);var l,c=this.bones.length;if(this.useVertexTexture)l=c>256?64:c>64?32:c>16?16:8,this.boneTextureWidth=l,this.boneTextureHeight=l,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1;else this.boneMatrices=new Float32Array(16*c);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var e=new THREE.Matrix4;return function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var r=0,i=this.children.length;r<i;r++){var o=this.children[r];o instanceof THREE.Bone?o.update(this.identityMatrix,!1):o.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var a=0,n=this.bones.length;a<n;a++){var s=new THREE.Matrix4;s.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(s)}}for(a=0,n=this.bones.length;a<n;a++)e.multiplyMatrices(this.bones[a].skinMatrix,this.boneInverses[a]),e.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();r!==1/0?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)(\d+)/,o=0,a=e.morphTargets.length;o<a;o++){var n=e.morphTargets[o].name.match(i);if(n&&n.length>1){var s=n[1];n[2];r[s]||(r[s]={start:1/0,end:-1/0});var h=r[s];o<h.start&&(h.start=o),o>h.end&&(h.end=o),t||(t=s)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=(r.end-r.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r);var i=this.time%t/t;this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;r<this.objects.length&&!(t<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,r=this.objects.length;t<r&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object},THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){if(this.objects.length>1){e.getPositionFromMatrix(r.matrixWorld),t.getPositionFromMatrix(this.matrixWorld);var i=e.distanceTo(t);this.objects[0].object.visible=!0;for(var o=1,a=this.objects.length;o<a&&i>=this.objects[o].distance;o++)this.objects[o-1].object.visible=!1,this.objects[o].object.visible=!0;for(;o<a;o++)this.objects[o].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation,this.rotation3d.order),this.quaternion.setFromEuler(this.rotation3d),this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(var r=0;r<e.children.length;r++)this.__addObject(e.children[r])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light)-1!==(t=this.__lights.indexOf(e))&&this.__lights.splice(t,1);else if(!(e instanceof THREE.Camera)){var t;if(-1!==(t=this.__objects.indexOf(e))){this.__objects.splice(t,1),this.__objectsRemoved.push(e);var r=this.__objectsAdded.indexOf(e);-1!==r&&this.__objectsAdded.splice(r,1)}}for(var i=0;i<e.children.length;i++)this.__removeObject(e.children[i])},THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){console.log("THREE.CanvasRenderer",THREE.REVISION);var t=THREE.Math.smoothstep;e=e||{};var r,i,o,a,n,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L,P,D,F,V=this,U=new THREE.Projector,z=void 0!==e.canvas?e.canvas:document.createElement("canvas"),B=z.getContext("2d"),N=new THREE.Color(0),O=0,I=1,k=0,G=null,W=null,j=null,X=null,Y=null,q=null,K=0,Q=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),Z=new THREE.Color,J=new THREE.Color,$=new THREE.Color,ee=new THREE.Color,te=new THREE.Color,re=new THREE.Color,ie=new THREE.Color,oe={},ae={},ne=new THREE.Box2,se=new THREE.Box2,he=new THREE.Box2,le=new THREE.Color,ce=new THREE.Color,ue=new THREE.Color,pe=new THREE.Vector3,fe=16;function Ee(e,t,r){for(var i=0,a=o.length;i<a;i++){var n=o[i];if(ie.copy(n.color),n instanceof THREE.DirectionalLight){var s=pe.getPositionFromMatrix(n.matrixWorld).normalize();if((h=t.dot(s))<=0)continue;h*=n.intensity,r.add(ie.multiplyScalar(h))}else if(n instanceof THREE.PointLight){var h;s=pe.getPositionFromMatrix(n.matrixWorld);if((h=t.dot(pe.subVectors(s,e).normalize()))<=0)continue;if(0==(h*=0==n.distance?1:1-Math.min(e.distanceTo(s)/n.distance,1)))continue;h*=n.intensity,r.add(ie.multiplyScalar(h))}}}function de(e,t,r){var i,o,a,n,l,c,u;if(_e(r.opacity),we(r.blending),r instanceof THREE.ParticleBasicMaterial)if(null===r.map){if(a=t.object.scale.x,n=t.object.scale.y,a*=t.scale.x*s,n*=t.scale.y*h,he.min.set(e.x-a,e.y-n),he.max.set(e.x+a,e.y+n),!1===ne.isIntersectionBox(he))return void he.makeEmpty();Ce(r.color.getStyle()),B.save(),B.translate(e.x,e.y),B.rotate(-t.rotation),B.scale(a,n),B.fillRect(-1,-1,2,2),B.restore()}else{if(c=(l=r.map.image).width>>1,u=l.height>>1,i=(a=t.scale.x*s)*c,o=(n=t.scale.y*h)*u,he.min.set(e.x-i,e.y-o),he.max.set(e.x+i,e.y+o),!1===ne.isIntersectionBox(he))return void he.makeEmpty();B.save(),B.translate(e.x,e.y),B.rotate(-t.rotation),B.scale(a,-n),B.translate(-c,-u),B.drawImage(l,0,0),B.restore()}else if(r instanceof THREE.ParticleCanvasMaterial){if(i=t.scale.x*s,o=t.scale.y*h,he.min.set(e.x-i,e.y-o),he.max.set(e.x+i,e.y+o),!1===ne.isIntersectionBox(he))return void he.makeEmpty();Ae(r.color.getStyle()),Ce(r.color.getStyle()),B.save(),B.translate(e.x,e.y),B.rotate(-t.rotation),B.scale(i,o),r.program(B),B.restore()}}function me(e,t,r,i){if(_e(i.opacity),we(i.blending),B.beginPath(),B.moveTo(e.positionScreen.x,e.positionScreen.y),B.lineTo(t.positionScreen.x,t.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(be(i.linewidth),Me(i.linecap),Se(i.linejoin),i.vertexColors!==THREE.VertexColors)Ae(i.color.getStyle());else{var o=r.vertexColors[0].getStyle(),a=r.vertexColors[1].getStyle();if(o===a)Ae(o);else{try{var n=B.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);n.addColorStop(0,o),n.addColorStop(1,a)}catch(e){n=o}Ae(n)}}B.stroke(),he.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(be(i.linewidth),Me(i.linecap),Se(i.linejoin),Ae(i.color.getStyle()),Le(i.dashSize,i.gapSize),B.stroke(),he.expandByScalar(2*i.linewidth),Le(null,null))}function ge(e,r,i,o,a,n,s,h){var c,u,p,A,C,L;if(V.info.render.vertices+=3,V.info.render.faces++,_e(h.opacity),we(h.blending),f=e.positionScreen.x,E=e.positionScreen.y,d=r.positionScreen.x,m=r.positionScreen.y,g=i.positionScreen.x,v=i.positionScreen.y,c=f,u=E,p=d,A=m,C=g,L=v,B.beginPath(),B.moveTo(c,u),B.lineTo(p,A),B.lineTo(C,L),B.closePath(),(h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)&&null===h.map)te.copy(h.color),re.copy(h.emissive),h.vertexColors===THREE.FaceColors&&te.multiply(s.color),!1===h.wireframe&&h.shading==THREE.SmoothShading&&3==s.vertexNormalsLength?(Z.copy(le),J.copy(le),$.copy(le),Ee(s.v1.positionWorld,s.vertexNormalsModel[0],Z),Ee(s.v2.positionWorld,s.vertexNormalsModel[1],J),Ee(s.v3.positionWorld,s.vertexNormalsModel[2],$),Z.multiply(te).add(re),J.multiply(te).add(re),$.multiply(te).add(re),ee.addColors(J,$).multiplyScalar(.5),R=xe(Z,J,$,ee),Re(f,E,d,m,g,v,0,0,1,0,0,1,R)):(Q.copy(le),Ee(s.centroidModel,s.normalModel,Q),Q.multiply(te).add(re),!0===h.wireframe?ve(Q,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):Te(Q));else if(h instanceof THREE.MeshBasicMaterial||h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)null!==h.map?h.map.mapping instanceof THREE.UVMapping&&(x=s.uvs[0],ye(f,E,d,m,g,v,x[o].x,x[o].y,x[a].x,x[a].y,x[n].x,x[n].y,h.map)):null!==h.envMap?h.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(pe.copy(s.vertexNormalsModelView[o]),H=.5*pe.x+.5,_=.5*pe.y+.5,pe.copy(s.vertexNormalsModelView[a]),w=.5*pe.x+.5,b=.5*pe.y+.5,pe.copy(s.vertexNormalsModelView[n]),M=.5*pe.x+.5,S=.5*pe.y+.5,ye(f,E,d,m,g,v,H,_,w,b,M,S,h.envMap)):(Q.copy(h.color),h.vertexColors===THREE.FaceColors&&Q.multiply(s.color),!0===h.wireframe?ve(Q,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):Te(Q));else if(h instanceof THREE.MeshDepthMaterial)T=l.near,y=l.far,Z.r=Z.g=Z.b=1-t(e.positionScreen.z*e.positionScreen.w,T,y),J.r=J.g=J.b=1-t(r.positionScreen.z*r.positionScreen.w,T,y),$.r=$.g=$.b=1-t(i.positionScreen.z*i.positionScreen.w,T,y),ee.addColors(J,$).multiplyScalar(.5),R=xe(Z,J,$,ee),Re(f,E,d,m,g,v,0,0,1,0,0,1,R);else if(h instanceof THREE.MeshNormalMaterial){var P;h.shading==THREE.FlatShading?(P=s.normalModelView,Q.setRGB(P.x,P.y,P.z).multiplyScalar(.5).addScalar(.5),!0===h.wireframe?ve(Q,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):Te(Q)):h.shading==THREE.SmoothShading&&(P=s.vertexNormalsModelView[o],Z.setRGB(P.x,P.y,P.z).multiplyScalar(.5).addScalar(.5),P=s.vertexNormalsModelView[a],J.setRGB(P.x,P.y,P.z).multiplyScalar(.5).addScalar(.5),P=s.vertexNormalsModelView[n],$.setRGB(P.x,P.y,P.z).multiplyScalar(.5).addScalar(.5),ee.addColors(J,$).multiplyScalar(.5),R=xe(Z,J,$,ee),Re(f,E,d,m,g,v,0,0,1,0,0,1,R))}}function ve(e,t,r,i){be(t),Me(r),Se(i),Ae(e.getStyle()),B.stroke(),he.expandByScalar(2*t)}function Te(e){Ce(e.getStyle()),B.fill()}function ye(e,t,r,i,o,a,n,s,h,l,c,u,p){if(!(p instanceof THREE.DataTexture||void 0===p.image||0==p.image.width)){if(!0===p.needsUpdate){var f=p.wrapS==THREE.RepeatWrapping,E=p.wrapT==THREE.RepeatWrapping;oe[p.id]=B.createPattern(p.image,!0===f&&!0===E?"repeat":!0===f&&!1===E?"repeat-x":!1===f&&!0===E?"repeat-y":"no-repeat"),p.needsUpdate=!1}void 0===oe[p.id]?Ce("rgba(0,0,0,1)"):Ce(oe[p.id]);var d,m,g,v,T,y,R,x,H=p.offset.x/p.repeat.x,_=p.offset.y/p.repeat.y,w=p.image.width*p.repeat.x,b=p.image.height*p.repeat.y;if(h=(h+H)*w,l=(1-l+_)*b,c=(c+H)*w,u=(1-u+_)*b,r-=e,i-=t,o-=e,a-=t,0===(R=(h-=n=(n+H)*w)*(u-=s=(1-s+_)*b)-(c-=n)*(l-=s))){if(void 0===ae[p.id]){var M=document.createElement("canvas");M.width=p.image.width,M.height=p.image.height;var S=M.getContext("2d");S.drawImage(p.image,0,0),ae[p.id]=S.getImageData(0,0,p.image.width,p.image.height).data}var A=ae[p.id],C=4*(Math.floor(n)+Math.floor(s)*p.image.width);return Q.setRGB(A[C]/255,A[C+1]/255,A[C+2]/255),void Te(Q)}T=e-(d=(u*r-l*o)*(x=1/R))*n-(g=(h*o-c*r)*x)*s,y=t-(m=(u*i-l*a)*x)*n-(v=(h*a-c*i)*x)*s,B.save(),B.transform(d,m,g,v,T,y),B.fill(),B.restore()}}function Re(e,t,r,i,o,a,n,s,h,l,c,u,p){var f,E,d,m,g,v,T,y=p.width-1,R=p.height-1;h*=y,l*=R,c*=y,u*=R,g=e-(f=((u-=s*=R)*(r-=e)-(l-=s)*(o-=e))*(T=1/((h-=n*=y)*u-(c-=n)*l)))*n-(d=(h*o-c*r)*T)*s,v=t-(E=(u*(i-=t)-l*(a-=t))*T)*n-(m=(h*a-c*i)*T)*s,B.save(),B.transform(f,E,d,m,g,v),B.clip(),B.drawImage(p,0,0),B.restore()}function xe(e,t,r,i){return P[0]=255*e.r|0,P[1]=255*e.g|0,P[2]=255*e.b|0,P[4]=255*t.r|0,P[5]=255*t.g|0,P[6]=255*t.b|0,P[8]=255*r.r|0,P[9]=255*r.g|0,P[10]=255*r.b|0,P[12]=255*i.r|0,P[13]=255*i.g|0,P[14]=255*i.b|0,C.putImageData(L,0,0),F.drawImage(A,0,0),D}function He(e,t,r){var i,o=t.x-e.x,a=t.y-e.y,n=o*o+a*a;0!==n&&(o*=i=r/Math.sqrt(n),a*=i,t.x+=o,t.y+=a,e.x-=o,e.y-=a)}function _e(e){I!==e&&(B.globalAlpha=e,I=e)}function we(e){k!==e&&(e===THREE.NormalBlending?B.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?B.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(B.globalCompositeOperation="darker"),k=e)}function be(e){j!==e&&(B.lineWidth=e,j=e)}function Me(e){X!==e&&(B.lineCap=e,X=e)}function Se(e){Y!==e&&(B.lineJoin=e,Y=e)}function Ae(e){G!==e&&(B.strokeStyle=e,G=e)}function Ce(e){W!==e&&(B.fillStyle=e,W=e)}function Le(e,t){q===e&&K===t||(B.setLineDash([e,t]),q=e,K=t)}(A=document.createElement("canvas")).width=A.height=2,(C=A.getContext("2d")).fillStyle="rgba(0,0,0,1)",C.fillRect(0,0,2,2),L=C.getImageData(0,0,2,2),P=L.data,(D=document.createElement("canvas")).width=D.height=fe,(F=D.getContext("2d")).translate(-fe/2,-fe/2),F.scale(fe,fe),fe--,void 0===B.setLineDash&&(void 0!==B.mozDash?B.setLineDash=function(e){B.mozDash=null!==e[0]?e:null}:B.setLineDash=function(){}),this.domElement=z,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t,r){a=e*this.devicePixelRatio,n=t*this.devicePixelRatio,s=Math.floor(a/2),h=Math.floor(n/2),z.width=a,z.height=n,1!==this.devicePixelRatio&&!1!==r&&(z.style.width=e+"px",z.style.height=t+"px"),ne.set(new THREE.Vector2(-s,-h),new THREE.Vector2(s,h)),se.set(new THREE.Vector2(-s,-h),new THREE.Vector2(s,h)),I=1,k=0,G=null,W=null,j=null,X=null,Y=null},this.setClearColor=function(e,t){N.set(e),O=void 0!==t?t:1,se.set(new THREE.Vector2(-s,-h),new THREE.Vector2(s,h))},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){B.setTransform(1,0,0,-1,s,h),!1===se.empty()&&(se.intersect(ne),se.expandByScalar(2),O<1&&B.clearRect(0|se.min.x,0|se.min.y,se.max.x-se.min.x|0,se.max.y-se.min.y|0),O>0&&(we(THREE.NormalBlending),_e(1),Ce("rgba("+Math.floor(255*N.r)+","+Math.floor(255*N.g)+","+Math.floor(255*N.b)+","+O+")"),B.fillRect(0|se.min.x,0|se.min.y,se.max.x-se.min.x|0,se.max.y-se.min.y|0)),se.makeEmpty())},this.render=function(e,t){if(t instanceof THREE.Camera!=!1){!0===this.autoClear&&this.clear(),B.setTransform(1,0,0,-1,s,h),V.info.render.vertices=0,V.info.render.faces=0,r=U.projectScene(e,t,this.sortObjects,this.sortElements),i=r.elements,o=r.lights,l=t,function(){le.setRGB(0,0,0),ce.setRGB(0,0,0),ue.setRGB(0,0,0);for(var e=0,t=o.length;e<t;e++){var r=o[e],i=r.color;r instanceof THREE.AmbientLight?le.add(i):r instanceof THREE.DirectionalLight?ce.add(i):r instanceof THREE.PointLight&&ue.add(i)}}();for(var a=0,n=i.length;a<n;a++){var f=i[a],E=f.material;if(void 0!==E&&!1!==E.visible){if(he.makeEmpty(),f instanceof THREE.RenderableParticle)(c=f).x*=s,c.y*=h,de(c,f,E);else if(f instanceof THREE.RenderableLine)c=f.v1,u=f.v2,c.positionScreen.x*=s,c.positionScreen.y*=h,u.positionScreen.x*=s,u.positionScreen.y*=h,he.setFromPoints([c.positionScreen,u.positionScreen]),!0===ne.isIntersectionBox(he)&&me(c,u,f,E);else if(f instanceof THREE.RenderableFace3){if(c=f.v1,u=f.v2,p=f.v3,c.positionScreen.z<-1||c.positionScreen.z>1)continue;if(u.positionScreen.z<-1||u.positionScreen.z>1)continue;if(p.positionScreen.z<-1||p.positionScreen.z>1)continue;c.positionScreen.x*=s,c.positionScreen.y*=h,u.positionScreen.x*=s,u.positionScreen.y*=h,p.positionScreen.x*=s,p.positionScreen.y*=h,E.overdraw>0&&(He(c.positionScreen,u.positionScreen,E.overdraw),He(u.positionScreen,p.positionScreen,E.overdraw),He(p.positionScreen,c.positionScreen,E.overdraw)),he.setFromPoints([c.positionScreen,u.positionScreen,p.positionScreen]),!0===ne.isIntersectionBox(he)&&ge(c,u,p,0,1,2,f,E)}se.union(he)}}B.setTransform(1,0,0,1,0,0)}else console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix \t+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","vec3 shadowZ = vec3( shadowCoord.z );","shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","shadowKernel[0] *= vec3(0.25);","shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","shadowKernel[1] *= vec3(0.25);","shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","shadowKernel[2] *= vec3(0.25);","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(e){var t,r,i,o={};for(t=0;t<e.length;t++)for(r in i=this.clone(e[t]))o[r]=i[r];return o},clone:function(e){var t,r,i,o={};for(t in e)for(r in o[t]={},e[t])(i=e[t][r])instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?o[t][r]=i.clone():i instanceof Array?o[t][r]=i.slice():o[t][r]=i;return o}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {","vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(e){console.log("THREE.WebGLRenderer",THREE.REVISION);var t=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),r=void 0!==e.precision?e.precision:"highp",i=void 0===e.alpha||e.alpha,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,a=void 0!==e.antialias&&e.antialias,n=void 0===e.stencil||e.stencil,s=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,h=new THREE.Color(0),l=0;void 0!==e.clearColor&&(console.warn("DEPRECATED: clearColor in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),h.setHex(e.clearColor)),void 0!==e.clearAlpha&&(console.warn("DEPRECATED: clearAlpha in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),l=e.clearAlpha),this.domElement=t,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var c,u,p,f,E,d=this,m=[],g=0,v=null,T=null,y=-1,R=null,x=null,H=0,_=0,w=-1,b=-1,M=-1,S=-1,A=-1,C=-1,L=-1,P=-1,D=null,F=null,V=null,U=null,z=0,B=0,N=0,O=0,I=0,k=0,G={},W=new THREE.Frustum,j=new THREE.Matrix4,X=new THREE.Matrix4,Y=new THREE.Vector3,q=new THREE.Vector3,K=!0,Q={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};!function(){try{var e={alpha:i,premultipliedAlpha:o,antialias:a,stencil:n,preserveDrawingBuffer:s};if(null===(c=t.getContext("webgl",e)||t.getContext("experimental-webgl",e)))throw"Error creating WebGL context."}catch(e){console.error(e)}u=c.getExtension("OES_texture_float"),c.getExtension("OES_texture_float_linear"),p=c.getExtension("OES_standard_derivatives"),f=c.getExtension("EXT_texture_filter_anisotropic")||c.getExtension("MOZ_EXT_texture_filter_anisotropic")||c.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),E=c.getExtension("WEBGL_compressed_texture_s3tc")||c.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||c.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),u||console.log("THREE.WebGLRenderer: Float textures not supported.");p||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");f||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");E||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===c.getShaderPrecisionFormat&&(c.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}(),c.clearColor(0,0,0,1),c.clearDepth(1),c.clearStencil(0),c.enable(c.DEPTH_TEST),c.depthFunc(c.LEQUAL),c.frontFace(c.CCW),c.cullFace(c.BACK),c.enable(c.CULL_FACE),c.enable(c.BLEND),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA),c.clearColor(h.r,h.g,h.b,l),this.context=c;var Z=c.getParameter(c.MAX_TEXTURE_IMAGE_UNITS),J=c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS),$=(c.getParameter(c.MAX_TEXTURE_SIZE),c.getParameter(c.MAX_CUBE_MAP_TEXTURE_SIZE)),ee=f?c.getParameter(f.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,te=J>0,re=te&&u,ie=(E&&c.getParameter(c.COMPRESSED_TEXTURE_FORMATS),c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.HIGH_FLOAT)),oe=c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.MEDIUM_FLOAT),ae=(c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.LOW_FLOAT),c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.HIGH_FLOAT)),ne=c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.MEDIUM_FLOAT),se=(c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.LOW_FLOAT),c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.HIGH_INT),c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.MEDIUM_INT),c.getShaderPrecisionFormat(c.VERTEX_SHADER,c.LOW_INT),c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.HIGH_INT),c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.MEDIUM_INT),c.getShaderPrecisionFormat(c.FRAGMENT_SHADER,c.LOW_INT),ie.precision>0&&ae.precision>0),he=oe.precision>0&&ne.precision>0;function le(e){var t,r;if(e.__webglVertexBuffer=c.createBuffer(),e.__webglNormalBuffer=c.createBuffer(),e.__webglTangentBuffer=c.createBuffer(),e.__webglColorBuffer=c.createBuffer(),e.__webglUVBuffer=c.createBuffer(),e.__webglUV2Buffer=c.createBuffer(),e.__webglSkinIndicesBuffer=c.createBuffer(),e.__webglSkinWeightsBuffer=c.createBuffer(),e.__webglFaceBuffer=c.createBuffer(),e.__webglLineBuffer=c.createBuffer(),e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],t=0,r=e.numMorphTargets;t<r;t++)e.__webglMorphTargetsBuffers.push(c.createBuffer());if(e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],t=0,r=e.numMorphNormals;t<r;t++)e.__webglMorphNormalsBuffers.push(c.createBuffer());d.info.memory.geometries++}"highp"!==r||se||(he?(r="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(r="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==r||he||(r="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return c},this.supportsVertexTextures=function(){return te},this.supportsFloatTextures=function(){return u},this.supportsStandardDerivatives=function(){return p},this.supportsCompressedTextureS3TC=function(){return E},this.getMaxAnisotropy=function(){return ee},this.getPrecision=function(){return r},this.setSize=function(e,r,i){t.width=e*this.devicePixelRatio,t.height=r*this.devicePixelRatio,1!==this.devicePixelRatio&&!1!==i&&(t.style.width=e+"px",t.style.height=r+"px"),this.setViewport(0,0,t.width,t.height)},this.setViewport=function(e,r,i,o){z=void 0!==e?e:0,B=void 0!==r?r:0,N=void 0!==i?i:t.width,O=void 0!==o?o:t.height,c.viewport(z,B,N,O)},this.setScissor=function(e,t,r,i){c.scissor(e,t,r,i)},this.enableScissorTest=function(e){e?c.enable(c.SCISSOR_TEST):c.disable(c.SCISSOR_TEST)},this.setClearColor=function(e,t){h.set(e),l=void 0!==t?t:1,c.clearColor(h.r,h.g,h.b,l)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return h},this.getClearAlpha=function(){return l},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=c.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=c.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=c.STENCIL_BUFFER_BIT),c.clear(i)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){v=null,M=-1,L=-1,P=-1,R=-1,y=-1,K=!0,w=-1,b=-1,this.shadowMapPlugin.update(e,t)};var ce=function(e){var t=e.target;t.removeEventListener("dispose",ce),de(t)},ue=function(e){var t=e.target;t.removeEventListener("dispose",ue),me(t),d.info.memory.textures--},pe=function(e){var t=e.target;t.removeEventListener("dispose",pe),ge(t),d.info.memory.textures--},fe=function(e){var t=e.target;t.removeEventListener("dispose",fe),ve(t)},Ee=function(e){if(void 0!==e.__webglVertexBuffer&&c.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&c.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&c.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&c.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&c.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&c.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&c.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&c.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&c.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&c.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&c.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)c.deleteBuffer(e.__webglCustomAttributesList[t].buffer);d.info.memory.geometries--},de=function(e){if(e.__webglInit=void 0,e instanceof THREE.BufferGeometry){var t=e.attributes;for(var r in t)void 0!==t[r].buffer&&c.deleteBuffer(t[r].buffer);d.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(var i in e.geometryGroups){var o=e.geometryGroups[i];if(void 0!==o.numMorphTargets)for(var a=0,n=o.numMorphTargets;a<n;a++)c.deleteBuffer(o.__webglMorphTargetsBuffers[a]);if(void 0!==o.numMorphNormals)for(a=0,n=o.numMorphNormals;a<n;a++)c.deleteBuffer(o.__webglMorphNormalsBuffers[a]);Ee(o)}else Ee(e)},me=function(e){if(e.image&&e.image.__webglTextureCube)c.deleteTexture(e.image.__webglTextureCube);else{if(!e.__webglInit)return;e.__webglInit=!1,c.deleteTexture(e.__webglTexture)}},ge=function(e){if(e&&e.__webglTexture)if(c.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;t<6;t++)c.deleteFramebuffer(e.__webglFramebuffer[t]),c.deleteRenderbuffer(e.__webglRenderbuffer[t]);else c.deleteFramebuffer(e.__webglFramebuffer),c.deleteRenderbuffer(e.__webglRenderbuffer)},ve=function(e){var t=e.program;if(void 0!==t){var r,i,o;e.program=void 0;var a=!1;for(r=0,i=m.length;r<i;r++)if((o=m[r]).program===t){o.usedTimes--,0===o.usedTimes&&(a=!0);break}if(!0===a){var n=[];for(r=0,i=m.length;r<i;r++)(o=m[r]).program!==t&&n.push(o);m=n,c.deleteProgram(t),d.info.memory.programs--}}};function Te(e,t){var r=e.vertices.length,i=t.material;if(i.attributes)for(var o in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),i.attributes){var a=i.attributes[o];if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0;var n=1;"v2"===a.type?n=2:"v3"===a.type?n=3:"v4"===a.type?n=4:"c"===a.type&&(n=3),a.size=n,a.array=new Float32Array(r*n),a.buffer=c.createBuffer(),a.buffer.belongsToAttribute=o,a.needsUpdate=!0}e.__webglCustomAttributesList.push(a)}}function ye(e,t){var r,i,o=t.geometry,a=e.faces3,n=3*a.length,s=1*a.length,h=3*a.length,l=Re(t,e),u=_e(l),p=xe(l),f=He(l);if(e.__vertexArray=new Float32Array(3*n),p&&(e.__normalArray=new Float32Array(3*n)),o.hasTangents&&(e.__tangentArray=new Float32Array(4*n)),f&&(e.__colorArray=new Float32Array(3*n)),u&&(o.faceVertexUvs.length>0&&(e.__uvArray=new Float32Array(2*n)),o.faceVertexUvs.length>1&&(e.__uv2Array=new Float32Array(2*n))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*n),e.__skinWeightArray=new Float32Array(4*n)),e.__faceArray=new Uint16Array(3*s),e.__lineArray=new Uint16Array(2*h),e.numMorphTargets)for(e.__morphTargetsArrays=[],r=0,i=e.numMorphTargets;r<i;r++)e.__morphTargetsArrays.push(new Float32Array(3*n));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],r=0,i=e.numMorphNormals;r<i;r++)e.__morphNormalsArrays.push(new Float32Array(3*n));if(e.__webglFaceCount=3*s,e.__webglLineCount=2*h,l.attributes)for(var E in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),l.attributes){var d=l.attributes[E],m={};for(var g in d)m[g]=d[g];if(!m.__webglInitialized||m.createUniqueBuffers){m.__webglInitialized=!0;var v=1;"v2"===m.type?v=2:"v3"===m.type?v=3:"v4"===m.type?v=4:"c"===m.type&&(v=3),m.size=v,m.array=new Float32Array(n*v),m.buffer=c.createBuffer(),m.buffer.belongsToAttribute=E,d.needsUpdate=!0,m.__original=d}e.__webglCustomAttributesList.push(m)}e.__inittedArrays=!0}function Re(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function xe(e){return!(e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial)&&((t=e)&&void 0!==t.shading&&t.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading);var t}function He(e){return!!e.vertexColors&&e.vertexColors}function _e(e){return!!(e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial)}function we(e,t,r,i,o){if(e.__inittedArrays){var a,n,s,h,l,u,p,f,E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A,C,L,P,D,F,V,U,z,B,N,O,I,k,G,W,j,X,Y=xe(o),q=He(o),K=_e(o),Q=Y===THREE.SmoothShading,Z=0,J=0,$=0,ee=0,te=0,re=0,ie=0,oe=0,ae=0,ne=0,se=0,he=0,le=e.__vertexArray,ce=e.__uvArray,ue=e.__uv2Array,pe=e.__normalArray,fe=e.__tangentArray,Ee=e.__colorArray,de=e.__skinIndexArray,me=e.__skinWeightArray,ge=e.__morphTargetsArrays,ve=e.__morphNormalsArrays,Te=e.__webglCustomAttributesList,ye=e.__faceArray,Re=e.__lineArray,we=t.geometry,be=we.verticesNeedUpdate,Me=we.elementsNeedUpdate,Se=we.uvsNeedUpdate,Ae=we.normalsNeedUpdate,Ce=we.tangentsNeedUpdate,Le=we.colorsNeedUpdate,Pe=we.morphTargetsNeedUpdate,De=we.vertices,Fe=e.faces3,Ve=we.faces,Ue=we.faceVertexUvs[0],ze=we.faceVertexUvs[1],Be=(we.colors,we.skinIndices),Ne=we.skinWeights,Oe=we.morphTargets,Ie=we.morphNormals;if(be){for(a=0,n=Fe.length;a<n;a++)m=De[(s=Ve[Fe[a]]).a],g=De[s.b],v=De[s.c],le[J]=m.x,le[J+1]=m.y,le[J+2]=m.z,le[J+3]=g.x,le[J+4]=g.y,le[J+5]=g.z,le[J+6]=v.x,le[J+7]=v.y,le[J+8]=v.z,J+=9;c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,le,r)}if(Pe)for(N=0,O=Oe.length;N<O;N++){for(se=0,a=0,n=Fe.length;a<n;a++)s=Ve[G=Fe[a]],m=Oe[N].vertices[s.a],g=Oe[N].vertices[s.b],v=Oe[N].vertices[s.c],(I=ge[N])[se]=m.x,I[se+1]=m.y,I[se+2]=m.z,I[se+3]=g.x,I[se+4]=g.y,I[se+5]=g.z,I[se+6]=v.x,I[se+7]=v.y,I[se+8]=v.z,o.morphNormals&&(Q?(x=(W=Ie[N].vertexNormals[G]).a,H=W.b,_=W.c):(H=x=Ie[N].faceNormals[G],_=x),(k=ve[N])[se]=x.x,k[se+1]=x.y,k[se+2]=x.z,k[se+3]=H.x,k[se+4]=H.y,k[se+5]=H.z,k[se+6]=_.x,k[se+7]=_.y,k[se+8]=_.z),se+=9;c.bindBuffer(c.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[N]),c.bufferData(c.ARRAY_BUFFER,ge[N],r),o.morphNormals&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[N]),c.bufferData(c.ARRAY_BUFFER,ve[N],r))}if(Ne.length){for(a=0,n=Fe.length;a<n;a++)S=Ne[(s=Ve[Fe[a]]).a],A=Ne[s.b],C=Ne[s.c],me[ne]=S.x,me[ne+1]=S.y,me[ne+2]=S.z,me[ne+3]=S.w,me[ne+4]=A.x,me[ne+5]=A.y,me[ne+6]=A.z,me[ne+7]=A.w,me[ne+8]=C.x,me[ne+9]=C.y,me[ne+10]=C.z,me[ne+11]=C.w,L=Be[s.a],P=Be[s.b],D=Be[s.c],de[ne]=L.x,de[ne+1]=L.y,de[ne+2]=L.z,de[ne+3]=L.w,de[ne+4]=P.x,de[ne+5]=P.y,de[ne+6]=P.z,de[ne+7]=P.w,de[ne+8]=D.x,de[ne+9]=D.y,de[ne+10]=D.z,de[ne+11]=D.w,ne+=12;ne>0&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),c.bufferData(c.ARRAY_BUFFER,de,r),c.bindBuffer(c.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),c.bufferData(c.ARRAY_BUFFER,me,r))}if(Le&&q){for(a=0,n=Fe.length;a<n;a++)u=(s=Ve[Fe[a]]).vertexColors,p=s.color,3===u.length&&q===THREE.VertexColors?(w=u[0],b=u[1],M=u[2]):(w=p,b=p,M=p),Ee[ae]=w.r,Ee[ae+1]=w.g,Ee[ae+2]=w.b,Ee[ae+3]=b.r,Ee[ae+4]=b.g,Ee[ae+5]=b.b,Ee[ae+6]=M.r,Ee[ae+7]=M.g,Ee[ae+8]=M.b,ae+=9;ae>0&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,Ee,r))}if(Ce&&we.hasTangents){for(a=0,n=Fe.length;a<n;a++)T=(f=(s=Ve[Fe[a]]).vertexTangents)[0],y=f[1],R=f[2],fe[ie]=T.x,fe[ie+1]=T.y,fe[ie+2]=T.z,fe[ie+3]=T.w,fe[ie+4]=y.x,fe[ie+5]=y.y,fe[ie+6]=y.z,fe[ie+7]=y.w,fe[ie+8]=R.x,fe[ie+9]=R.y,fe[ie+10]=R.z,fe[ie+11]=R.w,ie+=12;c.bindBuffer(c.ARRAY_BUFFER,e.__webglTangentBuffer),c.bufferData(c.ARRAY_BUFFER,fe,r)}if(Ae&&Y){for(a=0,n=Fe.length;a<n;a++)if(h=(s=Ve[Fe[a]]).vertexNormals,l=s.normal,3===h.length&&Q)for(F=0;F<3;F++)U=h[F],pe[re]=U.x,pe[re+1]=U.y,pe[re+2]=U.z,re+=3;else for(F=0;F<3;F++)pe[re]=l.x,pe[re+1]=l.y,pe[re+2]=l.z,re+=3;c.bindBuffer(c.ARRAY_BUFFER,e.__webglNormalBuffer),c.bufferData(c.ARRAY_BUFFER,pe,r)}if(Se&&Ue&&K){for(a=0,n=Fe.length;a<n;a++)if(void 0!==(E=Ue[Fe[a]]))for(F=0;F<3;F++)z=E[F],ce[$]=z.x,ce[$+1]=z.y,$+=2;$>0&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglUVBuffer),c.bufferData(c.ARRAY_BUFFER,ce,r))}if(Se&&ze&&K){for(a=0,n=Fe.length;a<n;a++)if(void 0!==(d=ze[Fe[a]]))for(F=0;F<3;F++)B=d[F],ue[ee]=B.x,ue[ee+1]=B.y,ee+=2;ee>0&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglUV2Buffer),c.bufferData(c.ARRAY_BUFFER,ue,r))}if(Me){for(a=0,n=Fe.length;a<n;a++)ye[te]=Z,ye[te+1]=Z+1,ye[te+2]=Z+2,te+=3,Re[oe]=Z,Re[oe+1]=Z+1,Re[oe+2]=Z,Re[oe+3]=Z+2,Re[oe+4]=Z+1,Re[oe+5]=Z+2,oe+=6,Z+=3;c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,ye,r),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,Re,r)}if(Te)for(F=0,V=Te.length;F<V;F++)if((X=Te[F]).__original.needsUpdate){if(he=0,0,1===X.size){if(void 0===X.boundTo||"vertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)s=Ve[Fe[a]],X.array[he]=X.value[s.a],X.array[he+1]=X.value[s.b],X.array[he+2]=X.value[s.c],he+=3;else if("faces"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)j=X.value[Fe[a]],X.array[he]=j,X.array[he+1]=j,X.array[he+2]=j,he+=3}else if(2===X.size){if(void 0===X.boundTo||"vertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)s=Ve[Fe[a]],m=X.value[s.a],g=X.value[s.b],v=X.value[s.c],X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=g.x,X.array[he+3]=g.y,X.array[he+4]=v.x,X.array[he+5]=v.y,he+=6;else if("faces"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=j=X.value[Fe[a]],g=j,v=j,X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=g.x,X.array[he+3]=g.y,X.array[he+4]=v.x,X.array[he+5]=v.y,he+=6}else if(3===X.size){var ke;if(ke="c"===X.type?["r","g","b"]:["x","y","z"],void 0===X.boundTo||"vertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)s=Ve[Fe[a]],m=X.value[s.a],g=X.value[s.b],v=X.value[s.c],X.array[he]=m[ke[0]],X.array[he+1]=m[ke[1]],X.array[he+2]=m[ke[2]],X.array[he+3]=g[ke[0]],X.array[he+4]=g[ke[1]],X.array[he+5]=g[ke[2]],X.array[he+6]=v[ke[0]],X.array[he+7]=v[ke[1]],X.array[he+8]=v[ke[2]],he+=9;else if("faces"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=j=X.value[Fe[a]],g=j,v=j,X.array[he]=m[ke[0]],X.array[he+1]=m[ke[1]],X.array[he+2]=m[ke[2]],X.array[he+3]=g[ke[0]],X.array[he+4]=g[ke[1]],X.array[he+5]=g[ke[2]],X.array[he+6]=v[ke[0]],X.array[he+7]=v[ke[1]],X.array[he+8]=v[ke[2]],he+=9;else if("faceVertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=(j=X.value[Fe[a]])[0],g=j[1],v=j[2],X.array[he]=m[ke[0]],X.array[he+1]=m[ke[1]],X.array[he+2]=m[ke[2]],X.array[he+3]=g[ke[0]],X.array[he+4]=g[ke[1]],X.array[he+5]=g[ke[2]],X.array[he+6]=v[ke[0]],X.array[he+7]=v[ke[1]],X.array[he+8]=v[ke[2]],he+=9}else if(4===X.size)if(void 0===X.boundTo||"vertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)s=Ve[Fe[a]],m=X.value[s.a],g=X.value[s.b],v=X.value[s.c],X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=m.z,X.array[he+3]=m.w,X.array[he+4]=g.x,X.array[he+5]=g.y,X.array[he+6]=g.z,X.array[he+7]=g.w,X.array[he+8]=v.x,X.array[he+9]=v.y,X.array[he+10]=v.z,X.array[he+11]=v.w,he+=12;else if("faces"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=j=X.value[Fe[a]],g=j,v=j,X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=m.z,X.array[he+3]=m.w,X.array[he+4]=g.x,X.array[he+5]=g.y,X.array[he+6]=g.z,X.array[he+7]=g.w,X.array[he+8]=v.x,X.array[he+9]=v.y,X.array[he+10]=v.z,X.array[he+11]=v.w,he+=12;else if("faceVertices"===X.boundTo)for(a=0,n=Fe.length;a<n;a++)m=(j=X.value[Fe[a]])[0],g=j[1],v=j[2],X.array[he]=m.x,X.array[he+1]=m.y,X.array[he+2]=m.z,X.array[he+3]=m.w,X.array[he+4]=g.x,X.array[he+5]=g.y,X.array[he+6]=g.z,X.array[he+7]=g.w,X.array[he+8]=v.x,X.array[he+9]=v.y,X.array[he+10]=v.z,X.array[he+11]=v.w,he+=12;c.bindBuffer(c.ARRAY_BUFFER,X.buffer),c.bufferData(c.ARRAY_BUFFER,X.array,r)}i&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function be(e){G[e]||(c.enableVertexAttribArray(e),G[e]=!0)}function Me(){for(var e in G)G[e]&&(c.disableVertexAttribArray(e),G[e]=!1)}function Se(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function Ae(e,t){return t[0]-e[0]}function Ce(e,t,r){if(e.length)for(var i=0,o=e.length;i<o;i++)v=null,x=null,M=-1,L=-1,P=-1,w=-1,b=-1,R=-1,y=-1,K=!0,e[i].render(t,r,I,k),v=null,x=null,M=-1,L=-1,P=-1,w=-1,b=-1,R=-1,y=-1,K=!0}function Le(e,t,r,i,o,a,n,s){var h,l,c,u,p,f,E;t?(p=e.length-1,f=-1,E=-1):(p=0,f=e.length,E=1);for(var m=p;m!==f;m+=E)if((h=e[m]).render){if(l=h.object,c=h.buffer,s)u=s;else{if(!(u=h[r]))continue;n&&d.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),d.setDepthTest(u.depthTest),d.setDepthWrite(u.depthWrite),Qe(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}d.setMaterialFaces(u),c instanceof THREE.BufferGeometry?d.renderBufferDirect(i,o,a,u,c,l):d.renderBuffer(i,o,a,u,c,l)}}function Pe(e,t,r,i,o,a,n){for(var s,h,l,c=0,u=e.length;c<u;c++)if((h=(s=e[c]).object).visible){if(n)l=n;else{if(!(l=s[t]))continue;a&&d.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),d.setDepthTest(l.depthTest),d.setDepthWrite(l.depthWrite),Qe(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}d.renderImmediateObject(r,i,o,l,h)}}function De(e){var t=e.object.material;t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)}function Fe(e){var t,r,i,o=e.object,a=e.buffer;(i=o.material)instanceof THREE.MeshFaceMaterial?(r=a.materialIndex,(t=i.materials[r]).transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)):(t=i)&&(t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null))}function Ve(e,t){var r,i,o,a,n,s,h,l,u,p,f,E,m,g,v,T,y,R;if(void 0===e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",ce)),void 0===(i=e.geometry));else if(i instanceof THREE.BufferGeometry)!function(e){var t,r,i;for(t in e.attributes)i="index"===t?c.ELEMENT_ARRAY_BUFFER:c.ARRAY_BUFFER,void 0===(r=e.attributes[t]).numItems&&(r.numItems=r.array.length),r.buffer=c.createBuffer(),c.bindBuffer(i,r.buffer),c.bufferData(i,r.array,c.STATIC_DRAW)}(i);else if(e instanceof THREE.Mesh)for(r in o=e.material,void 0===i.geometryGroups&&function(e,t){var r,i,o,a,n,s,h={},l=e.morphTargets.length,c=e.morphNormals.length,u=t instanceof THREE.MeshFaceMaterial;for(e.geometryGroups={},r=0,i=e.faces.length;r<i;r++)o=e.faces[r],void 0===h[a=u?o.materialIndex:0]&&(h[a]={hash:a,counter:0}),s=h[a].hash+"_"+h[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],materialIndex:a,vertices:0,numMorphTargets:l,numMorphNormals:c}),n=3,e.geometryGroups[s].vertices+n>65535&&(h[a].counter+=1,s=h[a].hash+"_"+h[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],materialIndex:a,vertices:0,numMorphTargets:l,numMorphNormals:c})),e.geometryGroups[s].faces3.push(r),e.geometryGroups[s].vertices+=n;for(var p in e.geometryGroupsList=[],e.geometryGroups)e.geometryGroups[p].id=H++,e.geometryGroupsList.push(e.geometryGroups[p])}(i,o),i.geometryGroups)(a=i.geometryGroups[r]).__webglVertexBuffer||(le(a),ye(a,e),i.verticesNeedUpdate=!0,i.morphTargetsNeedUpdate=!0,i.elementsNeedUpdate=!0,i.uvsNeedUpdate=!0,i.normalsNeedUpdate=!0,i.tangentsNeedUpdate=!0,i.colorsNeedUpdate=!0);else e instanceof THREE.Ribbon?i.__webglVertexBuffer||((T=i).__webglVertexBuffer=c.createBuffer(),T.__webglColorBuffer=c.createBuffer(),T.__webglNormalBuffer=c.createBuffer(),d.info.memory.geometries++,g=e,v=(m=i).vertices.length,m.__vertexArray=new Float32Array(3*v),m.__colorArray=new Float32Array(3*v),m.__normalArray=new Float32Array(3*v),m.__webglVertexCount=v,Te(m,g),i.verticesNeedUpdate=!0,i.colorsNeedUpdate=!0,i.normalsNeedUpdate=!0):e instanceof THREE.Line?i.__webglVertexBuffer||((E=i).__webglVertexBuffer=c.createBuffer(),E.__webglColorBuffer=c.createBuffer(),E.__webglLineDistanceBuffer=c.createBuffer(),d.info.memory.geometries++,p=e,f=(u=i).vertices.length,u.__vertexArray=new Float32Array(3*f),u.__colorArray=new Float32Array(3*f),u.__lineDistanceArray=new Float32Array(1*f),u.__webglLineCount=f,Te(u,p),i.verticesNeedUpdate=!0,i.colorsNeedUpdate=!0,i.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&(i.__webglVertexBuffer||((l=i).__webglVertexBuffer=c.createBuffer(),l.__webglColorBuffer=c.createBuffer(),d.info.memory.geometries++,s=e,h=(n=i).vertices.length,n.__vertexArray=new Float32Array(3*h),n.__colorArray=new Float32Array(3*h),n.__sortArray=[],n.__webglParticleCount=h,Te(n,s),i.verticesNeedUpdate=!0,i.colorsNeedUpdate=!0));if(void 0===e.__webglActive){if(e instanceof THREE.Mesh){if((i=e.geometry)instanceof THREE.BufferGeometry)Ue(t.__webglObjects,i,e);else if(i instanceof THREE.Geometry)for(r in i.geometryGroups)a=i.geometryGroups[r],Ue(t.__webglObjects,a,e)}else e instanceof THREE.Ribbon||e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(i=e.geometry,Ue(t.__webglObjects,i,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?(y=t.__webglObjectsImmediate,R=e,y.push({id:null,object:R,opaque:null,transparent:null,z:0})):e instanceof THREE.Sprite?t.__webglSprites.push(e):e instanceof THREE.LensFlare&&t.__webglFlares.push(e);e.__webglActive=!0}}function Ue(e,t,r){e.push({id:null,buffer:t,object:r,opaque:null,transparent:null,z:0})}function ze(e){var t,r,i,o=e.geometry;if(o instanceof THREE.BufferGeometry)!function(e,t,r){var i,o,a=e.attributes;for(i in a)(o=a[i]).needsUpdate&&("index"===i?(c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,o.buffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,o.array,t)):(c.bindBuffer(c.ARRAY_BUFFER,o.buffer),c.bufferData(c.ARRAY_BUFFER,o.array,t)),o.needsUpdate=!1),r&&!o.dynamic&&(o.array=null)}(o,c.DYNAMIC_DRAW,!o.dynamic);else if(e instanceof THREE.Mesh){for(var a=0,n=o.geometryGroupsList.length;a<n;a++)i=Re(e,t=o.geometryGroupsList[a]),o.buffersNeedUpdate&&ye(t,e),r=i.attributes&&Be(i),(o.verticesNeedUpdate||o.morphTargetsNeedUpdate||o.elementsNeedUpdate||o.uvsNeedUpdate||o.normalsNeedUpdate||o.colorsNeedUpdate||o.tangentsNeedUpdate||r)&&we(t,e,c.DYNAMIC_DRAW,!o.dynamic,i);o.verticesNeedUpdate=!1,o.morphTargetsNeedUpdate=!1,o.elementsNeedUpdate=!1,o.uvsNeedUpdate=!1,o.normalsNeedUpdate=!1,o.colorsNeedUpdate=!1,o.tangentsNeedUpdate=!1,o.buffersNeedUpdate=!1,i.attributes&&Ne(i)}else e instanceof THREE.Ribbon?(r=(i=Re(e,o)).attributes&&Be(i),(o.verticesNeedUpdate||o.colorsNeedUpdate||o.normalsNeedUpdate||r)&&function(e,t){var r,i,o,a,n,s,h,l,u,p,f,E,d,m=e.vertices,g=e.colors,v=e.normals,T=m.length,y=g.length,R=v.length,x=e.__vertexArray,H=e.__colorArray,_=e.__normalArray,w=e.verticesNeedUpdate,b=e.colorsNeedUpdate,M=e.normalsNeedUpdate,S=e.__webglCustomAttributesList;if(w){for(r=0;r<T;r++)a=m[r],x[n=3*r]=a.x,x[n+1]=a.y,x[n+2]=a.z;c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,x,t)}if(b){for(i=0;i<y;i++)s=g[i],H[n=3*i]=s.r,H[n+1]=s.g,H[n+2]=s.b;c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,H,t)}if(M){for(o=0;o<R;o++)h=v[o],_[n=3*o]=h.x,_[n+1]=h.y,_[n+2]=h.z;c.bindBuffer(c.ARRAY_BUFFER,e.__webglNormalBuffer),c.bufferData(c.ARRAY_BUFFER,_,t)}if(S)for(l=0,u=S.length;l<u;l++)if((E=S[l]).needsUpdate&&(void 0===E.boundTo||"vertices"===E.boundTo)){if(n=0,f=E.value.length,1===E.size)for(p=0;p<f;p++)E.array[p]=E.value[p];else if(2===E.size)for(p=0;p<f;p++)d=E.value[p],E.array[n]=d.x,E.array[n+1]=d.y,n+=2;else if(3===E.size)if("c"===E.type)for(p=0;p<f;p++)d=E.value[p],E.array[n]=d.r,E.array[n+1]=d.g,E.array[n+2]=d.b,n+=3;else for(p=0;p<f;p++)d=E.value[p],E.array[n]=d.x,E.array[n+1]=d.y,E.array[n+2]=d.z,n+=3;else if(4===E.size)for(p=0;p<f;p++)d=E.value[p],E.array[n]=d.x,E.array[n+1]=d.y,E.array[n+2]=d.z,E.array[n+3]=d.w,n+=4;c.bindBuffer(c.ARRAY_BUFFER,E.buffer),c.bufferData(c.ARRAY_BUFFER,E.array,t)}}(o,c.DYNAMIC_DRAW),o.verticesNeedUpdate=!1,o.colorsNeedUpdate=!1,o.normalsNeedUpdate=!1,i.attributes&&Ne(i)):e instanceof THREE.Line?(r=(i=Re(e,o)).attributes&&Be(i),(o.verticesNeedUpdate||o.colorsNeedUpdate||o.lineDistancesNeedUpdate||r)&&function(e,t){var r,i,o,a,n,s,h,l,u,p,f,E,d=e.vertices,m=e.colors,g=e.lineDistances,v=d.length,T=m.length,y=g.length,R=e.__vertexArray,x=e.__colorArray,H=e.__lineDistanceArray,_=e.verticesNeedUpdate,w=e.colorsNeedUpdate,b=e.lineDistancesNeedUpdate,M=e.__webglCustomAttributesList;if(_){for(r=0;r<v;r++)a=d[r],R[n=3*r]=a.x,R[n+1]=a.y,R[n+2]=a.z;c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,R,t)}if(w){for(i=0;i<T;i++)s=m[i],x[n=3*i]=s.r,x[n+1]=s.g,x[n+2]=s.b;c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,x,t)}if(b){for(o=0;o<y;o++)H[o]=g[o];c.bindBuffer(c.ARRAY_BUFFER,e.__webglLineDistanceBuffer),c.bufferData(c.ARRAY_BUFFER,H,t)}if(M)for(h=0,l=M.length;h<l;h++)if((E=M[h]).needsUpdate&&(void 0===E.boundTo||"vertices"===E.boundTo)){if(n=0,p=E.value.length,1===E.size)for(u=0;u<p;u++)E.array[u]=E.value[u];else if(2===E.size)for(u=0;u<p;u++)f=E.value[u],E.array[n]=f.x,E.array[n+1]=f.y,n+=2;else if(3===E.size)if("c"===E.type)for(u=0;u<p;u++)f=E.value[u],E.array[n]=f.r,E.array[n+1]=f.g,E.array[n+2]=f.b,n+=3;else for(u=0;u<p;u++)f=E.value[u],E.array[n]=f.x,E.array[n+1]=f.y,E.array[n+2]=f.z,n+=3;else if(4===E.size)for(u=0;u<p;u++)f=E.value[u],E.array[n]=f.x,E.array[n+1]=f.y,E.array[n+2]=f.z,E.array[n+3]=f.w,n+=4;c.bindBuffer(c.ARRAY_BUFFER,E.buffer),c.bufferData(c.ARRAY_BUFFER,E.array,t)}}(o,c.DYNAMIC_DRAW),o.verticesNeedUpdate=!1,o.colorsNeedUpdate=!1,o.lineDistancesNeedUpdate=!1,i.attributes&&Ne(i)):e instanceof THREE.ParticleSystem&&(r=(i=Re(e,o)).attributes&&Be(i),(o.verticesNeedUpdate||o.colorsNeedUpdate||e.sortParticles||r)&&function(e,t,r){var i,o,a,n,s,h,l,u,p,f,E,d,m=e.vertices,g=m.length,v=e.colors,T=v.length,y=e.__vertexArray,R=e.__colorArray,x=e.__sortArray,H=e.verticesNeedUpdate,_=(e.elementsNeedUpdate,e.colorsNeedUpdate),w=e.__webglCustomAttributesList;if(r.sortParticles){for(X.copy(j),X.multiply(r.matrixWorld),i=0;i<g;i++)a=m[i],Y.copy(a),Y.applyProjection(X),x[i]=[Y.z,i];for(x.sort(Ae),i=0;i<g;i++)a=m[x[i][1]],y[n=3*i]=a.x,y[n+1]=a.y,y[n+2]=a.z;for(o=0;o<T;o++)n=3*o,h=v[x[o][1]],R[n]=h.r,R[n+1]=h.g,R[n+2]=h.b;if(w)for(l=0,u=w.length;l<u;l++)if(void 0===(d=w[l]).boundTo||"vertices"===d.boundTo)if(n=0,f=d.value.length,1===d.size)for(p=0;p<f;p++)s=x[p][1],d.array[p]=d.value[s];else if(2===d.size)for(p=0;p<f;p++)s=x[p][1],E=d.value[s],d.array[n]=E.x,d.array[n+1]=E.y,n+=2;else if(3===d.size)if("c"===d.type)for(p=0;p<f;p++)s=x[p][1],E=d.value[s],d.array[n]=E.r,d.array[n+1]=E.g,d.array[n+2]=E.b,n+=3;else for(p=0;p<f;p++)s=x[p][1],E=d.value[s],d.array[n]=E.x,d.array[n+1]=E.y,d.array[n+2]=E.z,n+=3;else if(4===d.size)for(p=0;p<f;p++)s=x[p][1],E=d.value[s],d.array[n]=E.x,d.array[n+1]=E.y,d.array[n+2]=E.z,d.array[n+3]=E.w,n+=4}else{if(H)for(i=0;i<g;i++)a=m[i],y[n=3*i]=a.x,y[n+1]=a.y,y[n+2]=a.z;if(_)for(o=0;o<T;o++)h=v[o],R[n=3*o]=h.r,R[n+1]=h.g,R[n+2]=h.b;if(w)for(l=0,u=w.length;l<u;l++)if((d=w[l]).needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo))if(f=d.value.length,n=0,1===d.size)for(p=0;p<f;p++)d.array[p]=d.value[p];else if(2===d.size)for(p=0;p<f;p++)E=d.value[p],d.array[n]=E.x,d.array[n+1]=E.y,n+=2;else if(3===d.size)if("c"===d.type)for(p=0;p<f;p++)E=d.value[p],d.array[n]=E.r,d.array[n+1]=E.g,d.array[n+2]=E.b,n+=3;else for(p=0;p<f;p++)E=d.value[p],d.array[n]=E.x,d.array[n+1]=E.y,d.array[n+2]=E.z,n+=3;else if(4===d.size)for(p=0;p<f;p++)E=d.value[p],d.array[n]=E.x,d.array[n+1]=E.y,d.array[n+2]=E.z,d.array[n+3]=E.w,n+=4}if((H||r.sortParticles)&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,y,t)),(_||r.sortParticles)&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,R,t)),w)for(l=0,u=w.length;l<u;l++)((d=w[l]).needsUpdate||r.sortParticles)&&(c.bindBuffer(c.ARRAY_BUFFER,d.buffer),c.bufferData(c.ARRAY_BUFFER,d.array,t))}(o,c.DYNAMIC_DRAW,e),o.verticesNeedUpdate=!1,o.colorsNeedUpdate=!1,i.attributes&&Ne(i))}function Be(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function Ne(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function Oe(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Ribbon||e instanceof THREE.Line?Ie(t.__webglObjects,e):e instanceof THREE.Sprite?ke(t.__webglSprites,e):e instanceof THREE.LensFlare?ke(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&Ie(t.__webglObjectsImmediate,e),delete e.__webglActive}function Ie(e,t){for(var r=e.length-1;r>=0;r--)e[r].object===t&&e.splice(r,1)}function ke(e,t){for(var r=e.length-1;r>=0;r--)e[r]===t&&e.splice(r,1)}function Ge(e,r,i,o,a){_=0,o.needsUpdate&&(o.program&&ve(o),d.initMaterial(o,r,i,a),o.needsUpdate=!1),o.morphTargets&&(a.__webglMorphTargetInfluences||(a.__webglMorphTargetInfluences=new Float32Array(d.maxMorphTargets)));var n,s,h,l,u,p,f,E,m,g,T=!1,R=o.program,H=R.uniforms,w=o.uniforms;if(R!==v&&(c.useProgram(R),v=R,T=!0),o.id!==y&&(y=o.id,T=!0),(T||e!==x)&&(c.uniformMatrix4fv(H.projectionMatrix,!1,e.projectionMatrix.elements),e!==x&&(x=e)),o.skinning)if(re&&a.useVertexTexture){if(null!==H.boneTexture){var b=je();c.uniform1i(H.boneTexture,b),d.setTexture(a.boneTexture,b)}}else null!==H.boneGlobalMatrices&&c.uniformMatrix4fv(H.boneGlobalMatrices,!1,a.boneMatrices);return T&&(i&&o.fog&&(E=i,(f=w).fogColor.value=E.color,E instanceof THREE.Fog?(f.fogNear.value=E.near,f.fogFar.value=E.far):E instanceof THREE.FogExp2&&(f.fogDensity.value=E.density)),(o instanceof THREE.MeshPhongMaterial||o instanceof THREE.MeshLambertMaterial||o.lights)&&(K&&(!function(e,t){var r,i,o,a,n,s,h,l,c,u=0,p=0,f=0,E=Q,m=E.directional.colors,g=E.directional.positions,v=E.point.colors,T=E.point.positions,y=E.point.distances,R=E.spot.colors,x=E.spot.positions,H=E.spot.distances,_=E.spot.directions,w=E.spot.anglesCos,b=E.spot.exponents,M=E.hemi.skyColors,S=E.hemi.groundColors,A=E.hemi.positions,C=0,L=0,P=0,D=0,F=0,V=0,U=0,z=0,B=0,N=0,O=0,I=0;for(r=0,i=t.length;r<i;r++)if(!(o=t[r]).onlyShadow)if(a=o.color,h=o.intensity,c=o.distance,o instanceof THREE.AmbientLight){if(!o.visible)continue;d.gammaInput?(u+=a.r*a.r,p+=a.g*a.g,f+=a.b*a.b):(u+=a.r,p+=a.g,f+=a.b)}else if(o instanceof THREE.DirectionalLight){if(F+=1,!o.visible)continue;if(q.getPositionFromMatrix(o.matrixWorld),Y.getPositionFromMatrix(o.target.matrixWorld),q.sub(Y),q.normalize(),0===q.x&&0===q.y&&0===q.z)continue;g[B=3*C]=q.x,g[B+1]=q.y,g[B+2]=q.z,d.gammaInput?Ye(m,B,a,h*h):qe(m,B,a,h),C+=1}else if(o instanceof THREE.PointLight){if(V+=1,!o.visible)continue;N=3*L,d.gammaInput?Ye(v,N,a,h*h):qe(v,N,a,h),Y.getPositionFromMatrix(o.matrixWorld),T[N]=Y.x,T[N+1]=Y.y,T[N+2]=Y.z,y[L]=c,L+=1}else if(o instanceof THREE.SpotLight){if(U+=1,!o.visible)continue;O=3*P,d.gammaInput?Ye(R,O,a,h*h):qe(R,O,a,h),Y.getPositionFromMatrix(o.matrixWorld),x[O]=Y.x,x[O+1]=Y.y,x[O+2]=Y.z,H[P]=c,q.copy(Y),Y.getPositionFromMatrix(o.target.matrixWorld),q.sub(Y),q.normalize(),_[O]=q.x,_[O+1]=q.y,_[O+2]=q.z,w[P]=Math.cos(o.angle),b[P]=o.exponent,P+=1}else if(o instanceof THREE.HemisphereLight){if(z+=1,!o.visible)continue;if(q.getPositionFromMatrix(o.matrixWorld),q.normalize(),0===q.x&&0===q.y&&0===q.z)continue;A[I=3*D]=q.x,A[I+1]=q.y,A[I+2]=q.z,n=o.color,s=o.groundColor,d.gammaInput?(Ye(M,I,n,l=h*h),Ye(S,I,s,l)):(qe(M,I,n,h),qe(S,I,s,h)),D+=1}for(r=3*C,i=Math.max(m.length,3*F);r<i;r++)m[r]=0;for(r=3*L,i=Math.max(v.length,3*V);r<i;r++)v[r]=0;for(r=3*P,i=Math.max(R.length,3*U);r<i;r++)R[r]=0;for(r=3*D,i=Math.max(M.length,3*z);r<i;r++)M[r]=0;for(r=3*D,i=Math.max(S.length,3*z);r<i;r++)S[r]=0;E.directional.length=C,E.point.length=L,E.spot.length=P,E.hemi.length=D,E.ambient[0]=u,E.ambient[1]=p,E.ambient[2]=f}(0,r),K=!1),p=Q,(u=w).ambientLightColor.value=p.ambient,u.directionalLightColor.value=p.directional.colors,u.directionalLightDirection.value=p.directional.positions,u.pointLightColor.value=p.point.colors,u.pointLightPosition.value=p.point.positions,u.pointLightDistance.value=p.point.distances,u.spotLightColor.value=p.spot.colors,u.spotLightPosition.value=p.spot.positions,u.spotLightDistance.value=p.spot.distances,u.spotLightDirection.value=p.spot.directions,u.spotLightAngleCos.value=p.spot.anglesCos,u.spotLightExponent.value=p.spot.exponents,u.hemisphereLightSkyColor.value=p.hemi.skyColors,u.hemisphereLightGroundColor.value=p.hemi.groundColors,u.hemisphereLightDirection.value=p.hemi.positions),(o instanceof THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial||o instanceof THREE.MeshPhongMaterial)&&function(e,t){e.opacity.value=t.opacity,d.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color;e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale);t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var r;t.map?r=t.map:t.specularMap?r=t.specularMap:t.normalMap?r=t.normalMap:t.bumpMap&&(r=t.bumpMap);if(void 0!==r){var i=r.offset,o=r.repeat;e.offsetRepeat.value.set(i.x,i.y,o.x,o.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,d.gammaInput,e.reflectivity.value=t.reflectivity;e.refractionRatio.value=t.refractionRatio,e.combine.value=t.combine,e.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}(w,o),o instanceof THREE.LineBasicMaterial?We(w,o):o instanceof THREE.LineDashedMaterial?(We(w,o),l=o,(h=w).dashSize.value=l.dashSize,h.totalSize.value=l.dashSize+l.gapSize,h.scale.value=l.scale):o instanceof THREE.ParticleBasicMaterial?(s=o,(n=w).psColor.value=s.color,n.opacity.value=s.opacity,n.size.value=s.size,n.scale.value=t.height/2,n.map.value=s.map):o instanceof THREE.MeshPhongMaterial?function(e,t){e.shininess.value=t.shininess,d.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive),e.specular.value.copyGammaToLinear(t.specular)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive,e.specular.value=t.specular);t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}(w,o):o instanceof THREE.MeshLambertMaterial?function(e,t){d.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive);t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}(w,o):o instanceof THREE.MeshDepthMaterial?(w.mNear.value=e.near,w.mFar.value=e.far,w.opacity.value=o.opacity):o instanceof THREE.MeshNormalMaterial&&(w.opacity.value=o.opacity),a.receiveShadow&&!o._shadowPass&&function(e,t){if(e.shadowMatrix)for(var r=0,i=0,o=t.length;i<o;i++){var a=t[i];a.castShadow&&((a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight&&!a.shadowCascade)&&(e.shadowMap.value[r]=a.shadowMap,e.shadowMapSize.value[r]=a.shadowMapSize,e.shadowMatrix.value[r]=a.shadowMatrix,e.shadowDarkness.value[r]=a.shadowDarkness,e.shadowBias.value[r]=a.shadowBias,r++))}}(w,r),function(e,t){var r,i,o,a,n,s,h,l,u,p,f;for(u=0,p=t.length;u<p;u++)if(a=e.uniforms[t[u][1]])if(r=t[u][0],o=r.type,i=r.value,"i"===o)c.uniform1i(a,i);else if("f"===o)c.uniform1f(a,i);else if("v2"===o)c.uniform2f(a,i.x,i.y);else if("v3"===o)c.uniform3f(a,i.x,i.y,i.z);else if("v4"===o)c.uniform4f(a,i.x,i.y,i.z,i.w);else if("c"===o)c.uniform3f(a,i.r,i.g,i.b);else if("iv1"===o)c.uniform1iv(a,i);else if("iv"===o)c.uniform3iv(a,i);else if("fv1"===o)c.uniform1fv(a,i);else if("fv"===o)c.uniform3fv(a,i);else if("v2v"===o){for(void 0===r._array&&(r._array=new Float32Array(2*i.length)),h=0,l=i.length;h<l;h++)f=2*h,r._array[f]=i[h].x,r._array[f+1]=i[h].y;c.uniform2fv(a,r._array)}else if("v3v"===o){for(void 0===r._array&&(r._array=new Float32Array(3*i.length)),h=0,l=i.length;h<l;h++)f=3*h,r._array[f]=i[h].x,r._array[f+1]=i[h].y,r._array[f+2]=i[h].z;c.uniform3fv(a,r._array)}else if("v4v"===o){for(void 0===r._array&&(r._array=new Float32Array(4*i.length)),h=0,l=i.length;h<l;h++)f=4*h,r._array[f]=i[h].x,r._array[f+1]=i[h].y,r._array[f+2]=i[h].z,r._array[f+3]=i[h].w;c.uniform4fv(a,r._array)}else if("m4"===o)void 0===r._array&&(r._array=new Float32Array(16)),i.flattenToArray(r._array),c.uniformMatrix4fv(a,!1,r._array);else if("m4v"===o){for(void 0===r._array&&(r._array=new Float32Array(16*i.length)),h=0,l=i.length;h<l;h++)i[h].flattenToArrayOffset(r._array,16*h);c.uniformMatrix4fv(a,!1,r._array)}else if("t"===o){if(n=i,s=je(),c.uniform1i(a,s),!n)continue;n.image instanceof Array&&6===n.image.length?tt(n,s):n instanceof THREE.WebGLRenderTargetCube?rt(n,s):d.setTexture(n,s)}else if("tv"===o){for(void 0===r._array&&(r._array=[]),h=0,l=r.value.length;h<l;h++)r._array[h]=je();for(c.uniform1iv(a,r._array),h=0,l=r.value.length;h<l;h++)n=r.value[h],s=r._array[h],n&&d.setTexture(n,s)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+o)}(R,o.uniformsList),(o instanceof THREE.ShaderMaterial||o instanceof THREE.MeshPhongMaterial||o.envMap)&&null!==H.cameraPosition&&(Y.getPositionFromMatrix(e.matrixWorld),c.uniform3f(H.cameraPosition,Y.x,Y.y,Y.z)),(o instanceof THREE.MeshPhongMaterial||o instanceof THREE.MeshLambertMaterial||o instanceof THREE.ShaderMaterial||o.skinning)&&null!==H.viewMatrix&&c.uniformMatrix4fv(H.viewMatrix,!1,e.matrixWorldInverse.elements)),m=H,g=a,c.uniformMatrix4fv(m.modelViewMatrix,!1,g._modelViewMatrix.elements),m.normalMatrix&&c.uniformMatrix3fv(m.normalMatrix,!1,g._normalMatrix.elements),null!==H.modelMatrix&&c.uniformMatrix4fv(H.modelMatrix,!1,a.matrixWorld.elements),R}function We(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function je(){var e=_;return e>=Z&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Z),_+=1,e}function Xe(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function Ye(e,t,r,i){e[t]=r.r*r.r*i,e[t+1]=r.g*r.g*i,e[t+2]=r.b*r.b*i}function qe(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function Ke(e){e!==U&&(c.lineWidth(e),U=e)}function Qe(e,t,r){D!==e&&(e?c.enable(c.POLYGON_OFFSET_FILL):c.disable(c.POLYGON_OFFSET_FILL),D=e),!e||F===t&&V===r||(c.polygonOffset(t,r),F=t,V=r)}function Ze(e,t){var r;return"fragment"===e?r=c.createShader(c.FRAGMENT_SHADER):"vertex"===e&&(r=c.createShader(c.VERTEX_SHADER)),c.shaderSource(r,t),c.compileShader(r),c.getShaderParameter(r,c.COMPILE_STATUS)?r:(console.error(c.getShaderInfoLog(r)),console.error(function(e){for(var t=e.split("\n"),r=0,i=t.length;r<i;r++)t[r]=r+1+": "+t[r];return t.join("\n")}(t)),null)}function Je(e){return 0==(e&e-1)}function $e(e,t,r){r?(c.texParameteri(e,c.TEXTURE_WRAP_S,nt(t.wrapS)),c.texParameteri(e,c.TEXTURE_WRAP_T,nt(t.wrapT)),c.texParameteri(e,c.TEXTURE_MAG_FILTER,nt(t.magFilter)),c.texParameteri(e,c.TEXTURE_MIN_FILTER,nt(t.minFilter))):(c.texParameteri(e,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(e,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(e,c.TEXTURE_MAG_FILTER,at(t.magFilter)),c.texParameteri(e,c.TEXTURE_MIN_FILTER,at(t.minFilter))),f&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(c.texParameterf(e,f.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,ee)),t.__oldAnisotropy=t.anisotropy)}function et(e,t){if(e.width<=t&&e.height<=t)return e;var r=Math.max(e.width,e.height),i=Math.floor(e.width*t/r),o=Math.floor(e.height*t/r),a=document.createElement("canvas");return a.width=i,a.height=o,a.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,i,o),a}function tt(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.addEventListener("dispose",ue),e.image.__webglTextureCube=c.createTexture(),d.info.memory.textures++),c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof THREE.CompressedTexture,i=[],o=0;o<6;o++)d.autoScaleCubemaps&&!r?i[o]=et(e.image[o],$):i[o]=e.image[o];var a=i[0],n=Je(a.width)&&Je(a.height),s=nt(e.format),h=nt(e.type);$e(c.TEXTURE_CUBE_MAP,e,n);for(o=0;o<6;o++)if(r)for(var l,u=i[o].mipmaps,p=0,f=u.length;p<f;p++)l=u[p],c.compressedTexImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+o,p,s,l.width,l.height,0,l.data);else c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,s,s,h,i[o]);e.generateMipmaps&&n&&c.generateMipmap(c.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}function rt(e,t){c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_CUBE_MAP,e.__webglTexture)}function it(e,t,r){c.bindFramebuffer(c.FRAMEBUFFER,e),c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,r,t.__webglTexture,0)}function ot(e,t){c.bindRenderbuffer(c.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_COMPONENT16,t.width,t.height),c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_ATTACHMENT,c.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_STENCIL,t.width,t.height),c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_STENCIL_ATTACHMENT,c.RENDERBUFFER,e)):c.renderbufferStorage(c.RENDERBUFFER,c.RGBA4,t.width,t.height)}function at(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?c.NEAREST:c.LINEAR}function nt(e){if(e===THREE.RepeatWrapping)return c.REPEAT;if(e===THREE.ClampToEdgeWrapping)return c.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return c.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return c.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return c.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return c.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return c.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return c.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return c.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return c.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return c.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return c.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return c.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return c.BYTE;if(e===THREE.ShortType)return c.SHORT;if(e===THREE.UnsignedShortType)return c.UNSIGNED_SHORT;if(e===THREE.IntType)return c.INT;if(e===THREE.UnsignedIntType)return c.UNSIGNED_INT;if(e===THREE.FloatType)return c.FLOAT;if(e===THREE.AlphaFormat)return c.ALPHA;if(e===THREE.RGBFormat)return c.RGB;if(e===THREE.RGBAFormat)return c.RGBA;if(e===THREE.LuminanceFormat)return c.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return c.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return c.FUNC_ADD;if(e===THREE.SubtractEquation)return c.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return c.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return c.ZERO;if(e===THREE.OneFactor)return c.ONE;if(e===THREE.SrcColorFactor)return c.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return c.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return c.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return c.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return c.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return c.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return c.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return c.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return c.SRC_ALPHA_SATURATE;if(void 0!==E){if(e===THREE.RGB_S3TC_DXT1_Format)return E.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return E.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return E.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return E.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}this.renderBufferImmediate=function(e,t,r){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=c.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=c.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=c.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=c.createBuffer()),e.hasPositions&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglVertexBuffer),c.bufferData(c.ARRAY_BUFFER,e.positionArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(t.attributes.position),c.vertexAttribPointer(t.attributes.position,3,c.FLOAT,!1,0,0)),e.hasNormals){if(c.bindBuffer(c.ARRAY_BUFFER,e.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,o,a,n,s,h,l,u,p,f,E,d=3*e.count;for(E=0;E<d;E+=9)n=(f=e.normalArray)[E],h=f[E+1],u=f[E+2],s=f[E+3],l=f[E+4],p=f[E+5],i=(n+s+f[E+6])/3,o=(h+l+f[E+7])/3,a=(u+p+f[E+8])/3,f[E]=i,f[E+1]=o,f[E+2]=a,f[E+3]=i,f[E+4]=o,f[E+5]=a,f[E+6]=i,f[E+7]=o,f[E+8]=a}c.bufferData(c.ARRAY_BUFFER,e.normalArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(t.attributes.normal),c.vertexAttribPointer(t.attributes.normal,3,c.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglUvBuffer),c.bufferData(c.ARRAY_BUFFER,e.uvArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(t.attributes.uv),c.vertexAttribPointer(t.attributes.uv,2,c.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&(c.bindBuffer(c.ARRAY_BUFFER,e.__webglColorBuffer),c.bufferData(c.ARRAY_BUFFER,e.colorArray,c.DYNAMIC_DRAW),c.enableVertexAttribArray(t.attributes.color),c.vertexAttribPointer(t.attributes.color,3,c.FLOAT,!1,0,0)),c.drawArrays(c.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,o,a){if(!1!==i.visible){var n,s,h,l,u=Ge(e,t,r,i,a),p=u.attributes,f=o.attributes,E=!1,m=i.wireframe?1:0,g=16777215*o.id+2*u.id+m;if(g!==R&&(R=g,E=!0),E&&Me(),a instanceof THREE.Mesh){var v=f.index;if(v){var T=o.offsets;T.length>1&&(E=!0);for(var y=0,x=T.length;y<x;y++){var H=T[y].index;if(E){for(s in p)h=p[s],n=f[s],h>=0&&(n?(l=n.itemSize,c.bindBuffer(c.ARRAY_BUFFER,n.buffer),be(h),c.vertexAttribPointer(h,l,c.FLOAT,!1,0,H*l*4)):i.defaultAttributeValues&&(2===i.defaultAttributeValues[s].length?c.vertexAttrib2fv(h,i.defaultAttributeValues[s]):3===i.defaultAttributeValues[s].length&&c.vertexAttrib3fv(h,i.defaultAttributeValues[s])));c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,v.buffer)}c.drawElements(c.TRIANGLES,T[y].count,c.UNSIGNED_SHORT,2*T[y].start),d.info.render.calls++,d.info.render.vertices+=T[y].count,d.info.render.faces+=T[y].count/3}}else{if(E)for(s in p)"index"!==s&&(h=p[s],n=f[s],h>=0&&(n?(l=n.itemSize,c.bindBuffer(c.ARRAY_BUFFER,n.buffer),be(h),c.vertexAttribPointer(h,l,c.FLOAT,!1,0,0)):i.defaultAttributeValues&&i.defaultAttributeValues[s]&&(2===i.defaultAttributeValues[s].length?c.vertexAttrib2fv(h,i.defaultAttributeValues[s]):3===i.defaultAttributeValues[s].length&&c.vertexAttrib3fv(h,i.defaultAttributeValues[s]))));var _=o.attributes.position;c.drawArrays(c.TRIANGLES,0,_.numItems/3),d.info.render.calls++,d.info.render.vertices+=_.numItems/3,d.info.render.faces+=_.numItems/3/3}}else if(a instanceof THREE.ParticleSystem){if(E){for(s in p)h=p[s],n=f[s],h>=0&&(n?(l=n.itemSize,c.bindBuffer(c.ARRAY_BUFFER,n.buffer),be(h),c.vertexAttribPointer(h,l,c.FLOAT,!1,0,0)):i.defaultAttributeValues&&i.defaultAttributeValues[s]&&(2===i.defaultAttributeValues[s].length?c.vertexAttrib2fv(h,i.defaultAttributeValues[s]):3===i.defaultAttributeValues[s].length&&c.vertexAttrib3fv(h,i.defaultAttributeValues[s])));_=f.position;c.drawArrays(c.POINTS,0,_.numItems/3),d.info.render.calls++,d.info.render.points+=_.numItems/3}}else if(a instanceof THREE.Line&&E){for(s in p)h=p[s],n=f[s],h>=0&&(n?(l=n.itemSize,c.bindBuffer(c.ARRAY_BUFFER,n.buffer),be(h),c.vertexAttribPointer(h,l,c.FLOAT,!1,0,0)):i.defaultAttributeValues&&i.defaultAttributeValues[s]&&(2===i.defaultAttributeValues[s].length?c.vertexAttrib2fv(h,i.defaultAttributeValues[s]):3===i.defaultAttributeValues[s].length&&c.vertexAttrib3fv(h,i.defaultAttributeValues[s])));var w=a.type===THREE.LineStrip?c.LINE_STRIP:c.LINES;Ke(i.linewidth);_=f.position;c.drawArrays(w,0,_.numItems/3),d.info.render.calls++,d.info.render.points+=_.numItems}}},this.renderBuffer=function(e,t,r,i,o,a){if(!1!==i.visible){var n,s,h,l=Ge(e,t,r,i,a),u=l.attributes,p=!1,f=i.wireframe?1:0,E=16777215*o.id+2*l.id+f;if(E!==R&&(R=E,p=!0),p&&Me(),!i.morphTargets&&u.position>=0?p&&(c.bindBuffer(c.ARRAY_BUFFER,o.__webglVertexBuffer),be(u.position),c.vertexAttribPointer(u.position,3,c.FLOAT,!1,0,0)):a.morphTargetBase&&function(e,t,r){var i=e.program.attributes;-1!==r.morphTargetBase&&i.position>=0?(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[r.morphTargetBase]),be(i.position),c.vertexAttribPointer(i.position,3,c.FLOAT,!1,0,0)):i.position>=0&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglVertexBuffer),be(i.position),c.vertexAttribPointer(i.position,3,c.FLOAT,!1,0,0));if(r.morphTargetForcedOrder.length)for(var o=0,a=r.morphTargetForcedOrder,n=r.morphTargetInfluences;o<e.numSupportedMorphTargets&&o<a.length;)i["morphTarget"+o]>=0&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[a[o]]),be(i["morphTarget"+o]),c.vertexAttribPointer(i["morphTarget"+o],3,c.FLOAT,!1,0,0)),i["morphNormal"+o]>=0&&e.morphNormals&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[a[o]]),be(i["morphNormal"+o]),c.vertexAttribPointer(i["morphNormal"+o],3,c.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[o]=n[a[o]],o++;else{var s,h,l=[],n=r.morphTargetInfluences,u=n.length;for(h=0;h<u;h++)(s=n[h])>0&&l.push([s,h]);l.length>e.numSupportedMorphTargets?(l.sort(Ae),l.length=e.numSupportedMorphTargets):l.length>e.numSupportedMorphNormals?l.sort(Ae):0===l.length&&l.push([0,0]);for(var p,o=0;o<e.numSupportedMorphTargets;)l[o]?(p=l[o][1],i["morphTarget"+o]>=0&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[p]),be(i["morphTarget"+o]),c.vertexAttribPointer(i["morphTarget"+o],3,c.FLOAT,!1,0,0)),i["morphNormal"+o]>=0&&e.morphNormals&&(c.bindBuffer(c.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[p]),be(i["morphNormal"+o]),c.vertexAttribPointer(i["morphNormal"+o],3,c.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[o]=n[p]):r.__webglMorphTargetInfluences[o]=0,o++}null!==e.program.uniforms.morphTargetInfluences&&c.uniform1fv(e.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}(i,o,a),p){if(o.__webglCustomAttributesList)for(s=0,h=o.__webglCustomAttributesList.length;s<h;s++)u[(n=o.__webglCustomAttributesList[s]).buffer.belongsToAttribute]>=0&&(c.bindBuffer(c.ARRAY_BUFFER,n.buffer),be(u[n.buffer.belongsToAttribute]),c.vertexAttribPointer(u[n.buffer.belongsToAttribute],n.size,c.FLOAT,!1,0,0));u.color>=0&&(a.geometry.colors.length>0||a.geometry.faces.length>0?(c.bindBuffer(c.ARRAY_BUFFER,o.__webglColorBuffer),be(u.color),c.vertexAttribPointer(u.color,3,c.FLOAT,!1,0,0)):i.defaultAttributeValues&&c.vertexAttrib3fv(u.color,i.defaultAttributeValues.color)),u.normal>=0&&(c.bindBuffer(c.ARRAY_BUFFER,o.__webglNormalBuffer),be(u.normal),c.vertexAttribPointer(u.normal,3,c.FLOAT,!1,0,0)),u.tangent>=0&&(c.bindBuffer(c.ARRAY_BUFFER,o.__webglTangentBuffer),be(u.tangent),c.vertexAttribPointer(u.tangent,4,c.FLOAT,!1,0,0)),u.uv>=0&&(a.geometry.faceVertexUvs[0]?(c.bindBuffer(c.ARRAY_BUFFER,o.__webglUVBuffer),be(u.uv),c.vertexAttribPointer(u.uv,2,c.FLOAT,!1,0,0)):i.defaultAttributeValues&&c.vertexAttrib2fv(u.uv,i.defaultAttributeValues.uv)),u.uv2>=0&&(a.geometry.faceVertexUvs[1]?(c.bindBuffer(c.ARRAY_BUFFER,o.__webglUV2Buffer),be(u.uv2),c.vertexAttribPointer(u.uv2,2,c.FLOAT,!1,0,0)):i.defaultAttributeValues&&c.vertexAttrib2fv(u.uv2,i.defaultAttributeValues.uv2)),i.skinning&&u.skinIndex>=0&&u.skinWeight>=0&&(c.bindBuffer(c.ARRAY_BUFFER,o.__webglSkinIndicesBuffer),be(u.skinIndex),c.vertexAttribPointer(u.skinIndex,4,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,o.__webglSkinWeightsBuffer),be(u.skinWeight),c.vertexAttribPointer(u.skinWeight,4,c.FLOAT,!1,0,0)),u.lineDistance>=0&&(c.bindBuffer(c.ARRAY_BUFFER,o.__webglLineDistanceBuffer),be(u.lineDistance),c.vertexAttribPointer(u.lineDistance,1,c.FLOAT,!1,0,0))}if(a instanceof THREE.Mesh)i.wireframe?(Ke(i.wireframeLinewidth),p&&c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,o.__webglLineBuffer),c.drawElements(c.LINES,o.__webglLineCount,c.UNSIGNED_SHORT,0)):(p&&c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,o.__webglFaceBuffer),c.drawElements(c.TRIANGLES,o.__webglFaceCount,c.UNSIGNED_SHORT,0)),d.info.render.calls++,d.info.render.vertices+=o.__webglFaceCount,d.info.render.faces+=o.__webglFaceCount/3;else if(a instanceof THREE.Line){var m=a.type===THREE.LineStrip?c.LINE_STRIP:c.LINES;Ke(i.linewidth),c.drawArrays(m,0,o.__webglLineCount),d.info.render.calls++}else a instanceof THREE.ParticleSystem?(c.drawArrays(c.POINTS,0,o.__webglParticleCount),d.info.render.calls++,d.info.render.points+=o.__webglParticleCount):a instanceof THREE.Ribbon&&(c.drawArrays(c.TRIANGLE_STRIP,0,o.__webglVertexCount),d.info.render.calls++)}},this.render=function(e,t,r,i){if(t instanceof THREE.Camera!=!1){var o,a,n,s,h,l,u=e.__lights,p=e.fog;for(y=-1,K=!0,!0===e.autoUpdate&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),j.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),W.setFromMatrix(j),this.autoUpdateObjects&&this.initWebGLObjects(e),Ce(this.renderPluginsPre,e,t),d.info.render.calls=0,d.info.render.vertices=0,d.info.render.faces=0,d.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),o=0,a=(h=e.__webglObjects).length;o<a;o++)s=(n=h[o]).object,n.id=o,n.render=!1,s.visible&&((s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!W.intersectsObject(s)||(Xe(s,t),Fe(n),n.render=!0,!0===this.sortObjects&&(null!==s.renderDepth?n.z=s.renderDepth:(Y.getPositionFromMatrix(s.matrixWorld),Y.applyProjection(j),n.z=Y.z))));for(this.sortObjects&&h.sort(Se),o=0,a=(h=e.__webglObjectsImmediate).length;o<a;o++)(s=(n=h[o]).object).visible&&(Xe(s,t),De(n));if(e.overrideMaterial){var f=e.overrideMaterial;this.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),this.setDepthTest(f.depthTest),this.setDepthWrite(f.depthWrite),Qe(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits),Le(e.__webglObjects,!1,"",t,u,p,!0,f),Pe(e.__webglObjectsImmediate,"",t,u,p,!1,f)}else{f=null;this.setBlending(THREE.NoBlending),Le(e.__webglObjects,!0,"opaque",t,u,p,!1,f),Pe(e.__webglObjectsImmediate,"opaque",t,u,p,!1,f),Le(e.__webglObjects,!1,"transparent",t,u,p,!0,f),Pe(e.__webglObjectsImmediate,"transparent",t,u,p,!0,f)}Ce(this.renderPluginsPost,e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&((l=r)instanceof THREE.WebGLRenderTargetCube?(c.bindTexture(c.TEXTURE_CUBE_MAP,l.__webglTexture),c.generateMipmap(c.TEXTURE_CUBE_MAP),c.bindTexture(c.TEXTURE_CUBE_MAP,null)):(c.bindTexture(c.TEXTURE_2D,l.__webglTexture),c.generateMipmap(c.TEXTURE_2D),c.bindTexture(c.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.renderImmediateObject=function(e,t,r,i,o){var a=Ge(e,t,r,i,o);R=-1,d.setMaterialFaces(i),o.immediateRenderCallback?o.immediateRenderCallback(a,c,W):o.render(function(e){d.renderBufferImmediate(e,a,i)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)Ve(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)Oe(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,r=e.__webglObjects.length;t<r;t++){var i=e.__webglObjects[t].object;void 0===i.__webglInit&&(void 0!==i.__webglActive&&Oe(i,e),Ve(i,e)),ze(i)}},this.initMaterial=function(e,t,i,o){var a,n,s,h,l,u,p,f,E;e.addEventListener("dispose",fe),e instanceof THREE.MeshDepthMaterial?p="depth":e instanceof THREE.MeshNormalMaterial?p="normal":e instanceof THREE.MeshBasicMaterial?p="basic":e instanceof THREE.MeshLambertMaterial?p="lambert":e instanceof THREE.MeshPhongMaterial?p="phong":e instanceof THREE.LineBasicMaterial?p="basic":e instanceof THREE.LineDashedMaterial?p="dashed":e instanceof THREE.ParticleBasicMaterial&&(p="particle_basic"),p&&(f=e,E=THREE.ShaderLib[p],f.uniforms=THREE.UniformsUtils.clone(E.uniforms),f.vertexShader=E.vertexShader,f.fragmentShader=E.fragmentShader),h=function(e){for(var t=0,r=0,i=0,o=0,a=0,n=e.length;a<n;a++){var s=e[a];s.onlyShadow||(s instanceof THREE.DirectionalLight&&t++,s instanceof THREE.PointLight&&r++,s instanceof THREE.SpotLight&&i++,s instanceof THREE.HemisphereLight&&o++)}return{directional:t,point:r,spot:i,hemi:o}}(t),u=function(e){for(var t=0,r=0,i=e.length;r<i;r++){var o=e[r];o.castShadow&&(o instanceof THREE.SpotLight&&t++,o instanceof THREE.DirectionalLight&&!o.shadowCascade&&t++)}return t}(t),l=function(e){{if(re&&e&&e.useVertexTexture)return 1024;var t=c.getParameter(c.MAX_VERTEX_UNIFORM_VECTORS),r=Math.floor((t-20)/4),i=r;return void 0!==e&&e instanceof THREE.SkinnedMesh&&(i=Math.min(e.bones.length,i))<e.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)"),i}}(o),s={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:i,useFog:e.fog,fogExp:i instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:l,useVertexTexture:re&&o&&o.useVertexTexture,boneTextureWidth:o&&o.boneTextureWidth,boneTextureHeight:o&&o.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:h.directional,maxPointLights:h.point,maxSpotLights:h.spot,maxHemiLights:h.hemi,maxShadows:u,shadowMapEnabled:this.shadowMapEnabled&&o.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},e.program=function(e,t,i,o,a,n,s,h){var l,u,p,f,E,v=[];e?v.push(e):(v.push(t),v.push(i));for(p in n)v.push(p),v.push(n[p]);for(l in s)v.push(l),v.push(s[l]);for(E=v.join(),l=0,u=m.length;l<u;l++){var T=m[l];if(T.code===E)return T.usedTimes++,T.program}var y="SHADOWMAP_TYPE_BASIC";s.shadowMapType===THREE.PCFShadowMap?y="SHADOWMAP_TYPE_PCF":s.shadowMapType===THREE.PCFSoftShadowMap&&(y="SHADOWMAP_TYPE_PCF_SOFT");var R=function(e){var t,r,i=[];for(var o in e)!1!==(t=e[o])&&(r="#define "+o+" "+t,i.push(r));return i.join("\n")}(n);f=c.createProgram();var x,H,_,w,b=["precision "+r+" float;","precision "+r+" int;",R,te?"#define VERTEX_TEXTURES":"",d.gammaInput?"#define GAMMA_INPUT":"",d.gammaOutput?"#define GAMMA_OUTPUT":"",d.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,"#define MAX_BONES "+s.maxBones,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.vertexColors?"#define USE_COLOR":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.boneTextureWidth?"#define N_BONE_PIXEL_X "+s.boneTextureWidth.toFixed(1):"",s.boneTextureHeight?"#define N_BONE_PIXEL_Y "+s.boneTextureHeight.toFixed(1):"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals?"#define USE_MORPHNORMALS":"",s.perPixel?"#define PHONG_PER_PIXEL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+y:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),M=["precision "+r+" float;","precision "+r+" int;",s.bumpMap||s.normalMap?"#extension GL_OES_standard_derivatives : enable":"",R,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"",d.gammaInput?"#define GAMMA_INPUT":"",d.gammaOutput?"#define GAMMA_OUTPUT":"",d.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.vertexColors?"#define USE_COLOR":"",s.metal?"#define METAL":"",s.perPixel?"#define PHONG_PER_PIXEL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+y:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),S=Ze("vertex",b+i),A=Ze("fragment",M+t);c.attachShader(f,S),c.attachShader(f,A),h&&c.bindAttribLocation(f,0,h);c.linkProgram(f),c.getProgramParameter(f,c.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+c.getProgramParameter(f,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]"),console.error("Program Info Log: "+c.getProgramInfoLog(f)));c.deleteShader(A),c.deleteShader(S),f.uniforms={},f.attributes={},x=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],s.useVertexTexture?x.push("boneTexture"):x.push("boneGlobalMatrices");for(H in o)x.push(H);for(function(e,t){var r,i,o;for(r=0,i=t.length;r<i;r++)o=t[r],e.uniforms[o]=c.getUniformLocation(e,o)}(f,x),x=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],w=0;w<s.maxMorphTargets;w++)x.push("morphTarget"+w);for(w=0;w<s.maxMorphNormals;w++)x.push("morphNormal"+w);for(_ in a)x.push(_);return function(e,t){var r,i,o;for(r=0,i=t.length;r<i;r++)o=t[r],e.attributes[o]=c.getAttribLocation(e,o)}(f,x),f.id=g++,m.push({program:f,code:E,usedTimes:1}),d.info.memory.programs=m.length,f}(p,e.fragmentShader,e.vertexShader,e.uniforms,e.attributes,e.defines,s,e.index0AttributeName);var v=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;var T="morphTarget";for(n=0;n<this.maxMorphTargets;n++)v[T+n]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;T="morphNormal";for(n=0;n<this.maxMorphNormals;n++)v[T+n]>=0&&e.numSupportedMorphNormals++}for(a in e.uniformsList=[],e.uniforms)e.uniformsList.push([e.uniforms[a],a])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?c.disable(c.CULL_FACE):(t===THREE.FrontFaceDirectionCW?c.frontFace(c.CW):c.frontFace(c.CCW),e===THREE.CullFaceBack?c.cullFace(c.BACK):e===THREE.CullFaceFront?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK),c.enable(c.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,r=e.side===THREE.BackSide;w!==t&&(t?c.disable(c.CULL_FACE):c.enable(c.CULL_FACE),w=t),b!==r&&(r?c.frontFace(c.CW):c.frontFace(c.CCW),b=r)},this.setDepthTest=function(e){L!==e&&(e?c.enable(c.DEPTH_TEST):c.disable(c.DEPTH_TEST),L=e)},this.setDepthWrite=function(e){P!==e&&(c.depthMask(e),P=e)},this.setBlending=function(e,t,r,i){e!==M&&(e===THREE.NoBlending?c.disable(c.BLEND):e===THREE.AdditiveBlending?(c.enable(c.BLEND),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.SRC_ALPHA,c.ONE)):e===THREE.SubtractiveBlending?(c.enable(c.BLEND),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.ZERO,c.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(c.enable(c.BLEND),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.ZERO,c.SRC_COLOR)):e===THREE.CustomBlending?c.enable(c.BLEND):(c.enable(c.BLEND),c.blendEquationSeparate(c.FUNC_ADD,c.FUNC_ADD),c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA)),M=e),e===THREE.CustomBlending?(t!==S&&(c.blendEquation(nt(t)),S=t),r===A&&i===C||(c.blendFunc(nt(r),nt(i)),A=r,C=i)):(S=null,A=null,C=null)},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",ue),e.__webglTexture=c.createTexture(),d.info.memory.textures++),c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_2D,e.__webglTexture),c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL,e.flipY),c.pixelStorei(c.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),c.pixelStorei(c.UNPACK_ALIGNMENT,e.unpackAlignment);var r=e.image,i=Je(r.width)&&Je(r.height),o=nt(e.format),a=nt(e.type);$e(c.TEXTURE_2D,e,i);var n,s=e.mipmaps;if(e instanceof THREE.DataTexture)if(s.length>0&&i){for(var h=0,l=s.length;h<l;h++)n=s[h],c.texImage2D(c.TEXTURE_2D,h,o,n.width,n.height,0,o,a,n.data);e.generateMipmaps=!1}else c.texImage2D(c.TEXTURE_2D,0,o,r.width,r.height,0,o,a,r.data);else if(e instanceof THREE.CompressedTexture)for(h=0,l=s.length;h<l;h++)n=s[h],c.compressedTexImage2D(c.TEXTURE_2D,h,o,n.width,n.height,0,n.data);else if(s.length>0&&i){for(h=0,l=s.length;h<l;h++)n=s[h],c.texImage2D(c.TEXTURE_2D,h,o,o,a,n);e.generateMipmaps=!1}else c.texImage2D(c.TEXTURE_2D,0,o,o,a,e.image);e.generateMipmaps&&i&&c.generateMipmap(c.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else c.activeTexture(c.TEXTURE0+t),c.bindTexture(c.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t,r,i,o,a,n=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",pe),e.__webglTexture=c.createTexture(),d.info.memory.textures++;var s=Je(e.width)&&Je(e.height),h=nt(e.format),l=nt(e.type);if(n){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],c.bindTexture(c.TEXTURE_CUBE_MAP,e.__webglTexture),$e(c.TEXTURE_CUBE_MAP,e,s);for(var u=0;u<6;u++)e.__webglFramebuffer[u]=c.createFramebuffer(),e.__webglRenderbuffer[u]=c.createRenderbuffer(),c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,h,e.width,e.height,0,h,l,null),it(e.__webglFramebuffer[u],e,c.TEXTURE_CUBE_MAP_POSITIVE_X+u),ot(e.__webglRenderbuffer[u],e);s&&c.generateMipmap(c.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=c.createFramebuffer(),e.shareDepthFrom?e.__webglRenderbuffer=e.shareDepthFrom.__webglRenderbuffer:e.__webglRenderbuffer=c.createRenderbuffer(),c.bindTexture(c.TEXTURE_2D,e.__webglTexture),$e(c.TEXTURE_2D,e,s),c.texImage2D(c.TEXTURE_2D,0,h,e.width,e.height,0,h,l,null),it(e.__webglFramebuffer,e,c.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_ATTACHMENT,c.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_STENCIL_ATTACHMENT,c.RENDERBUFFER,e.__webglRenderbuffer):ot(e.__webglRenderbuffer,e),s&&c.generateMipmap(c.TEXTURE_2D);n?c.bindTexture(c.TEXTURE_CUBE_MAP,null):c.bindTexture(c.TEXTURE_2D,null),c.bindRenderbuffer(c.RENDERBUFFER,null),c.bindFramebuffer(c.FRAMEBUFFER,null)}e?(t=n?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,r=e.width,i=e.height,o=0,a=0):(t=null,r=N,i=O,o=z,a=B),t!==T&&(c.bindFramebuffer(c.FRAMEBUFFER,t),c.viewport(o,a,r,i),T=t),I=r,k=i},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableParticle=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(e,t,r){var i,o,a=e.vertices.length,n=(e.faceVertexUvs[0].length,t instanceof THREE.Mesh?t.geometry:t),s=e.vertices,h=n.vertices,l=e.faces,c=n.faces,u=e.faceVertexUvs[0],p=n.faceVertexUvs[0];void 0===r&&(r=0),t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,o=(new THREE.Matrix3).getNormalMatrix(i));for(var f=0,E=h.length;f<E;f++){var d=h[f].clone();i&&d.applyMatrix4(i),s.push(d)}for(f=0,E=c.length;f<E;f++){var m,g,v,T=c[f],y=T.vertexNormals,R=T.vertexColors;(m=new THREE.Face3(T.a+a,T.b+a,T.c+a)).normal.copy(T.normal),o&&m.normal.applyMatrix3(o).normalize();for(var x=0,H=y.length;x<H;x++)g=y[x].clone(),o&&g.applyMatrix3(o).normalize(),m.vertexNormals.push(g);m.color.copy(T.color);for(x=0,H=R.length;x<H;x++)v=R[x],m.vertexColors.push(v.clone());m.materialIndex=T.materialIndex+r,m.centroid.copy(T.centroid),i&&m.centroid.applyMatrix4(i),l.push(m)}for(f=0,E=p.length;f<E;f++){var _=p[f],w=[];for(x=0,H=_.length;x<H;x++)w.push(new THREE.Vector2(_[x].x,_[x].y));u.push(w)}},randomPointInTriangle:function(){var e=new THREE.Vector3;return function(t,r,i){var o=new THREE.Vector3,a=THREE.Math.random16(),n=THREE.Math.random16();a+n>1&&(a=1-a,n=1-n);var s=1-a-n;return o.copy(t),o.multiplyScalar(a),e.copy(r),e.multiplyScalar(n),o.add(e),e.copy(i),e.multiplyScalar(s),o.add(e),o}}(),randomPointInFace:function(e,t,r){var i,o,a;return i=t.vertices[e.a],o=t.vertices[e.b],a=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(i,o,a)},randomPointsInGeometry:function(e,t){var r,i,o,a,n,s=e.faces,h=e.vertices,l=s.length,c=0,u=[];for(i=0;i<l;i++)o=h[(r=s[i]).a],a=h[r.b],n=h[r.c],r._area=THREE.GeometryUtils.triangleArea(o,a,n),c+=r._area,u[i]=c;function p(e){return function t(r,i){if(i<r)return r;var o=r+Math.floor((i-r)/2);return u[o]>e?t(r,o-1):u[o]<e?t(o+1,i):o}(0,u.length-1)}var f,E=[],d={};for(i=0;i<t;i++)f=p(THREE.Math.random16()*c),E[i]=THREE.GeometryUtils.randomPointInFace(s[f],e,!0),d[f]?d[f]+=1:d[f]=1;return E},triangleArea:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,o){return e.subVectors(i,r),t.subVectors(o,r),e.cross(t),.5*e.length()}}(),center:function(e){e.computeBoundingBox();var t=e.boundingBox,r=new THREE.Vector3;return r.addVectors(t.min,t.max),r.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(r.x,r.y,r.z)),e.computeBoundingBox(),r},triangulateQuads:function(e){var t,r,i,o,a=[],n=[];for(t=0,r=e.faceVertexUvs.length;t<r;t++)n[t]=[];for(t=0,r=e.faces.length;t<r;t++){var s=e.faces[t];for(a.push(s),i=0,o=e.faceVertexUvs.length;i<o;i++)n[i].push(e.faceVertexUvs[i][t])}e.faces=a,e.faceVertexUvs=n,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()}},THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,r,i){var o=new Image,a=new THREE.Texture(o,t),n=new THREE.ImageLoader;return n.crossOrigin=this.crossOrigin,n.load(e,function(e){a.image=e,a.needsUpdate=!0,r&&r(a)}),a.sourceFile=e,a},loadCompressedTexture:function(e,t,r,i){var o=new THREE.CompressedTexture;o.mapping=t;var a=new XMLHttpRequest;return a.onload=function(){var e=a.response,t=THREE.ImageUtils.parseDDS(e,!0);o.format=t.format,o.mipmaps=t.mipmaps,o.image.width=t.width,o.image.height=t.height,o.generateMipmaps=!1,o.needsUpdate=!0,r&&r(o)},a.onerror=i,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),o},loadTextureCube:function(e,t,r,i){var o=[];o.loadCount=0;var a=new THREE.Texture;a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1;for(var n=0,s=e.length;n<s;++n){var h=new Image;o[n]=h,h.onload=function(){o.loadCount+=1,6===o.loadCount&&(a.needsUpdate=!0,r&&r(a))},h.onerror=i,h.crossOrigin=this.crossOrigin,h.src=e[n]}return a},loadCompressedTextureCube:function(e,t,r,i){var o=[];o.loadCount=0;var a=new THREE.CompressedTexture;a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1,a.generateMipmaps=!1;var n=function(e,t){return function(){var i=e.response,n=THREE.ImageUtils.parseDDS(i,!0);t.format=n.format,t.mipmaps=n.mipmaps,t.width=n.width,t.height=n.height,o.loadCount+=1,6===o.loadCount&&(a.format=n.format,a.needsUpdate=!0,r&&r(a))}};if(e instanceof Array)for(var s=0,h=e.length;s<h;++s){var l={};o[s]=l,(u=new XMLHttpRequest).onload=n(u,l),u.onerror=i;var c=e[s];u.open("GET",c,!0),u.responseType="arraybuffer",u.send(null)}else{var u;c=e;(u=new XMLHttpRequest).onload=function(){var e=u.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap){for(var i=t.mipmaps.length/t.mipmapCount,n=0;n<i;n++){o[n]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)o[n].mipmaps.push(t.mipmaps[n*t.mipmapCount+s]),o[n].format=t.format,o[n].width=t.width,o[n].height=t.height}a.format=t.format,a.needsUpdate=!0,r&&r(a)}},u.onerror=i,u.open("GET",c,!0),u.responseType="arraybuffer",u.send(null)}return a},parseDDS:function(e,t){var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var o,a=i("DXT1"),n=i("DXT3"),s=i("DXT5"),h=new Int32Array(e,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),r;if(4&!h[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),r;var l,c=h[21];switch(c){case a:o=8,r.format=THREE.RGB_S3TC_DXT1_Format;break;case n:o=16,r.format=THREE.RGBA_S3TC_DXT3_Format;break;case s:o=16,r.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",(l=c,String.fromCharCode(255&l,l>>8&255,l>>16&255,l>>24&255))),r}r.mipmapCount=1,131072&h[2]&&!1!==t&&(r.mipmapCount=Math.max(1,h[7])),r.isCubemap=!!(512&h[28]),r.width=h[4],r.height=h[3];for(var u=h[1]+4,p=r.width,f=r.height,E=r.isCubemap?6:1,d=0;d<E;d++){for(var m=0;m<r.mipmapCount;m++){var g=Math.max(4,p)/4*Math.max(4,f)/4*o,v={data:new Uint8Array(e,u,g),width:p,height:f};r.mipmaps.push(v),u+=g,p=Math.max(.5*p,1),f=Math.max(.5*f,1)}p=r.width,f=r.height}return r},getNormalMap:function(e,t){var r=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]};t|=1;var i=e.width,o=e.height,a=document.createElement("canvas");a.width=i,a.height=o;var n=a.getContext("2d");n.drawImage(e,0,0);for(var s,h,l,c,u=n.getImageData(0,0,i,o).data,p=n.createImageData(i,o),f=p.data,E=0;E<i;E++)for(var d=0;d<o;d++){var m=d-1<0?0:d-1,g=d+1>o-1?o-1:d+1,v=E-1<0?0:E-1,T=E+1>i-1?i-1:E+1,y=[],R=[0,0,u[4*(d*i+E)]/255*t];y.push([-1,0,u[4*(d*i+v)]/255*t]),y.push([-1,-1,u[4*(m*i+v)]/255*t]),y.push([0,-1,u[4*(m*i+E)]/255*t]),y.push([1,-1,u[4*(m*i+T)]/255*t]),y.push([1,0,u[4*(d*i+T)]/255*t]),y.push([1,1,u[4*(g*i+T)]/255*t]),y.push([0,1,u[4*(g*i+E)]/255*t]),y.push([-1,1,u[4*(g*i+v)]/255*t]);for(var x=[],H=y.length,_=0;_<H;_++){var w=y[_],b=y[(_+1)%H];w=r(w,R),b=r(b,R),x.push((c=b,s=[(l=w)[1]*c[2]-l[2]*c[1],l[2]*c[0]-l[0]*c[2],l[0]*c[1]-l[1]*c[0]],void 0,h=Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]),[s[0]/h,s[1]/h,s[2]/h]))}var M=[0,0,0];for(_=0;_<x.length;_++)M[0]+=x[_][0],M[1]+=x[_][1],M[2]+=x[_][2];M[0]/=x.length,M[1]/=x.length,M[2]/=x.length;var S=4*(d*i+E);f[S]=(M[0]+1)/2*255|0,f[S+1]=(M[1]+1)/2*255|0,f[S+2]=255*M[2]|0,f[S+3]=255}return n.putImageData(p,0,0),a},generateDataTexture:function(e,t,r){for(var i=e*t,o=new Uint8Array(3*i),a=Math.floor(255*r.r),n=Math.floor(255*r.g),s=Math.floor(255*r.b),h=0;h<i;h++)o[3*h]=a,o[3*h+1]=n,o[3*h+2]=s;var l=new THREE.DataTexture(o,e,t,THREE.RGBFormat);return l.needsUpdate=!0,l}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,o=t.length;i<o;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e;this.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return e},drawText:function(e){var t,r=this.getFace(),i=this.size/r.resolution,o=0,a=String(e).split(""),n=a.length,s=[];for(t=0;t<n;t++){var h=new THREE.Path,l=this.extractGlyphPoints(a[t],r,i,o,h);o+=l.offset,s.push(l.path)}return{paths:s,offset:o/2}},extractGlyphPoints:function(e,t,r,i,o){var a,n,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H=[],_=t.glyphs[e]||t.glyphs["?"];if(_){if(_.o)for(l=(h=_._cachedOutline||(_._cachedOutline=_.o.split(" "))).length,c=r,u=r,a=0;a<l;)switch(h[a++]){case"m":p=h[a++]*c+i,f=h[a++]*u,o.moveTo(p,f);break;case"l":p=h[a++]*c+i,f=h[a++]*u,o.lineTo(p,f);break;case"q":if(E=h[a++]*c+i,d=h[a++]*u,v=h[a++]*c+i,T=h[a++]*u,o.quadraticCurveTo(v,T,E,d),x=H[H.length-1])for(m=x.x,g=x.y,n=1,s=this.divisions;n<=s;n++){var w=n/s;THREE.Shape.Utils.b2(w,m,v,E),THREE.Shape.Utils.b2(w,g,T,d)}break;case"b":if(E=h[a++]*c+i,d=h[a++]*u,v=h[a++]*c+i,T=h[a++]*-u,y=h[a++]*c+i,R=h[a++]*-u,o.bezierCurveTo(E,d,v,T,y,R),x=H[H.length-1])for(m=x.x,g=x.y,n=1,s=this.divisions;n<=s;n++)w=n/s,THREE.Shape.Utils.b3(w,m,v,y,E),THREE.Shape.Utils.b3(w,g,T,R,d)}return{offset:_.ha*r,path:o}}}},THREE.FontUtils.generateShapes=function(e,t){var r=void 0!==(t=t||{}).size?t.size:100,i=void 0!==t.curveSegments?t.curveSegments:4,o=void 0!==t.font?t.font:"helvetiker",a=void 0!==t.weight?t.weight:"normal",n=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=o,THREE.FontUtils.weight=a,THREE.FontUtils.style=n;for(var s=THREE.FontUtils.drawText(e).paths,h=[],l=0,c=s.length;l<c;l++)Array.prototype.push.apply(h,s[l].toShapes());return h},function(e){var t=function(e){for(var t=e.length,r=0,i=t-1,o=0;o<t;i=o++)r+=e[i].x*e[o].y-e[o].x*e[i].y;return.5*r},r=function(e,t,r,i,o,a){var n,s,h,l,c,u,p,f,E,d,m,g,v,T,y;if(s=e[a[t]].x,h=e[a[t]].y,l=e[a[r]].x,c=e[a[r]].y,u=e[a[i]].x,1e-10>(l-s)*((p=e[a[i]].y)-h)-(c-h)*(u-s))return!1;for(d=u-l,m=p-c,g=s-u,v=h-p,T=l-s,y=c-h,n=0;n<o;n++)if(n!==t&&n!==r&&n!==i&&(f=e[a[n]].x,d*((E=e[a[n]].y)-c)-m*(f-l)>=-1e-10&&g*(E-p)-v*(f-u)>=-1e-10&&T*(E-h)-y*(f-s)>=-1e-10))return!1;return!0};e.Triangulate=function(e,i){var o=e.length;if(o<3)return null;var a,n,s,h=[],l=[],c=[];if(t(e)>0)for(n=0;n<o;n++)l[n]=n;else for(n=0;n<o;n++)l[n]=o-1-n;var u=o,p=2*u;for(n=u-1;u>2;){if(p--<=0)return console.log("Warning, unable to triangulate polygon!"),i?c:h;if(u<=(a=n)&&(a=0),u<=(n=a+1)&&(n=0),u<=(s=n+1)&&(s=0),r(e,a,n,s,u,l)){var f,E,d,m,g;for(f=l[a],E=l[n],d=l[s],h.push([e[f],e[E],e[d]]),c.push([l[a],l[n],l[s]]),m=n,g=n+1;g<u;m++,g++)l[m]=l[g];p=2*--u}}return i?c:h},e.Triangulate.area=t}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(e){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,r,i=[],o=this.getPoint(0),a=0;for(i.push(0),r=1;r<=e;r++)a+=(t=this.getPoint(r/e)).distanceTo(o),i.push(a),o=t;return this.cacheArcLengths=i,i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r,i=this.getLengths(),o=0,a=i.length;r=t||e*i[a-1];for(var n,s=0,h=a-1;s<=h;)if((n=i[o=Math.floor(s+(h-s)/2)]-r)<0)s=o+1;else{if(!(n>0)){h=o;break}h=o-1}if(i[o=h]==r)return o/(a-1);var l=i[o];return(o+(r-l)/(i[o+1]-l))/(a-1)},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4,r=e+1e-4;t<0&&(t=0),r>1&&(r=1);var i=this.getPoint(t);return this.getPoint(r).clone().sub(i).normalize()},THREE.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,o){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*o},tangentSpline:function(e,t,r,i,o){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,r,i,o){var a=.5*(r-e),n=.5*(i-t),s=o*o;return(2*t-2*r+a+n)*(o*s)+(-3*t+3*r-2*a-n)*s+a*o+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t,r=e*this.getLength(),i=this.getCurveLengths(),o=0;o<i.length;){if(i[o]>=r){var a=1-(i[o]-r)/(t=this.curves[o]).getLength();return t.getPointAt(a)}o++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],r=0,i=this.curves.length;for(e=0;e<i;e++)r+=this.curves[e].getLength(),t.push(r);return this.cacheLengths=t,t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,r,i,o,a,n,s,h,l,c=this.getPoints();e=t=Number.NEGATIVE_INFINITY,i=o=Number.POSITIVE_INFINITY;var u=c[0]instanceof THREE.Vector3;for(l=u?new THREE.Vector3:new THREE.Vector2,s=0,h=c.length;s<h;s++)(n=c[s]).x>e?e=n.x:n.x<i&&(i=n.x),n.y>t?t=n.y:n.y<o&&(o=n.y),u&&(n.z>r?r=n.z:n.z<a&&(a=n.z)),l.add(n);var p={minX:i,minY:o,maxX:e,maxY:t,centroid:l.divideScalar(h)};return u&&(p.maxZ=r,p.minZ=a),p},THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r,i,o=this.getPoints(e);for(t||(t=this.bends),r=0,i=t.length;r<i;r++)o=this.getWrapPoints(o,t[r]);return o},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r,i,o=this.getSpacedPoints(e);for(t||(t=this.bends),r=0,i=t.length;r<i;r++)o=this.getWrapPoints(o,t[r]);return o},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r,i,o,a,n,s,h=this.getBoundingBox();for(r=0,i=e.length;r<i;r++){a=(o=e[r]).x,n=o.y,s=a/h.maxX,s=t.getUtoTmapping(s,a);var l=t.getPoint(s),c=t.getNormalVector(s).multiplyScalar(n);o.x=l.x+c.x,o.y=l.y+c.y}return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,o=i[i.length-2],a=i[i.length-1],n=new THREE.LineCurve(new THREE.Vector2(o,a),new THREE.Vector2(e,t));this.curves.push(n),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var o=Array.prototype.slice.call(arguments),a=this.actions[this.actions.length-1].args,n=a[a.length-2],s=a[a.length-1],h=new THREE.QuadraticBezierCurve(new THREE.Vector2(n,s),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(h),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:o})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,o,a){var n=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(h,l),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(o,a));this.curves.push(c),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:n})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],o=r[r.length-1],a=[new THREE.Vector2(i,o)];Array.prototype.push.apply(a,e);var n=new THREE.SplineCurve(a);this.curves.push(n),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,o,a){var n=this.actions[this.actions.length-1].args,s=n[n.length-2],h=n[n.length-1];this.absarc(e+s,t+h,r,i,o,a)},THREE.Path.prototype.absarc=function(e,t,r,i,o,a){this.absellipse(e,t,r,r,i,o,a)},THREE.Path.prototype.ellipse=function(e,t,r,i,o,a,n){var s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1];this.absellipse(e+h,t+l,r,i,o,a,n)},THREE.Path.prototype.absellipse=function(e,t,r,i,o,a,n){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,r,i,o,a,n);this.curves.push(h);var l=h.getPoint(n?1:0);s.push(l.x),s.push(l.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var r=[],i=0;i<e;i++)r.push(this.getPoint(i/e));return r},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r,i,o,a,n,s,h,l,c,u,p,f,E,d,m,g,v,T,y=[];for(r=0,i=this.actions.length;r<i;r++)switch(a=(o=this.actions[r]).action,n=o.args,a){case THREE.PathActions.MOVE_TO:case THREE.PathActions.LINE_TO:y.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(s=n[2],h=n[3],u=n[0],p=n[1],y.length>0?(f=(d=y[y.length-1]).x,E=d.y):(f=(d=this.actions[r-1].args)[d.length-2],E=d[d.length-1]),m=1;m<=e;m++)g=m/e,v=THREE.Shape.Utils.b2(g,f,u,s),T=THREE.Shape.Utils.b2(g,E,p,h),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.BEZIER_CURVE_TO:for(s=n[4],h=n[5],u=n[0],p=n[1],l=n[2],c=n[3],y.length>0?(f=(d=y[y.length-1]).x,E=d.y):(f=(d=this.actions[r-1].args)[d.length-2],E=d[d.length-1]),m=1;m<=e;m++)g=m/e,v=THREE.Shape.Utils.b3(g,f,u,l,s),T=THREE.Shape.Utils.b3(g,E,p,c,h),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.CSPLINE_THRU:d=this.actions[r-1].args;var R=[new THREE.Vector2(d[d.length-2],d[d.length-1])],x=e*n[0].length;R=R.concat(n[0]);var H=new THREE.SplineCurve(R);for(m=1;m<=x;m++)y.push(H.getPointAt(m/x));break;case THREE.PathActions.ARC:var _=n[0],w=n[1],b=n[2],M=n[3],S=n[4],A=!!n[5],C=S-M,L=2*e;for(m=1;m<=L;m++)g=m/L,A||(g=1-g),P=M+g*C,v=_+b*Math.cos(P),T=w+b*Math.sin(P),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.ELLIPSE:_=n[0],w=n[1];var P,D=n[2],F=n[3];M=n[4],S=n[5],A=!!n[6],C=S-M,L=2*e;for(m=1;m<=L;m++)g=m/L,A||(g=1-g),P=M+g*C,v=_+D*Math.cos(P),T=w+F*Math.sin(P),y.push(new THREE.Vector2(v,T))}var V=y[y.length-1];return Math.abs(V.x-y[0].x)<1e-10&&Math.abs(V.y-y[0].y)<1e-10&&y.splice(y.length-1,1),t&&y.push(y[0]),y},THREE.Path.prototype.toShapes=function(e){var t,r,i,o,a,n=[],s=new THREE.Path;for(t=0,r=this.actions.length;t<r;t++)a=(i=this.actions[t]).args,(o=i.action)==THREE.PathActions.MOVE_TO&&0!=s.actions.length&&(n.push(s),s=new THREE.Path),s[o].apply(s,a);if(0!=s.actions.length&&n.push(s),0==n.length)return[];var h,l,c,u=[];if(1==n.length)return l=n[0],(c=new THREE.Shape).actions=l.actions,c.curves=l.curves,u.push(c),u;var p=!THREE.Shape.Utils.isClockWise(n[0].getPoints());if(p=e?!p:p)for(c=new THREE.Shape,t=0,r=n.length;t<r;t++)l=n[t],h=THREE.Shape.Utils.isClockWise(l.getPoints()),(h=e?!h:h)?(c.actions=l.actions,c.curves=l.curves,u.push(c),c=new THREE.Shape):c.holes.push(l);else{for(c=void 0,t=0,r=n.length;t<r;t++)l=n[t],h=THREE.Shape.Utils.isClockWise(l.getPoints()),(h=e?!h:h)?(c&&u.push(c),(c=new THREE.Shape).actions=l.actions,c.curves=l.curves):c.holes.push(l);u.push(c)}return u},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var r,i,o,a,n,s,h,l,c,u,p,f,E,d,m,g,v=e.concat(),T=v.concat(),y=[];for(n=0;n<t.length;n++){for(h=t[n],Array.prototype.push.apply(T,h),l=Number.POSITIVE_INFINITY,s=0;s<h.length;s++){p=h[s];var R=[];for(u=0;u<v.length;u++)f=v[u],c=p.distanceToSquared(f),R.push(c),c<l&&(l=c,o=s,a=u)}r=a-1>=0?a-1:v.length-1,i=o-1>=0?o-1:h.length-1;var x=[h[o],v[a],v[r]],H=THREE.FontUtils.Triangulate.area(x),_=[h[o],h[i],v[a]],w=THREE.FontUtils.Triangulate.area(_),b=a,M=o;o+=-1,(a+=1)<0&&(a+=v.length),a%=v.length,o<0&&(o+=h.length),o%=h.length,r=a-1>=0?a-1:v.length-1,i=o-1>=0?o-1:h.length-1,x=[h[o],v[a],v[r]];var S=THREE.FontUtils.Triangulate.area(x);_=[h[o],h[i],v[a]],H+w>S+THREE.FontUtils.Triangulate.area(_)&&(o=M,(a=b)<0&&(a+=v.length),a%=v.length,o<0&&(o+=h.length),o%=h.length,r=a-1>=0?a-1:v.length-1,i=o-1>=0?o-1:h.length-1),E=v.slice(0,a),d=v.slice(a),m=h.slice(o),g=h.slice(0,o);var A=[h[o],v[a],v[r]],C=[h[o],h[i],v[a]];y.push(A),y.push(C),v=E.concat(m).concat(g).concat(d)}return{shape:v,isolatedPts:y,allpoints:T}},triangulateShape:function(e,t){var r,i,o,a,n,s,h=THREE.Shape.Utils.removeHoles(e,t),l=h.shape,c=h.allpoints,u=h.isolatedPts,p=THREE.FontUtils.Triangulate(l,!1),f={};for(r=0,i=c.length;r<i;r++)void 0!==f[n=c[r].x+":"+c[r].y]&&console.log("Duplicate point",n),f[n]=r;for(r=0,i=p.length;r<i;r++)for(a=p[r],o=0;o<3;o++)void 0!==(s=f[n=a[o].x+":"+a[o].y])&&(a[o]=s);for(r=0,i=u.length;r<i;r++)for(a=u[r],o=0;o<3;o++)void 0!==(s=f[n=a[o].x+":"+a[o].y])&&(a[o]=s);return p.concat(u)},isClockWise:function(e){return THREE.FontUtils.Triangulate.area(e)<0},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,o){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,o)}},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,r)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,r)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t,r,i,o=new THREE.Vector2,a=[],n=this.points;return i=(t=(n.length-1)*e)-(r=Math.floor(t)),a[0]=0==r?r:r-1,a[1]=r,a[2]=r>n.length-2?n.length-1:r+1,a[3]=r>n.length-3?n.length-1:r+2,o.x=THREE.Curve.Utils.interpolate(n[a[0]].x,n[a[1]].x,n[a[2]].x,n[a[3]].x,i),o.y=THREE.Curve.Utils.interpolate(n[a[0]].y,n[a[1]].y,n[a[2]].y,n[a[3]].y,i),o},THREE.EllipseCurve=function(e,t,r,i,o,a,n){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=a,this.aClockwise=n},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;this.aClockwise||(e=1-e);var r=this.aStartAngle+e*t,i=this.aX+this.xRadius*Math.cos(r),o=this.aY+this.yRadius*Math.sin(r);return new THREE.Vector2(i,o)},THREE.ArcCurve=function(e,t,r,i,o,a){THREE.EllipseCurve.call(this,e,t,r,r,i,o,a)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t,r,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),i=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,r,i)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},function(e){var t,r,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),i=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,r,i)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r,i,o=new THREE.Vector3,a=[],n=this.points;i=(t=(n.length-1)*e)-(r=Math.floor(t)),a[0]=0==r?r:r-1,a[1]=r,a[2]=r>n.length-2?n.length-1:r+1,a[3]=r>n.length-3?n.length-1:r+2;var s=n[a[0]],h=n[a[1]],l=n[a[2]],c=n[a[3]];return o.x=THREE.Curve.Utils.interpolate(s.x,h.x,l.x,c.x,i),o.y=THREE.Curve.Utils.interpolate(s.y,h.y,l.y,c.y,i),o.z=THREE.Curve.Utils.interpolate(s.z,h.z,l.z,c.z,i),o}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r,i,o=new THREE.Vector3,a=[],n=this.points;return i=(t=(n.length-0)*e)-(r=Math.floor(t)),r+=r>0?0:(Math.floor(Math.abs(r)/n.length)+1)*n.length,a[0]=(r-1)%n.length,a[1]=r%n.length,a[2]=(r+1)%n.length,a[3]=(r+2)%n.length,o.x=THREE.Curve.Utils.interpolate(n[a[0]].x,n[a[1]].x,n[a[2]].x,n[a[3]].x,i),o.y=THREE.Curve.Utils.interpolate(n[a[0]].y,n[a[1]].y,n[a[2]].y,n[a[3]].y,i),o.z=THREE.Curve.Utils.interpolate(n[a[0]].z,n[a[1]].z,n[a[2]].z,n[a[3]].z,i),o}),THREE.AnimationHandler=function(){var e=[],t={},r={update:function(t){for(var r=0;r<e.length;r++)e[r].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){var r=e.indexOf(t);-1!==r&&e.splice(r,1)},add:function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,o(e)},get:function(e){if("string"==typeof e)return t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null)},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var r=0;r<e.bones.length;r++)t.push(e.bones[r]);else i(e,t);return t}},i=function(e,t){t.push(e);for(var r=0;r<e.children.length;r++)i(e.children[r],t)},o=function(e){if(!0!==e.initialized){for(var t=0;t<e.hierarchy.length;t++){for(var r=0;r<e.hierarchy[t].keys.length;r++)if(e.hierarchy[t].keys[r].time<0&&(e.hierarchy[t].keys[r].time=0),void 0!==e.hierarchy[t].keys[r].rot&&!(e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[t].keys[r].rot;e.hierarchy[t].keys[r].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3])}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){var o={};for(r=0;r<e.hierarchy[t].keys.length;r++)for(var a=0;a<e.hierarchy[t].keys[r].morphTargets.length;a++){o[s=e.hierarchy[t].keys[r].morphTargets[a]]=-1}e.hierarchy[t].usedMorphTargets=o;for(r=0;r<e.hierarchy[t].keys.length;r++){var n={};for(var s in o){for(a=0;a<e.hierarchy[t].keys[r].morphTargets.length;a++)if(e.hierarchy[t].keys[r].morphTargets[a]===s){n[s]=e.hierarchy[t].keys[r].morphTargetsInfluences[a];break}a===e.hierarchy[t].keys[r].morphTargets.length&&(n[s]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=n}}for(r=1;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].index=r}var h=parseInt(e.length*e.fps,10);e.JIT={},e.JIT.hierarchy=[];for(t=0;t<e.hierarchy.length;t++)e.JIT.hierarchy.push(new Array(h));e.initialized=!0}};return r.LINEAR=0,r.CATMULLROM=1,r.CATMULLROM_FORWARD=2,r}(),THREE.Animation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==r?r:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0;var r,i,o=this.hierarchy.length;for(r=0;r<o;r++){(i=this.hierarchy[r]).matrixAutoUpdate=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey={pos:0,rot:0,scl:0},i.animationCache.nextKey={pos:0,rot:0,scl:0},i.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var a=i.animationCache.prevKey,n=i.animationCache.nextKey;a.pos=this.data.hierarchy[r].keys[0],a.rot=this.data.hierarchy[r].keys[0],a.scl=this.data.hierarchy[r].keys[0],n.pos=this.getNextKeyWith("pos",r,1),n.rot=this.getNextKeyWith("rot",r,1),n.scl=this.getNextKeyWith("scl",r,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t,r,i,o,a,n,s,h,l,c,u,p,f,E,d=["pos","rot","scl"];this.data.JIT.hierarchy;this.currentTime+=e*this.timeScale,u=this.currentTime,c=this.currentTime=this.currentTime%this.data.length,parseInt(Math.min(c*this.data.fps,this.data.length*this.data.fps),10);for(var m=0,g=this.hierarchy.length;m<g;m++){l=(h=this.hierarchy[m]).animationCache;for(var v=0;v<3;v++){if(t=d[v],n=l.prevKey[t],(s=l.nextKey[t]).time<=u){if(c<u){if(!this.loop)return void this.stop();for(n=this.data.hierarchy[m].keys[0],s=this.getNextKeyWith(t,m,1);s.time<c;)n=s,s=this.getNextKeyWith(t,m,s.index+1)}else do{n=s,s=this.getNextKeyWith(t,m,s.index+1)}while(s.time<c);l.prevKey[t]=n,l.nextKey[t]=s}h.matrixAutoUpdate=!0,h.matrixWorldNeedsUpdate=!0,r=(c-n.time)/(s.time-n.time),o=n[t],a=s[t],(r<0||r>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+r+" on bone "+m),r=r<0?0:1),"pos"===t?(i=h.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(i.x=o[0]+(a[0]-o[0])*r,i.y=o[1]+(a[1]-o[1])*r,i.z=o[2]+(a[2]-o[2])*r):this.interpolationType!==THREE.AnimationHandler.CATMULLROM&&this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD||(this.points[0]=this.getPrevKeyWith("pos",m,n.index-1).pos,this.points[1]=o,this.points[2]=a,this.points[3]=this.getNextKeyWith("pos",m,s.index+1).pos,r=.33*r+.33,p=this.interpolateCatmullRom(this.points,r),i.x=p[0],i.y=p[1],i.z=p[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(f=this.interpolateCatmullRom(this.points,1.01*r),this.target.set(f[0],f[1],f[2]),this.target.sub(i),this.target.y=0,this.target.normalize(),E=Math.atan2(this.target.x,this.target.z),h.rotation.set(0,E,0)))):"rot"===t?THREE.Quaternion.slerp(o,a,h.quaternion,r):"scl"===t&&((i=h.scale).x=o[0]+(a[0]-o[0])*r,i.y=o[1]+(a[1]-o[1])*r,i.z=o[2]+(a[2]-o[2])*r)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var r,i,o,a,n,s,h,l,c,u=[],p=[];return o=(r=(e.length-1)*t)-(i=Math.floor(r)),u[0]=0===i?i:i-1,u[1]=i,u[2]=i>e.length-2?i:i+1,u[3]=i>e.length-3?i:i+2,s=e[u[0]],h=e[u[1]],l=e[u[2]],c=e[u[3]],n=o*(a=o*o),p[0]=this.interpolate(s[0],h[0],l[0],c[0],o,a,n),p[1]=this.interpolate(s[1],h[1],l[1],c[1],o,a,n),p[2]=this.interpolate(s[2],h[2],l[2],c[2],o,a,n),p},THREE.Animation.prototype.interpolate=function(e,t,r,i,o,a,n){var s=.5*(r-e),h=.5*(i-t);return(2*(t-r)+s+h)*n+(-3*(t-r)-2*s-h)*a+s*o+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=r<i.length-1?r:i.length-1:r%=i.length;r<i.length;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]},THREE.KeyFrameAnimation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0===r||r;for(var i=0,o=this.hierarchy.length;i<o;i++){var a=this.data.hierarchy[i].keys,n=this.data.hierarchy[i].sids,s=this.hierarchy[i];if(a.length&&n){for(var h=0;h<n.length;h++){var l=n[h],c=this.getNextKeyWith(l,i,0);c&&c.apply(l)}s.matrixAutoUpdate=!1,this.data.hierarchy[i].node.updateMatrix(),s.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var r,i,o,a=this.hierarchy.length;for(r=0;r<a;r++){i=this.hierarchy[r],void 0===(o=this.data.hierarchy[r]).animationCache&&(o.animationCache={},o.animationCache.prevKey=null,o.animationCache.nextKey=null,o.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var n=this.data.hierarchy[r].keys;n.length&&(o.animationCache.prevKey=n[0],o.animationCache.nextKey=n[1],this.startTime=Math.min(n[0].time,this.startTime),this.endTime=Math.max(n[n.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;t instanceof THREE.Bone?(i.copy(t.skinMatrix),t.skinMatrix=i):(i.copy(t.matrix),t.matrix=i),delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,r,i,o,a,n,s,h,l=this.data.JIT.hierarchy;if(this.currentTime+=e*this.timeScale,s=this.currentTime,(n=this.currentTime=this.currentTime%this.data.length)<this.startTimeMs&&(n=this.currentTime=this.startTimeMs+n),a=parseInt(Math.min(n*this.data.fps,this.data.length*this.data.fps),10),!(h=n<s)||this.loop){if(!(n<this.startTime)){for(p=0,f=this.hierarchy.length;p<f;p++){i=this.hierarchy[p];E=(o=this.data.hierarchy[p]).keys;var c=o.animationCache;if(this.JITCompile&&void 0!==l[p][a])i instanceof THREE.Bone?(i.skinMatrix=l[p][a],i.matrixWorldNeedsUpdate=!1):(i.matrix=l[p][a],i.matrixWorldNeedsUpdate=!0);else if(E.length){if(this.JITCompile&&c&&(i instanceof THREE.Bone?i.skinMatrix=c.originalMatrix:i.matrix=c.originalMatrix),t=c.prevKey,r=c.nextKey,t&&r){if(r.time<=s){if(h&&this.loop)for(t=E[0],r=E[1];r.time<n;)r=E[(t=r).index+1];else if(!h)for(var u=E.length-1;r.time<n&&r.index!==u;)r=E[(t=r).index+1];c.prevKey=t,c.nextKey=r}r.time>=n?t.interpolate(r,n):t.interpolate(r,r.time)}this.data.hierarchy[p].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===l[0][a]){this.hierarchy[0].updateMatrixWorld(!0);for(p=0;p<this.hierarchy.length;p++)this.hierarchy[p]instanceof THREE.Bone?l[p][a]=this.hierarchy[p].skinMatrix.clone():l[p][a]=this.hierarchy[p].matrix.clone()}}}else{for(var p=0,f=this.hierarchy.length;p<f;p++){var E=this.data.hierarchy[p].keys,d=this.data.hierarchy[p].sids,m=E.length-1,g=this.hierarchy[p];if(E.length){for(var v=0;v<d.length;v++){var T=d[v],y=this.getPrevKeyWith(T,p,m);y&&y.apply(T)}this.data.hierarchy[p].node.updateMatrix(),g.matrixWorldNeedsUpdate=!0}}this.stop()}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r%=i.length;r<i.length;r++)if(i[r].hasTarget(e))return i[r];return i[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(e))return i[r];return i[i.length-1]},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(1,0,0)),this.add(i);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,1),a.lookAt(new THREE.Vector3(0,1,0)),this.add(a);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,0,-1),n.lookAt(new THREE.Vector3(0,-1,0)),this.add(n);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,l=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,i,r),r.activeCubeFace=1,e.render(t,o,r),r.activeCubeFace=2,e.render(t,a,r),r.activeCubeFace=3,e.render(t,n,r),r.activeCubeFace=4,e.render(t,s,r),r.generateMipmaps=l,r.activeCubeFace=5,e.render(t,h,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,r,i,o,a,n){THREE.Camera.call(this),this.fov=r,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,a,n),this.cameraP=new THREE.PerspectiveCamera(r,e/t,i,o),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.fov,t=this.cameraP.aspect,r=(this.cameraP.near+this.cameraP.far)/2,i=Math.tan(e/2)*r,o=2*i*t/2;i/=this.zoom,o/=this.zoom,this.cameraO.left=-o,this.cameraO.right=o,this.cameraO.top=i,this.cameraO.bottom=-i,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var r=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(r),r},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),e=e||50,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,t=void 0!==t?Math.max(3,t):8;var o,a=[],n=new THREE.Vector3,s=new THREE.Vector2(.5,.5);for(this.vertices.push(n),a.push(s),o=0;o<=t;o++){var h=new THREE.Vector3,l=r+o/t*i;h.x=e*Math.cos(l),h.y=e*Math.sin(l),this.vertices.push(h),a.push(new THREE.Vector2((h.x/e+1)/2,(h.y/e+1)/2))}var c=new THREE.Vector3(0,0,1);for(o=1;o<=t;o++){var u=o,p=o+1;this.faces.push(new THREE.Face3(u,p,0,[c,c,c])),this.faceVertexUvs[0].push([a[o],a[o+1],s])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,r,i,o,a){THREE.Geometry.call(this);var n=this;this.width=e,this.height=t,this.depth=r,this.widthSegments=i||1,this.heightSegments=o||1,this.depthSegments=a||1;var s=this.width/2,h=this.height/2,l=this.depth/2;function c(e,t,r,i,o,a,s,h){var l,c,u,p=n.widthSegments,f=n.heightSegments,E=o/2,d=a/2,m=n.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",f=n.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",p=n.depthSegments);var g=p+1,v=f+1,T=o/p,y=a/f,R=new THREE.Vector3;for(R[l]=s>0?1:-1,u=0;u<v;u++)for(c=0;c<g;c++){var x=new THREE.Vector3;x[e]=(c*T-E)*r,x[t]=(u*y-d)*i,x[l]=s,n.vertices.push(x)}for(u=0;u<f;u++)for(c=0;c<p;c++){var H=c+g*u,_=c+g*(u+1),w=c+1+g*(u+1),b=c+1+g*u,M=new THREE.Vector2(c/p,1-u/f),S=new THREE.Vector2(c/p,1-(u+1)/f),A=new THREE.Vector2((c+1)/p,1-(u+1)/f),C=new THREE.Vector2((c+1)/p,1-u/f),L=new THREE.Face3(H+m,_+m,b+m);L.normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,n.faces.push(L),n.faceVertexUvs[0].push([M,S,C]),(L=new THREE.Face3(_+m,w+m,b+m)).normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,n.faces.push(L),n.faceVertexUvs[0].push([S.clone(),A,C.clone()])}}c("z","y",-1,-1,this.depth,this.height,s,0),c("z","y",1,-1,this.depth,this.height,-s,1),c("x","z",1,1,this.width,this.depth,h,2),c("x","z",1,-1,this.width,this.depth,-h,3),c("x","y",1,-1,this.width,this.height,l,4),c("x","y",-1,-1,this.width,this.height,-l,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,r,i,o,a){THREE.Geometry.call(this),this.radiusTop=e=void 0!==e?e:20,this.radiusBottom=t=void 0!==t?t:20,this.height=r=void 0!==r?r:100,this.radialSegments=i=i||8,this.heightSegments=o=o||1,this.openEnded=a=void 0!==a&&a;var n,s,h=r/2,l=[],c=[];for(s=0;s<=o;s++){var u=[],p=[],f=s/o,E=f*(t-e)+e;for(n=0;n<=i;n++){var d=n/i,m=new THREE.Vector3;m.x=E*Math.sin(d*Math.PI*2),m.y=-f*r+h,m.z=E*Math.cos(d*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),p.push(new THREE.Vector2(d,1-f))}l.push(u),c.push(p)}var g,v,T=(t-e)/r;for(n=0;n<i;n++)for(0!==e?(g=this.vertices[l[0][n]].clone(),v=this.vertices[l[0][n+1]].clone()):(g=this.vertices[l[1][n]].clone(),v=this.vertices[l[1][n+1]].clone()),g.setY(Math.sqrt(g.x*g.x+g.z*g.z)*T).normalize(),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*T).normalize(),s=0;s<o;s++){var y=l[s][n],R=l[s+1][n],x=l[s+1][n+1],H=l[s][n+1],_=g.clone(),w=g.clone(),b=v.clone(),M=v.clone(),S=c[s][n].clone(),A=c[s+1][n].clone(),C=c[s+1][n+1].clone(),L=c[s][n+1].clone();this.faces.push(new THREE.Face3(y,R,H,[_,w,M])),this.faceVertexUvs[0].push([S,A,L]),this.faces.push(new THREE.Face3(R,x,H,[w,b,M])),this.faceVertexUvs[0].push([A,C,L])}if(!1===a&&e>0)for(this.vertices.push(new THREE.Vector3(0,h,0)),n=0;n<i;n++){y=l[0][n],R=l[0][n+1],x=this.vertices.length-1,_=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),b=new THREE.Vector3(0,1,0),S=c[0][n].clone(),A=c[0][n+1].clone(),C=new THREE.Vector2(A.u,0);this.faces.push(new THREE.Face3(y,R,x,[_,w,b])),this.faceVertexUvs[0].push([S,A,C])}if(!1===a&&t>0)for(this.vertices.push(new THREE.Vector3(0,-h,0)),n=0;n<i;n++){y=l[s][n+1],R=l[s][n],x=this.vertices.length-1,_=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),b=new THREE.Vector3(0,-1,0),S=c[s][n+1].clone(),A=c[s][n].clone(),C=new THREE.Vector2(A.u,1);this.faces.push(new THREE.Face3(y,R,x,[_,w,b])),this.faceVertexUvs[0].push([S,A,C])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){void 0!==e?(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()):e=[]},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;i<r;i++){var o=e[i];this.addShape(o,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){var r,i,o,a,n,s,h,l,c=void 0!==t.amount?t.amount:100,u=void 0!==t.bevelThickness?t.bevelThickness:6,p=void 0!==t.bevelSize?t.bevelSize:u-2,f=void 0!==t.bevelSegments?t.bevelSegments:3,E=void 0===t.bevelEnabled||t.bevelEnabled,d=void 0!==t.curveSegments?t.curveSegments:12,m=void 0!==t.steps?t.steps:1,g=t.extrudePath,v=!1,T=t.material,y=t.extrudeMaterial,R=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb;g&&(r=g.getSpacedPoints(m),v=!0,E=!1,i=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(g,m,!1),o=new THREE.Vector3,a=new THREE.Vector3,n=new THREE.Vector3),E||(f=0,u=0,p=0);var x=this,H=this.vertices.length,_=e.extractPoints(d),w=_.shape,b=_.holes,M=!THREE.Shape.Utils.isClockWise(w);if(M){for(w=w.reverse(),h=0,l=b.length;h<l;h++)s=b[h],THREE.Shape.Utils.isClockWise(s)&&(b[h]=s.reverse());M=!1}var S=THREE.Shape.Utils.triangulateShape(w,b),A=w;for(h=0,l=b.length;h<l;h++)s=b[h],w=w.concat(s);function C(e,t,r){return t||console.log("die"),t.clone().multiplyScalar(r).add(e)}var L,P,D,F,V,U,z=w.length,B=S.length;A.length,Math.PI;function N(e,t,r){return function(e,t,r){var i,o,a,n,s,h=THREE.ExtrudeGeometry.__v1,l=THREE.ExtrudeGeometry.__v2,c=THREE.ExtrudeGeometry.__v3,u=THREE.ExtrudeGeometry.__v4,p=THREE.ExtrudeGeometry.__v5,f=THREE.ExtrudeGeometry.__v6;if(h.set(e.x-t.x,e.y-t.y),l.set(e.x-r.x,e.y-r.y),i=h.normalize(),o=l.normalize(),c.set(-i.y,i.x),u.set(o.y,-o.x),p.copy(e).add(c),f.copy(e).add(u),p.equals(f))return u.clone();p.copy(t).add(c),f.copy(r).add(u),a=i.dot(u),n=f.sub(p).dot(u),0===a&&(console.log("Either infinite or no solutions!"),0===n?console.log("Its finite solutions."):console.log("Too bad, no solutions."));if((s=n/a)<0)return function(e,t,r){var i=Math.atan2(t.y-e.y,t.x-e.x),o=Math.atan2(r.y-e.y,r.x-e.x);i>o&&(o+=2*Math.PI);var a=(i+o)/2,n=-Math.cos(a),s=-Math.sin(a);return new THREE.Vector2(n,s)}(e,t,r);return i.multiplyScalar(s).add(p).sub(e).clone()}(e,t,r)}for(var O=[],I=0,k=A.length,G=k-1,W=I+1;I<k;I++,G++,W++){G===k&&(G=0),W===k&&(W=0);A[I],A[G],A[W];O[I]=N(A[I],A[G],A[W])}var j,X,Y=[],q=O.concat();for(h=0,l=b.length;h<l;h++){for(s=b[h],j=[],I=0,G=(k=s.length)-1,W=I+1;I<k;I++,G++,W++)G===k&&(G=0),W===k&&(W=0),j[I]=N(s[I],s[G],s[W]);Y.push(j),q=q.concat(j)}for(L=0;L<f;L++){for(F=u*(1-(D=L/f)),P=p*Math.sin(D*Math.PI/2),I=0,k=A.length;I<k;I++)Q((V=C(A[I],O[I],P)).x,V.y,-F);for(h=0,l=b.length;h<l;h++)for(s=b[h],j=Y[h],I=0,k=s.length;I<k;I++)Q((V=C(s[I],j[I],P)).x,V.y,-F)}for(P=p,I=0;I<z;I++)V=E?C(w[I],q[I],P):w[I],v?(a.copy(i.normals[0]).multiplyScalar(V.x),o.copy(i.binormals[0]).multiplyScalar(V.y),n.copy(r[0]).add(a).add(o),Q(n.x,n.y,n.z)):Q(V.x,V.y,0);for(X=1;X<=m;X++)for(I=0;I<z;I++)V=E?C(w[I],q[I],P):w[I],v?(a.copy(i.normals[X]).multiplyScalar(V.x),o.copy(i.binormals[X]).multiplyScalar(V.y),n.copy(r[X]).add(a).add(o),Q(n.x,n.y,n.z)):Q(V.x,V.y,c/m*X);for(L=f-1;L>=0;L--){for(F=u*(1-(D=L/f)),P=p*Math.sin(D*Math.PI/2),I=0,k=A.length;I<k;I++)Q((V=C(A[I],O[I],P)).x,V.y,c+F);for(h=0,l=b.length;h<l;h++)for(s=b[h],j=Y[h],I=0,k=s.length;I<k;I++)V=C(s[I],j[I],P),v?Q(V.x,V.y+r[m-1].y,r[m-1].x+F):Q(V.x,V.y,c+F)}function K(e,t){var r,i;for(I=e.length;--I>=0;){r=I,(i=I-1)<0&&(i=e.length-1);var o=0,a=m+2*f;for(o=0;o<a;o++){var n=z*o,s=z*(o+1);J(t+r+n,t+i+n,t+i+s,t+r+s,e,o,a,r,i)}}}function Q(e,t,r){x.vertices.push(new THREE.Vector3(e,t,r))}function Z(r,i,o,a){r+=H,i+=H,o+=H,x.faces.push(new THREE.Face3(r,i,o,null,null,T));var n=a?R.generateBottomUV(x,e,t,r,i,o):R.generateTopUV(x,e,t,r,i,o);x.faceVertexUvs[0].push(n)}function J(r,i,o,a,n,s,h,l,c){r+=H,i+=H,o+=H,a+=H,x.faces.push(new THREE.Face3(r,i,a,null,null,y)),x.faces.push(new THREE.Face3(i,o,a,null,null,y));var u=R.generateSideWallUV(x,e,n,t,r,i,o,a,s,h,l,c);x.faceVertexUvs[0].push([u[0],u[1],u[3]]),x.faceVertexUvs[0].push([u[1],u[2],u[3]])}!function(){if(E){var e=0,t=z*e;for(I=0;I<B;I++)Z((U=S[I])[2]+t,U[1]+t,U[0]+t,!0);for(t=z*(e=m+2*f),I=0;I<B;I++)Z((U=S[I])[0]+t,U[1]+t,U[2]+t,!1)}else{for(I=0;I<B;I++)Z((U=S[I])[2],U[1],U[0],!0);for(I=0;I<B;I++)Z((U=S[I])[0]+z*m,U[1]+z*m,U[2]+z*m,!1)}}(),function(){var e=0;for(K(A,e),e+=A.length,h=0,l=b.length;h<l;h++)K(s=b[h],e),e+=s.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i,o,a){var n=e.vertices[i].x,s=e.vertices[i].y,h=e.vertices[o].x,l=e.vertices[o].y,c=e.vertices[a].x,u=e.vertices[a].y;return[new THREE.Vector2(n,s),new THREE.Vector2(h,l),new THREE.Vector2(c,u)]},generateBottomUV:function(e,t,r,i,o,a){return this.generateTopUV(e,t,r,i,o,a)},generateSideWallUV:function(e,t,r,i,o,a,n,s,h,l,c,u){var p=e.vertices[o].x,f=e.vertices[o].y,E=e.vertices[o].z,d=e.vertices[a].x,m=e.vertices[a].y,g=e.vertices[a].z,v=e.vertices[n].x,T=e.vertices[n].y,y=e.vertices[n].z,R=e.vertices[s].x,x=e.vertices[s].y,H=e.vertices[s].z;return Math.abs(f-m)<.01?[new THREE.Vector2(p,1-E),new THREE.Vector2(d,1-g),new THREE.Vector2(v,1-y),new THREE.Vector2(R,1-H)]:[new THREE.Vector2(f,1-E),new THREE.Vector2(m,1-g),new THREE.Vector2(T,1-y),new THREE.Vector2(x,1-H)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),e instanceof Array==!1&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;r<i;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r,i,o,a=void 0!==t.curveSegments?t.curveSegments:12,n=t.material,s=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,h=(this.shapebb,this.vertices.length),l=e.extractPoints(a),c=l.shape,u=l.holes,p=!THREE.Shape.Utils.isClockWise(c);if(p){for(c=c.reverse(),r=0,i=u.length;r<i;r++)o=u[r],THREE.Shape.Utils.isClockWise(o)&&(u[r]=o.reverse());p=!1}var f=THREE.Shape.Utils.triangulateShape(c,u),E=c;for(r=0,i=u.length;r<i;r++)o=u[r],c=c.concat(o);var d,m,g=c.length,v=f.length;E.length;for(r=0;r<g;r++)d=c[r],this.vertices.push(new THREE.Vector3(d.x,d.y,0));for(r=0;r<v;r++){var T=(m=f[r])[0]+h,y=m[1]+h,R=m[2]+h;this.faces.push(new THREE.Face3(T,y,R,null,null,n)),this.faceVertexUvs[0].push(s.generateBottomUV(this,e,t,T,y,R))}},THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this),t=t||12,r=r||0,i=i||2*Math.PI;for(var o=1/(e.length-1),a=1/t,n=0,s=t;n<=s;n++)for(var h=r+n*a*i,l=Math.cos(h),c=Math.sin(h),u=0,p=e.length;u<p;u++){var f=e[u],E=new THREE.Vector3;E.x=l*f.x-c*f.y,E.y=c*f.x+l*f.y,E.z=f.z,this.vertices.push(E)}var d=e.length;for(n=0,s=t;n<s;n++)for(u=0,p=e.length-1;u<p;u++){var m=u+d*n,g=m,v=m+d,T=(l=m+1+d,m+1),y=n*a,R=u*o,x=y+a,H=R+o;this.faces.push(new THREE.Face3(g,v,T)),this.faceVertexUvs[0].push([new THREE.Vector2(y,R),new THREE.Vector2(x,R),new THREE.Vector2(y,H)]),this.faces.push(new THREE.Face3(v,l,T)),this.faceVertexUvs[0].push([new THREE.Vector2(x,R),new THREE.Vector2(x,H),new THREE.Vector2(y,H)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,r,i){var o,a;THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=r||1,this.heightSegments=i||1;var n=e/2,s=t/2,h=this.widthSegments,l=this.heightSegments,c=h+1,u=l+1,p=this.width/h,f=this.height/l,E=new THREE.Vector3(0,0,1);for(a=0;a<u;a++)for(o=0;o<c;o++){var d=o*p-n,m=a*f-s;this.vertices.push(new THREE.Vector3(d,-m,0))}for(a=0;a<l;a++)for(o=0;o<h;o++){var g=o+c*a,v=o+c*(a+1),T=o+1+c*(a+1),y=o+1+c*a,R=new THREE.Vector2(o/h,1-a/l),x=new THREE.Vector2(o/h,1-(a+1)/l),H=new THREE.Vector2((o+1)/h,1-(a+1)/l),_=new THREE.Vector2((o+1)/h,1-a/l),w=new THREE.Face3(g,v,y);w.normal.copy(E),w.vertexNormals.push(E.clone(),E.clone(),E.clone()),this.faces.push(w),this.faceVertexUvs[0].push([R,x,_]),(w=new THREE.Face3(v,T,y)).normal.copy(E),w.vertexNormals.push(E.clone(),E.clone(),E.clone()),this.faces.push(w),this.faceVertexUvs[0].push([x.clone(),H,_.clone()])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(e,t,r,i,o,a){THREE.Geometry.call(this),e=e||0,t=t||50,o=void 0!==o?o:0,a=void 0!==a?a:2*Math.PI,r=void 0!==r?Math.max(3,r):8;var n,s,h=[],l=e,c=(t-e)/(i=void 0!==i?Math.max(3,i):8);for(n=0;n<=i;n++){for(s=0;s<=r;s++){var u=new THREE.Vector3,p=o+s/r*a;u.x=l*Math.cos(p),u.y=l*Math.sin(p),this.vertices.push(u),h.push(new THREE.Vector2((u.x/l+1)/2,-(u.y/l+1)/2+1))}l+=c}var f=new THREE.Vector3(0,0,1);for(n=0;n<i;n++){var E=n*r;for(s=0;s<=r;s++){var d=(p=s+E)+n,m=p+r+n,g=p+r+1+n;this.faces.push(new THREE.Face3(d,m,g,[f,f,f])),this.faceVertexUvs[0].push([h[d],h[m],h[g]]),d=p+n,m=p+r+1+n,g=p+1+n,this.faces.push(new THREE.Face3(d,m,g,[f,f,f])),this.faceVertexUvs[0].push([h[d],h[m],h[g]])}}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,l)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,r,i,o,a,n){THREE.Geometry.call(this),this.radius=e=e||50,this.widthSegments=t=Math.max(3,Math.floor(t)||8),this.heightSegments=r=Math.max(2,Math.floor(r)||6),this.phiStart=i=void 0!==i?i:0,this.phiLength=o=void 0!==o?o:2*Math.PI,this.thetaStart=a=void 0!==a?a:0,this.thetaLength=n=void 0!==n?n:Math.PI;var s,h,l=[],c=[];for(h=0;h<=r;h++){var u=[],p=[];for(s=0;s<=t;s++){var f=s/t,E=h/r,d=new THREE.Vector3;d.x=-e*Math.cos(i+f*o)*Math.sin(a+E*n),d.y=e*Math.cos(a+E*n),d.z=e*Math.sin(i+f*o)*Math.sin(a+E*n),this.vertices.push(d),u.push(this.vertices.length-1),p.push(new THREE.Vector2(f,1-E))}l.push(u),c.push(p)}for(h=0;h<this.heightSegments;h++)for(s=0;s<this.widthSegments;s++){var m=l[h][s+1],g=l[h][s],v=l[h+1][s],T=l[h+1][s+1],y=this.vertices[m].clone().normalize(),R=this.vertices[g].clone().normalize(),x=this.vertices[v].clone().normalize(),H=this.vertices[T].clone().normalize(),_=c[h][s+1].clone(),w=c[h][s].clone(),b=c[h+1][s].clone(),M=c[h+1][s+1].clone();Math.abs(this.vertices[m].y)===this.radius?(this.faces.push(new THREE.Face3(m,v,T,[y,x,H])),this.faceVertexUvs[0].push([_,b,M])):Math.abs(this.vertices[v].y)===this.radius?(this.faces.push(new THREE.Face3(m,g,v,[y,R,x])),this.faceVertexUvs[0].push([_,w,b])):(this.faces.push(new THREE.Face3(m,g,T,[y,R,H])),this.faceVertexUvs[0].push([_,w,M]),this.faces.push(new THREE.Face3(g,v,T,[R,x,H])),this.faceVertexUvs[0].push([w.clone(),b,M.clone()]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){t=t||{};var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,r,i,o){THREE.Geometry.call(this);this.radius=e||100,this.tube=t||40,this.radialSegments=r||8,this.tubularSegments=i||6,this.arc=o||2*Math.PI;for(var a=new THREE.Vector3,n=[],s=[],h=0;h<=this.radialSegments;h++)for(var l=0;l<=this.tubularSegments;l++){var c=l/this.tubularSegments*this.arc,u=h/this.radialSegments*Math.PI*2;a.x=this.radius*Math.cos(c),a.y=this.radius*Math.sin(c);var p=new THREE.Vector3;p.x=(this.radius+this.tube*Math.cos(u))*Math.cos(c),p.y=(this.radius+this.tube*Math.cos(u))*Math.sin(c),p.z=this.tube*Math.sin(u),this.vertices.push(p),n.push(new THREE.Vector2(l/this.tubularSegments,h/this.radialSegments)),s.push(p.clone().sub(a).normalize())}for(h=1;h<=this.radialSegments;h++)for(l=1;l<=this.tubularSegments;l++){var f=(this.tubularSegments+1)*h+l-1,E=(this.tubularSegments+1)*(h-1)+l-1,d=(this.tubularSegments+1)*(h-1)+l,m=(this.tubularSegments+1)*h+l,g=new THREE.Face3(f,E,m,[s[f],s[E],s[m]]);g.normal.add(s[f]),g.normal.add(s[E]),g.normal.add(s[m]),g.normal.normalize(),this.faces.push(g),this.faceVertexUvs[0].push([n[f].clone(),n[E].clone(),n[m].clone()]),(g=new THREE.Face3(E,d,m,[s[E],s[d],s[m]])).normal.add(s[E]),g.normal.add(s[d]),g.normal.add(s[m]),g.normal.normalize(),this.faces.push(g),this.faceVertexUvs[0].push([n[E].clone(),n[d].clone(),n[m].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,r,i,o,a,n){THREE.Geometry.call(this);this.radius=e||100,this.tube=t||40,this.radialSegments=r||64,this.tubularSegments=i||8,this.p=o||2,this.q=a||3,this.heightScale=n||1,this.grid=new Array(this.radialSegments);for(var s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3,c=0;c<this.radialSegments;++c){this.grid[c]=new Array(this.tubularSegments);var u=c/this.radialSegments*2*this.p*Math.PI,p=A(u,this.q,this.p,this.radius,this.heightScale),f=A(u+.01,this.q,this.p,this.radius,this.heightScale);s.subVectors(f,p),h.addVectors(f,p),l.crossVectors(s,h),h.crossVectors(l,s),l.normalize(),h.normalize();for(var E=0;E<this.tubularSegments;++E){var d=E/this.tubularSegments*2*Math.PI,m=-this.tube*Math.cos(d),g=this.tube*Math.sin(d),v=new THREE.Vector3;v.x=p.x+m*h.x+g*l.x,v.y=p.y+m*h.y+g*l.y,v.z=p.z+m*h.z+g*l.z,this.grid[c][E]=this.vertices.push(v)-1}}for(c=0;c<this.radialSegments;++c)for(E=0;E<this.tubularSegments;++E){var T=(c+1)%this.radialSegments,y=(E+1)%this.tubularSegments,R=this.grid[c][E],x=this.grid[T][E],H=this.grid[T][y],_=this.grid[c][y],w=new THREE.Vector2(c/this.radialSegments,E/this.tubularSegments),b=new THREE.Vector2((c+1)/this.radialSegments,E/this.tubularSegments),M=new THREE.Vector2((c+1)/this.radialSegments,(E+1)/this.tubularSegments),S=new THREE.Vector2(c/this.radialSegments,(E+1)/this.tubularSegments);this.faces.push(new THREE.Face3(R,x,_)),this.faceVertexUvs[0].push([w,b,S]),this.faces.push(new THREE.Face3(x,H,_)),this.faceVertexUvs[0].push([b.clone(),M,S.clone()])}function A(e,t,r,i,o){var a=Math.cos(e),n=Math.sin(e),s=t/r*e,h=Math.cos(s),l=i*(2+h)*.5*a,c=i*(2+h)*n*.5,u=o*i*Math.sin(s)*.5;return new THREE.Vector3(l,c,u)}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,r,i,o){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=r||1,this.radialSegments=i||8,this.closed=o||!1,this.grid=[];var a,n,s,h,l,c,u,p,f,E,d,m,g,v,T,y,R,x,H,_,w,b,M=this,S=this.segments+1,A=new THREE.Vector3,C=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),L=C.tangents,P=C.normals,D=C.binormals;for(this.tangents=L,this.normals=P,this.binormals=D,p=0;p<S;p++)for(this.grid[p]=[],s=p/(S-1),u=e.getPointAt(s),L[p],a=P[p],n=D[p],f=0;f<this.radialSegments;f++)h=f/this.radialSegments*2*Math.PI,l=-this.radius*Math.cos(h),c=this.radius*Math.sin(h),A.copy(u),A.x+=l*a.x+c*n.x,A.y+=l*a.y+c*n.y,A.z+=l*a.z+c*n.z,this.grid[p][f]=(_=A.x,w=A.y,b=A.z,M.vertices.push(new THREE.Vector3(_,w,b))-1);for(p=0;p<this.segments;p++)for(f=0;f<this.radialSegments;f++)E=this.closed?(p+1)%this.segments:p+1,d=(f+1)%this.radialSegments,m=this.grid[p][f],g=this.grid[E][f],v=this.grid[E][d],T=this.grid[p][d],y=new THREE.Vector2(p/this.segments,f/this.radialSegments),R=new THREE.Vector2((p+1)/this.segments,f/this.radialSegments),x=new THREE.Vector2((p+1)/this.segments,(f+1)/this.radialSegments),H=new THREE.Vector2(p/this.segments,(f+1)/this.radialSegments),this.faces.push(new THREE.Face3(m,g,T)),this.faceVertexUvs[0].push([y,R,H]),this.faces.push(new THREE.Face3(g,v,T)),this.faceVertexUvs[0].push([R.clone(),x,H.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,r){new THREE.Vector3;var i,o,a,n,s,h,l,c=new THREE.Vector3,u=(new THREE.Vector3,[]),p=[],f=[],E=new THREE.Vector3,d=new THREE.Matrix4,m=t+1,g=1e-4;for(this.tangents=u,this.normals=p,this.binormals=f,h=0;h<m;h++)l=h/(m-1),u[h]=e.getTangentAt(l),u[h].normalize();for(function(){p[0]=new THREE.Vector3,f[0]=new THREE.Vector3,o=Number.MAX_VALUE,a=Math.abs(u[0].x),n=Math.abs(u[0].y),s=Math.abs(u[0].z),a<=o&&(o=a,c.set(1,0,0));n<=o&&(o=n,c.set(0,1,0));s<=o&&c.set(0,0,1);E.crossVectors(u[0],c).normalize(),p[0].crossVectors(u[0],E),f[0].crossVectors(u[0],p[0])}(),h=1;h<m;h++)p[h]=p[h-1].clone(),f[h]=f[h-1].clone(),E.crossVectors(u[h-1],u[h]),E.length()>g&&(E.normalize(),i=Math.acos(THREE.Math.clamp(u[h-1].dot(u[h]),-1,1)),p[h].applyMatrix4(d.makeRotationAxis(E,i))),f[h].crossVectors(u[h],p[h]);if(r)for(i=Math.acos(THREE.Math.clamp(p[0].dot(p[m-1]),-1,1)),i/=m-1,u[0].dot(E.crossVectors(p[0],p[m-1]))>0&&(i=-i),h=1;h<m;h++)p[h].applyMatrix4(d.makeRotationAxis(u[h],i*h)),f[h].crossVectors(u[h],p[h])},THREE.PolyhedronGeometry=function(e,t,r,i){THREE.Geometry.call(this),r=r||1,i=i||0;for(var o=this,a=0,n=e.length;a<n;a++)v(new THREE.Vector3(e[a][0],e[a][1],e[a][2]));var s=this.vertices,h=[];for(a=0,n=t.length;a<n;a++){var l=s[t[a][0]],c=s[t[a][1]],u=s[t[a][2]];h[a]=new THREE.Face3(l.index,c.index,u.index,[l.clone(),c.clone(),u.clone()])}for(a=0,n=h.length;a<n;a++)y(h[a],i);for(a=0,n=this.faceVertexUvs[0].length;a<n;a++){var p=this.faceVertexUvs[0][a],f=p[0].x,E=p[1].x,d=p[2].x,m=Math.max(f,Math.max(E,d)),g=Math.min(f,Math.min(E,d));m>.9&&g<.1&&(f<.2&&(p[0].x+=1),E<.2&&(p[1].x+=1),d<.2&&(p[2].x+=1))}for(a=0,n=this.vertices.length;a<n;a++)this.vertices[a].multiplyScalar(r);function v(e){var t=e.normalize().clone();t.index=o.vertices.push(t)-1;var r,i=R(e)/2/Math.PI+.5,a=(r=e,Math.atan2(-r.y,Math.sqrt(r.x*r.x+r.z*r.z))/Math.PI+.5);return t.uv=new THREE.Vector2(i,1-a),t}function T(e,t,r){var i=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);i.centroid.add(e).add(t).add(r).divideScalar(3),o.faces.push(i);var a=R(i.centroid);o.faceVertexUvs[0].push([x(e.uv,e,a),x(t.uv,t,a),x(r.uv,r,a)])}function y(e,t){for(var r=Math.pow(2,t),i=(Math.pow(4,t),v(o.vertices[e.a])),a=v(o.vertices[e.b]),n=v(o.vertices[e.c]),s=[],h=0;h<=r;h++){s[h]=[];for(var l=v(i.clone().lerp(n,h/r)),c=v(a.clone().lerp(n,h/r)),u=r-h,p=0;p<=u;p++)s[h][p]=0==p&&h==r?l:v(l.clone().lerp(c,p/u))}for(h=0;h<r;h++)for(p=0;p<2*(r-h)-1;p++){var f=Math.floor(p/2);p%2==0?T(s[h][f+1],s[h+1][f],s[h][f]):T(s[h][f+1],s[h+1][f+1],s[h+1][f])}}function R(e){return Math.atan2(e.z,-e.x)}function x(e,t,r){return r<0&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e.clone()}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){this.radius=e,this.detail=t;var r=(1+Math.sqrt(5))/2,i=[[-1,r,0],[1,r,0],[-1,-r,0],[1,-r,0],[0,-1,r],[0,1,r],[0,-1,-r],[0,1,-r],[r,0,-1],[r,0,1],[-r,0,-1],[-r,0,1]];THREE.PolyhedronGeometry.call(this,i,[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,r){THREE.Geometry.call(this);var i,o,a,n,s,h,l,c,u,p,f,E,d=this.vertices,m=this.faces,g=this.faceVertexUvs[0],v=t+1;for(i=0;i<=r;i++)for(n=i/r,o=0;o<=t;o++)a=e(o/t,n),d.push(a);for(i=0;i<r;i++)for(o=0;o<t;o++)s=i*v+o,h=i*v+o+1,l=(i+1)*v+o+1,c=(i+1)*v+o,u=new THREE.Vector2(o/t,i/r),p=new THREE.Vector2((o+1)/t,i/r),f=new THREE.Vector2((o+1)/t,(i+1)/r),E=new THREE.Vector2(o/t,(i+1)/r),m.push(new THREE.Face3(s,h,c)),g.push([u,p,E]),m.push(new THREE.Face3(h,l,c)),g.push([p.clone(),f,E.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){e=e||1;var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e,0,0),new THREE.Vector3,new THREE.Vector3(0,e,0),new THREE.Vector3,new THREE.Vector3(0,0,e)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,r,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,r,i){THREE.Object3D.call(this),void 0===i&&(i=16776960),void 0===r&&(r=1),this.position=t;var o=new THREE.Geometry;o.vertices.push(new THREE.Vector3(0,0,0)),o.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(o,new THREE.LineBasicMaterial({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line);var a=new THREE.CylinderGeometry(0,.05,.25,5,1);a.applyMatrix((new THREE.Matrix4).makeTranslation(0,.875,0)),this.cone=new THREE.Mesh(a,new THREE.MeshBasicMaterial({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var e,t=new THREE.Vector3;return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-.99999?this.quaternion.set(1,0,0,0):(t.set(r.z,0,-r.x).normalize(),e=Math.acos(r.y),this.quaternion.setFromAxisAngle(t,e))}}(),THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.BoxHelper=function(e){var t=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=t;var r=new THREE.Geometry;r.vertices.push(t[0],t[1],t[1],t[2],t[2],t[3],t[3],t[0],t[4],t[5],t[5],t[6],t[6],t[7],t[7],t[4],t[0],t[4],t[1],t[5],t[2],t[6],t[3],t[7]),THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var r=t.boundingBox.min,i=t.boundingBox.max,o=this.vertices;o[0].set(i.x,i.y,i.z),o[1].set(r.x,i.y,i.z),o[2].set(r.x,r.y,i.z),o[3].set(i.x,r.y,i.z),o[4].set(i.x,i.y,r.z),o[5].set(r.x,i.y,r.z),o[6].set(r.x,r.y,r.z),o[7].set(i.x,r.y,r.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.BoundingBoxHelper=function(e,t){var r=t||8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){var t=new THREE.Geometry,r=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={},o=16755200,a=16711680,n=3355443;function s(e,t,r){h(e,r),h(t,r)}function h(e,r){t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(r)),void 0===i[e]&&(i[e]=[]),i[e].push(t.vertices.length-1)}s("n1","n2",o),s("n2","n4",o),s("n4","n3",o),s("n3","n1",o),s("f1","f2",o),s("f2","f4",o),s("f4","f3",o),s("f3","f1",o),s("n1","f1",o),s("n2","f2",o),s("n3","f3",o),s("n4","f4",o),s("p","n1",a),s("p","n2",a),s("p","n3",a),s("p","n4",a),s("u1","u2",43775),s("u2","u3",43775),s("u3","u1",43775),s("c","t",16777215),s("p","c",n),s("cn1","cn2",n),s("cn3","cn4",n),s("cf1","cf2",n),s("cf3","cf4",n),THREE.Line.call(this,t,r,THREE.LinePieces),this.camera=e,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,r=new THREE.Projector;return function(){var i=this;function o(o,a,n,s){e.set(a,n,s),r.unprojectVector(e,t);var h=i.pointMap[o];if(void 0!==h)for(var l=0,c=h.length;l<c;l++)i.geometry.vertices[h[l]].copy(e)}t.projectionMatrix.copy(this.camera.projectionMatrix),o("c",0,0,-1),o("t",0,0,1),o("n1",-1,-1,-1),o("n2",1,-1,-1),o("n3",-1,1,-1),o("n4",1,1,-1),o("f1",-1,-1,1),o("f2",1,-1,1),o("f3",-1,1,1),o("f4",1,1,1),o("u1",.7,1.1,-1),o("u2",-.7,1.1,-1),o("u3",0,2,-1),o("cf1",-1,0,1),o("cf2",1,0,1),o("cf3",0,-1,1),o("cf4",0,1,1),o("cn1",-1,0,-1),o("cn2",1,0,-1),o("cn3",0,-1,-1),o("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1;var r=new THREE.PlaneGeometry(t,t),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Mesh(r,i),this.add(this.lightPlane),(r=new THREE.Geometry).vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3),r.computeLineDistances(),(i=new THREE.LineBasicMaterial({fog:!1})).color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){e.getPositionFromMatrix(this.light.matrixWorld).negate(),this.lightPlane.lookAt(e),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(e),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.FaceNormalsHelper=function(e,t,r,i){this.object=e,this.size=t||1;for(var o=r||16776960,a=i||1,n=new THREE.Geometry,s=0,h=this.object.geometry.faces.length;s<h;s++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:o,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var r=this.geometry.vertices,i=this.object.geometry.faces,o=this.object.matrixWorld,a=0,n=i.length;a<n;a++){var s=i[a];t.copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var h=2*a;r[h].copy(s.centroid).applyMatrix4(o),r[h+1].addVectors(r[h],t)}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.GridHelper=function(e,t){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var o=-e;o<=e;o+=t){r.vertices.push(new THREE.Vector3(-e,0,o),new THREE.Vector3(e,0,o),new THREE.Vector3(o,0,-e),new THREE.Vector3(o,0,e));var a=0===o?this.color1:this.color2;r.colors.push(a,a,a,a)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t,r,i){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var o=new THREE.SphereGeometry(t,4,2);o.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var a=0;a<8;a++)o.faces[a].color=this.colors[a<4?0:1];var n=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(o,n),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.getPositionFromMatrix(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new THREE.CylinderGeometry(0,1,1,8,1,!0);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(t,r),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),e.getPositionFromMatrix(this.light.matrixWorld),t.getPositionFromMatrix(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,r,i){this.object=e,this.size=t||1;for(var o=r||16711680,a=i||1,n=new THREE.Geometry,s=(e.geometry.vertices,e.geometry.faces),h=0,l=s.length;h<l;h++)for(var c=0,u=s[h].vertexNormals.length;c<u;c++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:o,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var i=this.geometry.vertices,o=this.object.geometry.vertices,a=this.object.geometry.faces,n=this.object.matrixWorld,s=0,h=0,l=a.length;h<l;h++)for(var c=a[h],u=0,p=c.vertexNormals.length;u<p;u++){var f=o[c[r[u]]],E=c.vertexNormals[u];i[s].copy(f).applyMatrix4(n),t.copy(E).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),t.add(i[s]),i[s+=1].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(e,t,r,i){this.object=e,this.size=t||1;for(var o=r||255,a=i||1,n=new THREE.Geometry,s=(e.geometry.vertices,e.geometry.faces),h=0,l=s.length;h<l;h++)for(var c=0,u=s[h].vertexTangents.length;c<u;c++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:o,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var i=this.geometry.vertices,o=this.object.geometry.vertices,a=this.object.geometry.faces,n=this.object.matrixWorld,s=0,h=0,l=a.length;h<l;h++)for(var c=a[h],u=0,p=c.vertexTangents.length;u<p;u++){var f=o[c[r[u]]],E=c.vertexTangents[u];i[s].copy(f).applyMatrix4(n),t.copy(E).transformDirection(n).multiplyScalar(this.size),t.add(i[s]),i[s+=1].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(e){for(var t=[0,0],r={},i=function(e,t){return e-t},o=["a","b","c","d"],a=new THREE.Geometry,n=e.geometry.vertices,s=e.geometry.faces,h=0,l=s.length;h<l;h++)for(var c=s[h],u=0;u<3;u++){t[0]=c[o[u]],t[1]=c[o[(u+1)%3]],t.sort(i);var p=t.toString();void 0===r[p]&&(a.vertices.push(n[t[0]]),a.vertices.push(n[t[1]]),r[p]=!0)}THREE.Line.call(this,a,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,r,i,o){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,o)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,r,i,o,a){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===a&&(a=1),void 0===o&&(o=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:a,color:o,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,r=this.lensFlares.length,i=2*-this.positionScreen.x,o=2*-this.positionScreen.y;for(e=0;e<r;e++)(t=this.lensFlares[e]).x=this.positionScreen.x+i*t.distance,t.y=this.positionScreen.y+o*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i=r-1,o=r/1;this.createAnimation("__default",0,i,o),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){var o={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=o,this.animationsList.push(o)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,r=/([a-z]+)(\d+)/,i={},o=this.geometry,a=0,n=o.morphTargets.length;a<n;a++){var s=o.morphTargets[a].name.match(r);if(s&&s.length>1){var h=s[1];s[2];i[h]||(i[h]={start:1/0,end:-1/0}),a<(l=i[h]).start&&(l.start=a),a>l.end&&(l.end=a),t||(t=h)}}for(var h in i){var l=i[h];this.createAnimation(h,l.start,l.end,e)}this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,r=this.animationsMap[e];return r&&(t=r.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,r=this.animationsMap[e];return r&&(t=r.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;t<r;t++){var i=this.animationsList[t];if(i.active){var o=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration));var a=i.startFrame+THREE.Math.clamp(Math.floor(i.time/o),0,i.length-1),n=i.weight;a!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*n,this.morphTargetInfluences[a]=0,i.lastFrame=i.currentFrame,i.currentFrame=a);var s=i.time%o/o;i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*n,this.morphTargetInfluences[i.lastFrame]=(1-s)*n}}},THREE.LensFlarePlugin=function(){var e,t,r,i={};function o(t,r){var i=e.createProgram(),o=e.createShader(e.FRAGMENT_SHADER),a=e.createShader(e.VERTEX_SHADER),n="precision "+r+" float;\n";return e.shaderSource(o,n+t.fragmentShader),e.shaderSource(a,n+t.vertexShader),e.compileShader(o),e.compileShader(a),e.attachShader(i,o),e.attachShader(i,a),e.linkProgram(i),i}this.init=function(a){e=a.context,t=a,r=a.getPrecision(),i.vertices=new Float32Array(16),i.faces=new Uint16Array(6);var n=0;i.vertices[n++]=-1,i.vertices[n++]=-1,i.vertices[n++]=0,i.vertices[n++]=0,i.vertices[n++]=1,i.vertices[n++]=-1,i.vertices[n++]=1,i.vertices[n++]=0,i.vertices[n++]=1,i.vertices[n++]=1,i.vertices[n++]=1,i.vertices[n++]=1,i.vertices[n++]=-1,i.vertices[n++]=1,i.vertices[n++]=0,i.vertices[n++]=1,n=0,i.faces[n++]=0,i.faces[n++]=1,i.faces[n++]=2,i.faces[n++]=0,i.faces[n++]=2,i.faces[n++]=3,i.vertexBuffer=e.createBuffer(),i.elementBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,i.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,i.vertices,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.elementBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i.faces,e.STATIC_DRAW),i.tempTexture=e.createTexture(),i.occlusionTexture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,i.tempTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.bindTexture(e.TEXTURE_2D,i.occlusionTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(i.hasVertexTexture=!1,i.program=o(THREE.ShaderFlares.lensFlare,r)):(i.hasVertexTexture=!0,i.program=o(THREE.ShaderFlares.lensFlareVertexTexture,r)),i.attributes={},i.uniforms={},i.attributes.vertex=e.getAttribLocation(i.program,"position"),i.attributes.uv=e.getAttribLocation(i.program,"uv"),i.uniforms.renderType=e.getUniformLocation(i.program,"renderType"),i.uniforms.map=e.getUniformLocation(i.program,"map"),i.uniforms.occlusionMap=e.getUniformLocation(i.program,"occlusionMap"),i.uniforms.opacity=e.getUniformLocation(i.program,"opacity"),i.uniforms.color=e.getUniformLocation(i.program,"color"),i.uniforms.scale=e.getUniformLocation(i.program,"scale"),i.uniforms.rotation=e.getUniformLocation(i.program,"rotation"),i.uniforms.screenPosition=e.getUniformLocation(i.program,"screenPosition")},this.render=function(r,o,a,n){var s=r.__webglFlares,h=s.length;if(h){var l,c,u,p,f,E=new THREE.Vector3,d=n/a,m=.5*a,g=.5*n,v=16/n,T=new THREE.Vector2(v*d,v),y=new THREE.Vector3(1,1,0),R=new THREE.Vector2(1,1),x=i.uniforms,H=i.attributes;for(e.useProgram(i.program),e.enableVertexAttribArray(i.attributes.vertex),e.enableVertexAttribArray(i.attributes.uv),e.uniform1i(x.occlusionMap,0),e.uniform1i(x.map,1),e.bindBuffer(e.ARRAY_BUFFER,i.vertexBuffer),e.vertexAttribPointer(H.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(H.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.elementBuffer),e.disable(e.CULL_FACE),e.depthMask(!1),l=0;l<h;l++)if(v=16/n,T.set(v*d,v),p=s[l],E.set(p.matrixWorld.elements[12],p.matrixWorld.elements[13],p.matrixWorld.elements[14]),E.applyMatrix4(o.matrixWorldInverse),E.applyProjection(o.projectionMatrix),y.copy(E),R.x=y.x*m+m,R.y=y.y*g+g,i.hasVertexTexture||R.x>0&&R.x<a&&R.y>0&&R.y<n)for(e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,i.tempTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,R.x-8,R.y-8,16,16,0),e.uniform1i(x.renderType,0),e.uniform2f(x.scale,T.x,T.y),e.uniform3f(x.screenPosition,y.x,y.y,y.z),e.disable(e.BLEND),e.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,i.occlusionTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,R.x-8,R.y-8,16,16,0),e.uniform1i(x.renderType,1),e.disable(e.DEPTH_TEST),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,i.tempTexture),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),p.positionScreen.copy(y),p.customUpdateCallback?p.customUpdateCallback(p):p.updateLensFlares(),e.uniform1i(x.renderType,2),e.enable(e.BLEND),c=0,u=p.lensFlares.length;c<u;c++)(f=p.lensFlares[c]).opacity>.001&&f.scale>.001&&(y.x=f.x,y.y=f.y,y.z=f.z,v=f.size*f.scale/n,T.x=v*d,T.y=v,e.uniform3f(x.screenPosition,y.x,y.y,y.z),e.uniform2f(x.scale,T.x,T.y),e.uniform1f(x.rotation,f.rotation),e.uniform1f(x.opacity,f.opacity),e.uniform3f(x.color,f.color.r,f.color.g,f.color.b),t.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),t.setTexture(f.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0));e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST),e.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,r,i,o,a,n=new THREE.Frustum,s=new THREE.Matrix4,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3;function u(e,t){var r=new THREE.DirectionalLight;r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=e.shadowCameraNear,r.shadowCameraFar=e.shadowCameraFar,r.shadowCameraLeft=e.shadowCameraLeft,r.shadowCameraRight=e.shadowCameraRight,r.shadowCameraBottom=e.shadowCameraBottom,r.shadowCameraTop=e.shadowCameraTop,r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t],r.shadowMapWidth=e.shadowCascadeWidth[t],r.shadowMapHeight=e.shadowCascadeHeight[t],r.pointsWorld=[],r.pointsFrustum=[];for(var i=r.pointsWorld,o=r.pointsFrustum,a=0;a<8;a++)i[a]=new THREE.Vector3,o[a]=new THREE.Vector3;var n=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return o[0].set(-1,-1,n),o[1].set(1,-1,n),o[2].set(-1,1,n),o[3].set(1,1,n),o[4].set(-1,-1,s),o[5].set(1,-1,s),o[6].set(-1,1,s),o[7].set(1,1,s),r}function p(e,t){var r=e.shadowCascadeArray[t];r.position.copy(e.position),r.target.position.copy(e.target.position),r.lookAt(r.target),r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t];var i=e.shadowCascadeNearZ[t],o=e.shadowCascadeFarZ[t],a=r.pointsFrustum;a[0].z=i,a[1].z=i,a[2].z=i,a[3].z=i,a[4].z=o,a[5].z=o,a[6].z=o,a[7].z=o}function f(e,t){var r=t.shadowCamera,i=t.pointsFrustum,o=t.pointsWorld;h.set(1/0,1/0,1/0),l.set(-1/0,-1/0,-1/0);for(var a=0;a<8;a++){var n=o[a];n.copy(i[a]),THREE.ShadowMapPlugin.__projector.unprojectVector(n,e),n.applyMatrix4(r.matrixWorldInverse),n.x<h.x&&(h.x=n.x),n.x>l.x&&(l.x=n.x),n.y<h.y&&(h.y=n.y),n.y>l.y&&(l.y=n.y),n.z<h.z&&(h.z=n.z),n.z>l.z&&(l.z=n.z)}r.left=h.x,r.right=l.x,r.top=l.y,r.bottom=h.y,r.updateProjectionMatrix()}this.init=function(n){e=n.context,t=n;var s=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(s.uniforms);r=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h}),i=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,skinning:!0}),a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),r._shadowPass=!0,i._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0},this.render=function(e,r){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,r)},this.update=function(h,l){var E,d,m,g,v,T,y,R,x,H,_,w,b,M,S,A=[],C=0;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),E=0,d=h.__lights.length;E<d;E++)if((b=h.__lights[E]).castShadow)if(b instanceof THREE.DirectionalLight&&b.shadowCascade)for(v=0;v<b.shadowCascadeCount;v++){var L;if(b.shadowCascadeArray[v])L=b.shadowCascadeArray[v];else{(L=u(b,v)).originalCamera=l;var P=new THREE.Gyroscope;P.position=b.shadowCascadeOffset,P.add(L),P.add(L.target),l.add(P),b.shadowCascadeArray[v]=L,console.log("Created virtualLight",L)}p(b,v),A[C]=L,C++}else A[C]=b,C++;for(E=0,d=A.length;E<d;E++){if(!(b=A[E]).shadowMap){var D=THREE.LinearFilter;t.shadowMapType===THREE.PCFSoftShadowMap&&(D=THREE.NearestFilter);var F={minFilter:D,magFilter:D,format:THREE.RGBAFormat};b.shadowMap=new THREE.WebGLRenderTarget(b.shadowMapWidth,b.shadowMapHeight,F),b.shadowMapSize=new THREE.Vector2(b.shadowMapWidth,b.shadowMapHeight),b.shadowMatrix=new THREE.Matrix4}if(!b.shadowCamera){if(b instanceof THREE.SpotLight)b.shadowCamera=new THREE.PerspectiveCamera(b.shadowCameraFov,b.shadowMapWidth/b.shadowMapHeight,b.shadowCameraNear,b.shadowCameraFar);else{if(!(b instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}b.shadowCamera=new THREE.OrthographicCamera(b.shadowCameraLeft,b.shadowCameraRight,b.shadowCameraTop,b.shadowCameraBottom,b.shadowCameraNear,b.shadowCameraFar)}h.add(b.shadowCamera),!0===h.autoUpdate&&h.updateMatrixWorld()}for(b.shadowCameraVisible&&!b.cameraHelper&&(b.cameraHelper=new THREE.CameraHelper(b.shadowCamera),b.shadowCamera.add(b.cameraHelper)),b.isVirtual&&L.originalCamera==l&&f(l,b),T=b.shadowMap,y=b.shadowMatrix,(R=b.shadowCamera).position.getPositionFromMatrix(b.matrixWorld),c.getPositionFromMatrix(b.target.matrixWorld),R.lookAt(c),R.updateMatrixWorld(),R.matrixWorldInverse.getInverse(R.matrixWorld),b.cameraHelper&&(b.cameraHelper.visible=b.shadowCameraVisible),b.shadowCameraVisible&&b.cameraHelper.update(),y.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),y.multiply(R.projectionMatrix),y.multiply(R.matrixWorldInverse),s.multiplyMatrices(R.projectionMatrix,R.matrixWorldInverse),n.setFromMatrix(s),t.setRenderTarget(T),t.clear(),m=0,g=(M=h.__webglObjects).length;m<g;m++)w=(_=M[m]).object,_.render=!1,w.visible&&w.castShadow&&((w instanceof THREE.Mesh||w instanceof THREE.ParticleSystem)&&w.frustumCulled&&!n.intersectsObject(w)||(w._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,w.matrixWorld),_.render=!0));var V,U,z;for(m=0,g=M.length;m<g;m++)(_=M[m]).render&&(w=_.object,x=_.buffer,V=(S=w).material instanceof THREE.MeshFaceMaterial?S.material.materials[0]:S.material,U=w.geometry.morphTargets.length>0&&V.morphTargets,z=w instanceof THREE.SkinnedMesh&&V.skinning,H=w.customDepthMaterial?w.customDepthMaterial:z?U?a:o:U?i:r,x instanceof THREE.BufferGeometry?t.renderBufferDirect(R,h.__lights,null,H,x,w):t.renderBuffer(R,h.__lights,null,H,x,w));for(m=0,g=(M=h.__webglObjectsImmediate).length;m<g;m++)(w=(_=M[m]).object).visible&&w.castShadow&&(w._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,w.matrixWorld),t.renderImmediateObject(R,h.__lights,null,r,w))}var B=t.getClearColor(),N=t.getClearAlpha();e.clearColor(B.r,B.g,B.b,N),e.enable(e.BLEND),t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){var e,t,r,i={};function o(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}this.init=function(o){e=o.context,t=o,r=o.getPrecision(),i.vertices=new Float32Array(16),i.faces=new Uint16Array(6);var a,n,s,h,l,c,u=0;i.vertices[u++]=-1,i.vertices[u++]=-1,i.vertices[u++]=0,i.vertices[u++]=0,i.vertices[u++]=1,i.vertices[u++]=-1,i.vertices[u++]=1,i.vertices[u++]=0,i.vertices[u++]=1,i.vertices[u++]=1,i.vertices[u++]=1,i.vertices[u++]=1,i.vertices[u++]=-1,i.vertices[u++]=1,i.vertices[u++]=0,i.vertices[u++]=1,u=0,i.faces[u++]=0,i.faces[u++]=1,i.faces[u++]=2,i.faces[u++]=0,i.faces[u++]=2,i.faces[u++]=3,i.vertexBuffer=e.createBuffer(),i.elementBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,i.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,i.vertices,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.elementBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i.faces,e.STATIC_DRAW),i.program=(a=THREE.ShaderSprite.sprite,n=r,s=e.createProgram(),h=e.createShader(e.FRAGMENT_SHADER),l=e.createShader(e.VERTEX_SHADER),c="precision "+n+" float;\n",e.shaderSource(h,c+a.fragmentShader),e.shaderSource(l,c+a.vertexShader),e.compileShader(h),e.compileShader(l),e.attachShader(s,h),e.attachShader(s,l),e.linkProgram(s),s),i.attributes={},i.uniforms={},i.attributes.position=e.getAttribLocation(i.program,"position"),i.attributes.uv=e.getAttribLocation(i.program,"uv"),i.uniforms.uvOffset=e.getUniformLocation(i.program,"uvOffset"),i.uniforms.uvScale=e.getUniformLocation(i.program,"uvScale"),i.uniforms.rotation=e.getUniformLocation(i.program,"rotation"),i.uniforms.scale=e.getUniformLocation(i.program,"scale"),i.uniforms.alignment=e.getUniformLocation(i.program,"alignment"),i.uniforms.color=e.getUniformLocation(i.program,"color"),i.uniforms.map=e.getUniformLocation(i.program,"map"),i.uniforms.opacity=e.getUniformLocation(i.program,"opacity"),i.uniforms.useScreenCoordinates=e.getUniformLocation(i.program,"useScreenCoordinates"),i.uniforms.sizeAttenuation=e.getUniformLocation(i.program,"sizeAttenuation"),i.uniforms.screenPosition=e.getUniformLocation(i.program,"screenPosition"),i.uniforms.modelViewMatrix=e.getUniformLocation(i.program,"modelViewMatrix"),i.uniforms.projectionMatrix=e.getUniformLocation(i.program,"projectionMatrix"),i.uniforms.fogType=e.getUniformLocation(i.program,"fogType"),i.uniforms.fogDensity=e.getUniformLocation(i.program,"fogDensity"),i.uniforms.fogNear=e.getUniformLocation(i.program,"fogNear"),i.uniforms.fogFar=e.getUniformLocation(i.program,"fogFar"),i.uniforms.fogColor=e.getUniformLocation(i.program,"fogColor"),i.uniforms.alphaTest=e.getUniformLocation(i.program,"alphaTest")},this.render=function(r,a,n,s){var h=r.__webglSprites,l=h.length;if(l){var c=i.attributes,u=i.uniforms,p=s/n,f=.5*n,E=.5*s;e.useProgram(i.program),e.enableVertexAttribArray(c.position),e.enableVertexAttribArray(c.uv),e.disable(e.CULL_FACE),e.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,i.vertexBuffer),e.vertexAttribPointer(c.position,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(c.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.elementBuffer),e.uniformMatrix4fv(u.projectionMatrix,!1,a.projectionMatrix.elements),e.activeTexture(e.TEXTURE0),e.uniform1i(u.map,0);var d=0,m=0,g=r.fog;g?(e.uniform3f(u.fogColor,g.color.r,g.color.g,g.color.b),g instanceof THREE.Fog?(e.uniform1f(u.fogNear,g.near),e.uniform1f(u.fogFar,g.far),e.uniform1i(u.fogType,1),d=1,m=1):g instanceof THREE.FogExp2&&(e.uniform1f(u.fogDensity,g.density),e.uniform1i(u.fogType,2),d=2,m=2)):(e.uniform1i(u.fogType,0),d=0,m=0);var v,T,y,R,x,H=[];for(v=0;v<l;v++)y=(T=h[v]).material,T.visible&&0!==y.opacity&&(y.useScreenCoordinates?T.z=-T.position.z:(T._modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,T.matrixWorld),T.z=-T._modelViewMatrix.elements[14]));for(h.sort(o),v=0;v<l;v++)y=(T=h[v]).material,T.visible&&0!==y.opacity&&y.map&&y.map.image&&y.map.image.width&&(e.uniform1f(u.alphaTest,y.alphaTest),!0===y.useScreenCoordinates?(e.uniform1i(u.useScreenCoordinates,1),e.uniform3f(u.screenPosition,(T.position.x*t.devicePixelRatio-f)/f,(E-T.position.y*t.devicePixelRatio)/E,Math.max(0,Math.min(1,T.position.z))),H[0]=t.devicePixelRatio,H[1]=t.devicePixelRatio):(e.uniform1i(u.useScreenCoordinates,0),e.uniform1i(u.sizeAttenuation,y.sizeAttenuation?1:0),e.uniformMatrix4fv(u.modelViewMatrix,!1,T._modelViewMatrix.elements),H[0]=1,H[1]=1),d!==(x=r.fog&&y.fog?m:0)&&(e.uniform1i(u.fogType,x),d=x),R=1/(y.scaleByViewport?s:1),H[0]*=R*p*T.scale.x,H[1]*=R*T.scale.y,e.uniform2f(u.uvScale,y.uvScale.x,y.uvScale.y),e.uniform2f(u.uvOffset,y.uvOffset.x,y.uvOffset.y),e.uniform2f(u.alignment,y.alignment.x,y.alignment.y),e.uniform1f(u.opacity,y.opacity),e.uniform3f(u.color,y.color.r,y.color.g,y.color.b),e.uniform1f(u.rotation,T.rotation),e.uniform2fv(u.scale,H),t.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),t.setDepthTest(y.depthTest),t.setDepthWrite(y.depthWrite),t.setTexture(y.map,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0));e.enable(e.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,r,i,o,a,n=new THREE.Frustum,s=new THREE.Matrix4;this.init=function(n){e=n.context,t=n;var s=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(s.uniforms);r=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h}),i=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,skinning:!0}),a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),r._shadowPass=!0,i._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(h,l){var c,u,p,f,E,d,m,g,v,T,y;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),!0===h.autoUpdate&&h.updateMatrixWorld(),l.matrixWorldInverse.getInverse(l.matrixWorld),s.multiplyMatrices(l.projectionMatrix,l.matrixWorldInverse),n.setFromMatrix(s),t.setRenderTarget(this.renderTarget),t.clear(),c=0,u=(m=h.__webglObjects).length;c<u;c++)d=(E=m[c]).object,E.render=!1,d.visible&&((d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem)&&d.frustumCulled&&!n.intersectsObject(d)||(d._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,d.matrixWorld),E.render=!0));for(c=0,u=m.length;c<u;c++)if((E=m[c]).render){if(d=E.object,p=E.buffer,d instanceof THREE.ParticleSystem&&!d.customDepthMaterial)continue;(g=(y=d).material instanceof THREE.MeshFaceMaterial?y.material.materials[0]:y.material)&&t.setMaterialFaces(d.material),v=d.geometry.morphTargets.length>0&&g.morphTargets,T=d instanceof THREE.SkinnedMesh&&g.skinning,f=d.customDepthMaterial?d.customDepthMaterial:T?v?a:o:v?i:r,p instanceof THREE.BufferGeometry?t.renderBufferDirect(l,h.__lights,null,f,p,d):t.renderBuffer(l,h.__lights,null,f,p,d)}for(c=0,u=(m=h.__webglObjectsImmediate).length;c<u;c++)(d=(E=m[c]).object).visible&&(d._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,d.matrixWorld),t.renderImmediateObject(l,h.__lights,null,r,d));var R=t.getClearColor(),x=t.getClearAlpha();e.clearColor(R.r,R.g,R.b,x),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}};